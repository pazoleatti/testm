import com.aplana.sbrf.taxaccounting.model.Column
import com.aplana.sbrf.taxaccounting.model.ColumnType
import com.aplana.sbrf.taxaccounting.model.FormStyle
import com.aplana.sbrf.taxaccounting.model.FormTemplate
import com.aplana.sbrf.taxaccounting.model.FormType
import org.apache.commons.io.IOUtils

/**
 # Инструкция:
 Вставить текст данного скрипта на странице, соответствующей ссылке с окончанием:
 .../gwtapp/#!scriptExecution
 Нажать "Выполнить".

 */

try {
    // id типа формы, имя типа формы, вид налога(I, T, V, D, P, E), включать в ИФРС(флаг), имя ИФРС
    FormType formType = new FormType()
    formType.setId(%1%)
    formType.setName('%2%')
    formType.setTaxType(%3%)
    formType.setIsIfrs(%4%)
    formType.setIfrsName('%5%')
    // id шаблона формы, имя шаблона короткое, имя шаблона полное, год версии, ежемесячность(флаг), код
    FormTemplate formTemplate = new FormTemplate()
    formTemplate.setId(%6%)
    formTemplate.setFixedRows(%7%)
    formTemplate.setName('%8%')
    formTemplate.setFullName('%9%')
    formTemplate.setVersion(Date.parse('dd.MM.yyyy', '%10%'))
    formTemplate.setMonthly(%11%)
    formTemplate.setHeader('%12%')

    def form_type_id = formType.id
    def form_template_id = formTemplate.id

    def rs = namedParameterJdbcTemplate.queryForObject("SELECT count(id) from FORM_TYPE where id = $form_type_id", [:], Integer.class)
    if (rs == 1) {
        logger.info("Макет НФ с данным id = $form_type_id уже существует в системе!")
        return
    }

    rs = namedParameterJdbcTemplate.queryForObject("SELECT count(id) from FORM_TEMPLATE where id = $form_template_id", [:], Integer.class)
    if (rs == 1) {
        logger.info("Версия макета НФ с данным id = $form_template_id уже существует в системе!")
        return
    }

    addTypeTemplate(formType, formTemplate)

    List<Column> formColumns = new ArrayList<>()

    //Добавление колонок
    // NAME, ALIAS, TYPE, WIDTH, PRECISION, MAX_LENGTH, CHECKING, ATTRIBUTE_ID, FORMAT, FILTER, PARENT_COLUMN_ID, ATTRIBUTE_ID2, NUMERATION_ROW
    %13%
    formTemplate.getColumns().addAll(formColumns)
    columnDaoImpl.createFormColumns(formColumns, formTemplate)
    logger.info("К версии макета добавлены колонки")

    List<FormStyle> formStyles = new ArrayList<>()

    %14%
    formTemplate.getStyles().addAll(formStyles)
    formStyleDaoImpl.saveFormStyles(formTemplate)
    logger.info("К версии макета добавлены стили")

    String longString

    %15%

    addLongText(form_template_id, longString, 'DATA_ROWS')
    logger.info("К версии макета добавлены фиксированные строки")

    %16%

    addLongText(form_template_id, longString, 'DATA_HEADERS')
    logger.info("К версии макета добавлен заголовок")

    %17%

    addLongText(form_template_id, longString, 'SCRIPT')
    logger.info("К версии макета добавлен скрипт")

} catch (Exception ex) {
    logger.error("Error: ${ex.getLocalizedMessage()}. Все изменения откатаны")
}

def void addTypeTemplate(FormType formType, FormTemplate formTemplate) {
    def form_type_id = formType.id ?: ""
    def form_type_name = formType.name ?: ""
    def form_type_tax_type = formType.taxType.code ?: ""
    def form_type_is_ifrs = formType.isIfrs ? 1 : 0
    def form_type_ifrs_name = formType.ifrsName ?: ""

    def form_template_id = formTemplate.id ?: ""
    def form_template_is_fixed_rows = formTemplate.isFixedRows() ? 1 : 0
    def form_template_name = formTemplate.name ?: ""
    def form_template_fullname = formTemplate.fullName ?: ""
    def form_template_version = formTemplate.version.format("dd.MM.yy")
    def form_template_monthly = formTemplate.isMonthly() ? 1 : 0
    def form_template_header = formTemplate.header ?: ""

    String formTypeSql = "INSERT INTO FORM_TYPE (ID, NAME, TAX_TYPE, STATUS, IS_IFRS, IFRS_NAME) VALUES " +
            "('$form_type_id', '$form_type_name', '$form_type_tax_type', '0', '$form_type_is_ifrs', '$form_type_ifrs_name')"
    namedParameterJdbcTemplate.update(formTypeSql, [:])

    String formTemplateSql = "INSERT INTO FORM_TEMPLATE (ID, TYPE_ID, FIXED_ROWS, NAME, FULLNAME, VERSION, STATUS, MONTHLY, HEADER) VALUES " +
            "($form_template_id, '$form_type_id', '$form_template_is_fixed_rows', '$form_template_name', '$form_template_fullname', TO_DATE('$form_template_version', 'DD.MM.RR'), '1', '$form_template_monthly', '$form_template_header')"
    namedParameterJdbcTemplate.update(formTemplateSql, [:])

    logger.info("Создан тип НФ с версией макета, но без колонок, стилей, заголовка и фиксированных строк")
}

def void addLongText (def form_template_id, String longString, String alias) {
    final int MAX_LENGTH = 3000
    namedParameterJdbcTemplate.update("UPDATE FORM_TEMPLATE SET $alias = null where id = $form_template_id", [:])
    int start = 0
    while (start < longString.length()) {
        int end = (start + MAX_LENGTH) < longString.length() ? (start + MAX_LENGTH) : longString.length()
        String text = longString.substring(start, end)
       namedParameterJdbcTemplate.update("UPDATE FORM_TEMPLATE SET $alias = $alias || '" +text + "' where id = $form_template_id", [:])
        start += MAX_LENGTH
    }
    namedParameterJdbcTemplate.update("UPDATE FORM_TEMPLATE SET $alias = base64decode($alias) where id = $form_template_id", [:])
}