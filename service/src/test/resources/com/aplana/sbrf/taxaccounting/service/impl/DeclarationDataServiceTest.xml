<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <import resource="classpath:testServiceContext.xml"/>

    <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.aplana.sbrf.taxaccounting.service.DepartmentReportPeriodService"/>
    </bean>
    <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.aplana.sbrf.taxaccounting.service.DeclarationDataScriptingService"/>
    </bean>
    <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.aplana.sbrf.taxaccounting.service.DeclarationDataAccessService"/>
    </bean>
    <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.aplana.sbrf.taxaccounting.service.DeclarationTemplateService"/>
    </bean>
    <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.aplana.sbrf.taxaccounting.service.PeriodService"/>
    </bean>
    <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.aplana.sbrf.taxaccounting.core.api.LockDataService"/>
    </bean>
    <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.aplana.sbrf.taxaccounting.service.LogBusinessService"/>
    </bean>
    <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.aplana.sbrf.taxaccounting.service.AuditService"/>
    </bean>
    <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.aplana.sbrf.taxaccounting.service.LogEntryService"/>
    </bean>
    <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.aplana.sbrf.taxaccounting.service.BlobDataService"/>
    </bean>
    <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.aplana.sbrf.taxaccounting.service.TAUserService"/>
    </bean>
    <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.aplana.sbrf.taxaccounting.service.ReportService"/>
    </bean>
    <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.aplana.sbrf.taxaccounting.service.ValidateXMLService"/>
    </bean>
    <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.aplana.sbrf.taxaccounting.service.DepartmentService"/>
    </bean>
    <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.aplana.sbrf.taxaccounting.service.SourceService"/>
    </bean>
    <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.aplana.sbrf.taxaccounting.refbook.RefBookFactory"/>
    </bean>
    <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.aplana.sbrf.taxaccounting.service.DeclarationTypeService"/>
    </bean>
    <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.aplana.sbrf.taxaccounting.service.AsyncManager"/>
    </bean>
    <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.aplana.sbrf.taxaccounting.service.refbook.RefBookAsnuService"/>
    </bean>
    <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.aplana.sbrf.taxaccounting.service.refbook.RefBookDepartmentDataService"/>
    </bean>
    <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.aplana.sbrf.taxaccounting.service.DeclarationDataSearchService"/>
    </bean>
    <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.aplana.sbrf.taxaccounting.service.NdflPersonService"/>
    </bean>
    <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.aplana.sbrf.taxaccounting.service.NotificationService"/>
    </bean>

    <bean id="declarationDataService" class="com.aplana.sbrf.taxaccounting.service.impl.DeclarationDataServiceImpl" />

    <bean class="org.mockito.Mockito" factory-method="mock" id="permissionDaoFactory">
        <constructor-arg value="com.aplana.sbrf.taxaccounting.dao.impl.PermissionDaoFactory"/>
    </bean>

    <bean id="declarationDataPermissionFactory" class="com.aplana.sbrf.taxaccounting.permissions.BasePermissionFactory">
        <constructor-arg
                value="com.aplana.sbrf.taxaccounting.permissions.DeclarationDataPermission"/>
    </bean>
    <bean id="permissionEvaluator" class="com.aplana.sbrf.taxaccounting.permissions.BasePermissionEvaluator">
        <constructor-arg ref="permissionDaoFactory"/>
        <property name="permissionFactoryRegistry">
            <map>
                <entry key="com.aplana.sbrf.taxaccounting.model.DeclarationData" value-ref="declarationDataPermissionFactory"/>
            </map>
        </property>
    </bean>
    <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.aplana.sbrf.taxaccounting.permissions.DeclarationDataPermissionSetter"/>
        <property name="permissionFactory" ref="declarationDataPermissionFactory"/>
        <property name="permissionEvaluator" ref="permissionEvaluator"/>
    </bean>

</beans>