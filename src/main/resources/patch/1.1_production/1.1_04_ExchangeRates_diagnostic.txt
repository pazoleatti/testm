import com.aplana.sbrf.taxaccounting.model.log.Logger;
import com.aplana.sbrf.taxaccounting.model.log.LogLevel;
import com.aplana.sbrf.taxaccounting.model.log.LogEntry;

Logger newLogger = new Logger() {
  public void info(String message, Object... args) {
  log(LogLevel.INFO, message, args);
 }
  
  public void log(LogLevel level, String message, Object...args) {
 String extMessage = String.format(message, args);
 if (messageDecorator != null) {
   extMessage = messageDecorator.getDecoratedMessage(extMessage);
 }
 LogEntry entry = new LogEntry(level, extMessage);
 entries.add(entry);
  }
};
logger.entries = newLogger.entries

try {
    def connection = dataSource.connection
    def stmt = connection.createStatement()
  
  	def cnt = stmt.executeQuery("""select count(*) from ref_book_record where ref_book_id = 22""")
  	while (cnt.next()) {
		  newLogger.info("Cnt all records per the ref_book: ${cnt.getInt(1)}" 
					 )
	  	}
	
	def res = stmt.executeQuery("""
						WITH t AS (
							  SELECT r.id,
									 r.record_id,
									 r.version,
									 r.status,
									 v.attribute_id,
									 CASE
									   WHEN a.TYPE = 4 THEN
										m.string_value
									   ELSE
										TRIM(to_char(v.number_value, '9999999990.9999'))
									 END vl
							  FROM   ref_book_record r
							  JOIN   ref_book_value v ON r.id = v.record_id
							  JOIN   ref_book_attribute a ON a.id = v.attribute_id
							  LEFT   JOIN ref_book_value m ON m.record_id = v.reference_value AND
															  m.attribute_id = a.attribute_id
							  WHERE  r.ref_book_id = 22)
							SELECT *
							FROM   t pivot(MAX(vl) FOR attribute_id IN (80 "CODE_LETTER", 82 "CODE_NUMBER", 83 "NAME", 81 "RATE"))
							ORDER  BY record_id, version
	""")
	  	while (res.next()) {
		  newLogger.info("${res.getInt(1)};${res.getInt(2)};${res.getDate(3)};${res.getInt(4)};${res.getString(5)};${res.getString(6)};${res.getString(7)};${res.getString(8)}" 
					 )
	  	}
  	
    connection.close()
} catch (Exception ex) {
    logger.error("Error: ${ex.getLocalizedMessage()}")
}