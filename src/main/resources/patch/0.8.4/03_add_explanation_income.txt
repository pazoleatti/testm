import com.aplana.sbrf.taxaccounting.model.Column
import com.aplana.sbrf.taxaccounting.model.ColumnType
import com.aplana.sbrf.taxaccounting.model.FormStyle
import com.aplana.sbrf.taxaccounting.model.FormTemplate
import com.aplana.sbrf.taxaccounting.model.FormType
import org.apache.commons.io.IOUtils

/**
 Создает макет НФ, кроме таблицы для хранения данных
 # Инструкция:
 Вставить текст данного скрипта на странице, соответствующей ссылке с окончанием:
 .../gwtapp/#!scriptExecution
 Нажать "Выполнить".

 */

boolean createType = true
boolean createTemplate = true
boolean addColumns = true
boolean addStyles = true
boolean addDataRows = true
boolean addDataHeaders = true
boolean addScript = true

try {
    // id типа формы, имя типа формы, вид налога(I, T, V, D, P, E), включать в ИФРС(флаг), имя ИФРС
    FormType formType = new FormType()
    formType.setId(851)
    formType.setName('Таблица 1. Пояснение отклонений от ОФР в простом регистре налогового учёта «Доходы»')
    formType.setTaxType(TaxType.INCOME)
    formType.setIsIfrs(false)
    formType.setIfrsName('')
    formType.setCode('')
    // id шаблона формы, имя шаблона короткое, имя шаблона полное, год версии, ежемесячность(флаг), код
    FormTemplate formTemplate = new FormTemplate()
    formTemplate.setId(851)
    formTemplate.setFixedRows(false)
    formTemplate.setName('Таблица 1. Пояснение отклонений от ОФР в простом регистре налогового учёта «Доходы»')
    formTemplate.setFullName('Таблица 1. Пояснение отклонений от ОФР в простом регистре налогового учёта «Доходы»')
    formTemplate.setVersion(Date.parse('dd.MM.yyyy', '01.01.2016'))
    formTemplate.setMonthly(false)
    formTemplate.setHeader('')
    formTemplate.setComparative(false)
    formTemplate.setAccruing(false)
    formTemplate.setUpdating(false)

    def form_type_id = formType.id
    def form_template_id = formTemplate.id

    def rs = namedParameterJdbcTemplate.queryForObject("SELECT count(id) from FORM_TYPE where id = $form_type_id", [:], Integer.class)
    if (rs == 1) {
        logger.info("Макет НФ с данным id = $form_type_id уже существует в системе!")
        if (createType) {
            return
        }
    }

    rs = namedParameterJdbcTemplate.queryForObject("SELECT count(id) from FORM_TEMPLATE where id = $form_template_id", [:], Integer.class)
    if (rs == 1) {
        logger.info("Версия макета НФ с данным id = $form_template_id уже существует в системе!")
        if (createTemplate) {
            return
        }
    }

    addTypeTemplate(formType, formTemplate, createType, createTemplate)

    List<Column> formColumns = new ArrayList<>()
	def referenceColumnMap = [:]

    //Добавление колонок
    // NAME, ALIAS, TYPE, WIDTH, PRECISION, MAX_LENGTH, CHECKING, ATTRIBUTE_ID, FORMAT, FILTER, PARENT_COLUMN_ID, ATTRIBUTE_ID2, NUMERATION_ROW
    if (addColumns) {
        def Column formColumn = new AutoNumerationColumn()
        formColumn.setOrder(1)
        formColumn.setName('№ пп.')
        formColumn.setAlias('rowNum')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Автонумеруемая графа')})
        formColumn.setWidth(5)
        formColumn.setChecking(false)
        formColumn.setNumerationType(NumerationType.getById(0))
        formColumns.add(formColumn)

        formColumn = new RefBookColumn()
        formColumn.setOrder(2)
        formColumn.setName('КНУ')
        formColumn.setAlias('code')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Справочник')})
        formColumn.setWidth(10)
        formColumn.setChecking(false)
        formColumn.setRefBookAttributeId(140)
        formColumn.setRefBookAttributeId2(null)
        formColumn.setNameAttributeId(140)
        formColumn.setFilter('' ?: null)
        formColumns.add(formColumn)

        formColumn = new ReferenceColumn()
        formColumn.setOrder(3)
        formColumn.setName('Символ ОФР')
        formColumn.setAlias('symbol')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Зависимая графа')})
        formColumn.setWidth(15)
        formColumn.setChecking(false)
        formColumn.setParentAlias('symbol')
        formColumn.setRefBookAttributeId(144)
        formColumn.setRefBookAttributeId2(null)
        referenceColumnMap['symbol'] = 'code'
        formColumns.add(formColumn)

        formColumn = new NumericColumn()
        formColumn.setOrder(4)
        formColumn.setName('Сумма отклонения данных в РНУ-4 с данными бухгалтерского учёта')
        formColumn.setAlias('sum')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Число')})
        formColumn.setWidth(10)
        formColumn.setChecking(false)
        formColumn.setPrecision(2)
        formColumn.setMaxLength(17)
        formColumns.add(formColumn)

        formColumn = new StringColumn()
        formColumn.setOrder(5)
        formColumn.setName('Пояснение')
        formColumn.setAlias('explanation')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Строка')})
        formColumn.setWidth(10)
        formColumn.setChecking(false)
        formColumn.setMaxLength(255)
        formColumn.setPrevLength(0)
        formColumns.add(formColumn)


        formTemplate.getColumns().addAll(formColumns)
        columnDaoImpl.createFormColumns(formColumns, formTemplate)

	  	referenceColumnMap.each { alias, parentAlias ->
			def column = formColumns.find{ it.alias == alias }
			if (column != null) {
				column.setParentAlias(parentAlias)
			} else {
				logger.error("Родительская колонка с псевдонимом $parentAlias не обнаружена!")
			}
		}

        if (!referenceColumnMap.isEmpty()) {
            columnDaoImpl.updateFormColumns(formColumns, formTemplate)
        }

        logger.info("К версии макета добавлены колонки")
    }

    List<FormStyle> formStyles = new ArrayList<>()

    if (addStyles) {
        def FormStyle formStyle = new FormStyle()
        formStyle.setAlias('Редактируемая')
        formStyle.setBackColor(Color.getById(3))
        formStyle.setBold(false)
        formStyle.setFontColor(Color.getById(0))
        formStyle.setItalic(false)
        formStyles.add(formStyle)

        formStyle = new FormStyle()
        formStyle.setAlias('Корректировка-добавлено')
        formStyle.setBackColor(Color.getById(12))
        formStyle.setBold(false)
        formStyle.setFontColor(Color.getById(0))
        formStyle.setItalic(false)
        formStyles.add(formStyle)

        formStyle = new FormStyle()
        formStyle.setAlias('Корректировка-удалено')
        formStyle.setBackColor(Color.getById(8))
        formStyle.setBold(false)
        formStyle.setFontColor(Color.getById(0))
        formStyle.setItalic(false)
        formStyles.add(formStyle)

        formStyle = new FormStyle()
        formStyle.setAlias('Корректировка-без изменений')
        formStyle.setBackColor(Color.getById(6))
        formStyle.setBold(false)
        formStyle.setFontColor(Color.getById(0))
        formStyle.setItalic(false)
        formStyles.add(formStyle)

        formStyle = new FormStyle()
        formStyle.setAlias('Корректировка-изменено')
        formStyle.setBackColor(Color.getById(4))
        formStyle.setBold(true)
        formStyle.setFontColor(Color.getById(10))
        formStyle.setItalic(false)
        formStyles.add(formStyle)

        formStyle = new FormStyle()
        formStyle.setAlias('Контрольные суммы')
        formStyle.setBackColor(Color.getById(2))
        formStyle.setBold(true)
        formStyle.setFontColor(Color.getById(0))
        formStyle.setItalic(false)
        formStyles.add(formStyle)

        formStyle = new FormStyle()
        formStyle.setAlias('Автозаполняемая')
        formStyle.setBackColor(Color.getById(4))
        formStyle.setBold(true)
        formStyle.setFontColor(Color.getById(13))
        formStyle.setItalic(false)
        formStyles.add(formStyle)


        formTemplate.getStyles().addAll(formStyles)
        formStyleDaoImpl.saveFormStyles(formTemplate)
        logger.info("К версии макета добавлены стили")
    }

    String longString = ''

    if (addDataRows) {
        longString += 'PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz48cm93cy8+'

        addLongText(form_template_id, longString, 'DATA_ROWS')
        logger.info("К версии макета добавлены фиксированные строки")
    }

    longString = ''
    if (addDataHeaders) {
        longString += 'PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxyb3dzPg0KICAgIDxyb3cgYWxpYXM9IiI+DQogICAgICAgIDxjZWxsIGFsaWFzPSJyb3dOdW0iIGNvbFNwYW49IjEiIHJvd1NwYW49IjEiIHZhbHVlPSLihJYg0L/Qvy4iLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9ImNvZGUiIGNvbFNwYW49IjEiIHJvd1NwYW49IjEiIHZhbHVlPSLQmtCd0KMiLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9InN5bWJvbCIgY29sU3Bhbj0iMSIgcm93U3Bhbj0iMSIgdmFsdWU9ItCh0LjQvNCy0L7QuyDQntCk0KAiLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9InN1bSIgY29sU3Bhbj0iMSIgcm93U3Bhbj0iMSIgdmFsdWU9ItCh0YPQvNC80LAg0L7RgtC60LvQvtC90LXQvdC40Y8g0LTQsNC90L3Ri9GFINCyINCg0J3Qoy00INGBINC00LDQvdC90YvQvNC4INCx0YPRhdCz0LDQu9GC0LXRgNGB0LrQvtCz0L4g0YPRh9GR0YLQsCIvPg0KICAgICAgICA8Y2VsbCBhbGlhcz0iZXhwbGFuYXRpb24iIGNvbFNwYW49IjEiIHJvd1NwYW49IjEiIHZhbHVlPSLQn9C+0Y/RgdC90LXQvdC40LUiLz4NCiAgICA8L3Jvdz4NCiAgICA8cm93IGFsaWFzPSIiPg0KICAgICAgICA8Y2VsbCBhbGlhcz0icm93TnVtIiBjb2xTcGFuPSIxIiByb3dTcGFuPSIxIiB2YWx1ZT0iMSIvPg0KICAgICAgICA8Y2VsbCBhbGlhcz0iY29kZSIgY29sU3Bhbj0iMSIgcm93U3Bhbj0iMSIgdmFsdWU9IjIiLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9InN5bWJvbCIgY29sU3Bhbj0iMSIgcm93U3Bhbj0iMSIgdmFsdWU9IjMiLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9InN1bSIgY29sU3Bhbj0iMSIgcm93U3Bhbj0iMSIgdmFsdWU9IjQiLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9ImV4cGxhbmF0aW9uIiBjb2xTcGFuPSIxIiByb3dTcGFuPSIxIiB2YWx1ZT0iNSIvPg0KICAgIDwvcm93Pg0KPC9yb3dzPg=='

        addLongText(form_template_id, longString, 'DATA_HEADERS')
        logger.info("К версии макета добавлен заголовок")
    }

    longString = ''
    if (addScript) {
        longString += ''

        addLongText(form_template_id, longString, 'SCRIPT')
        logger.info("К версии макета добавлен скрипт")
    }

} catch (Exception ex) {
    logger.error("Error: ${ex.getLocalizedMessage()}. Все изменения откатаны")
}

def void addTypeTemplate(FormType formType, FormTemplate formTemplate, boolean createType, boolean createTemplate) {
    def form_type_id = formType.id ?: ""
    def form_type_name = formType.name ?: ""
    def form_type_tax_type = formType.taxType.code ?: ""
    def form_type_is_ifrs = formType.isIfrs ? 1 : 0
    def form_type_ifrs_name = formType.ifrsName ?: ""
    def form_type_ifrs_code = formType.code ?: ""

    def form_template_id = formTemplate.id ?: ""
    def form_template_is_fixed_rows = formTemplate.isFixedRows() ? 1 : 0
    def form_template_name = formTemplate.name ?: ""
    def form_template_fullname = formTemplate.fullName ?: ""
    def form_template_version = formTemplate.version.format("dd.MM.yy")
    def form_template_monthly = formTemplate.isMonthly() ? 1 : 0
    def form_template_comparative = formTemplate.isComparative() ? 1 : 0
    def form_template_header = formTemplate.header ?: ""
    def form_template_accruing = formTemplate.isAccruing() ? 1 : 0
    def form_template_updating = formTemplate.isUpdating() ? 1 : 0

    String formTypeSql = "INSERT INTO FORM_TYPE (ID, NAME, TAX_TYPE, STATUS, IS_IFRS, IFRS_NAME, CODE) VALUES " +
            "('$form_type_id', '$form_type_name', '$form_type_tax_type', '0', '$form_type_is_ifrs', '$form_type_ifrs_name', '$form_type_ifrs_code')"
    if (createType) {
        namedParameterJdbcTemplate.update(formTypeSql, [:])
        logger.info("Создан тип НФ с id = $form_type_id без версии макета, колонок, стилей, заголовка, фиксированных строк и скрипта")
    }

    String formTemplateSql = "INSERT INTO FORM_TEMPLATE (ID, TYPE_ID, FIXED_ROWS, NAME, FULLNAME, VERSION, STATUS, MONTHLY, HEADER, COMPARATIVE, ACCRUING, UPDATING) VALUES " +
            "($form_template_id, '$form_type_id', '$form_template_is_fixed_rows', '$form_template_name', '$form_template_fullname', TO_DATE('$form_template_version', 'DD.MM.RR'), '1', '$form_template_monthly', '$form_template_header', '$form_template_comparative', '$form_template_accruing', '$form_template_updating')"
    if (createTemplate) {
        namedParameterJdbcTemplate.update(formTemplateSql, [:])
        logger.info("Создан тип НФ с id = $form_template_id для версии макета с id = $form_type_id, но без колонок, стилей, заголовка, фиксированных строк и скрипта")
    }
}

def void addLongText (def form_template_id, String longString, String alias) {
    final int MAX_LENGTH = 2000
    namedParameterJdbcTemplate.update("UPDATE FORM_TEMPLATE SET $alias = null where id = $form_template_id", [:])
    int start = 0
    longString = new String(longString.decodeBase64(), "UTF-8")
    while (start < longString.length()) {
        int end = (start + MAX_LENGTH) < longString.length() ? (start + MAX_LENGTH) : longString.length()
        String text = longString.substring(start, end)
       namedParameterJdbcTemplate.update('UPDATE FORM_TEMPLATE SET ' + alias + ' = ' + alias + ' || :text where id = ' +form_template_id, ['text' : text])
        start += MAX_LENGTH
    }
}