import com.aplana.sbrf.taxaccounting.model.Column
import com.aplana.sbrf.taxaccounting.model.ColumnType
import com.aplana.sbrf.taxaccounting.model.FormStyle
import com.aplana.sbrf.taxaccounting.model.FormTemplate
import com.aplana.sbrf.taxaccounting.model.FormType
import org.apache.commons.io.IOUtils

/**
 Создает макет НФ, кроме таблицы для хранения данных
 # Инструкция:
 Вставить текст данного скрипта на странице, соответствующей ссылке с окончанием:
 .../gwtapp/#!scriptExecution
 Нажать "Выполнить".

 */

boolean createType = false
boolean createTemplate = true
boolean addColumns = true
boolean addStyles = true
boolean addDataRows = true
boolean addDataHeaders = true
boolean addScript = true

try {
    // id типа формы, имя типа формы, вид налога(I, T, V, D, P, E), включать в ИФРС(флаг), имя ИФРС
    FormType formType = new FormType()
    formType.setId(500)
    formType.setName('Расчет распределения авансовых платежей и налога на прибыль по обособленным подразделениям организации')
    formType.setTaxType(TaxType.INCOME)
    formType.setIsIfrs(false)
    formType.setIfrsName('')
    formType.setCode('')
    // id шаблона формы, имя шаблона короткое, имя шаблона полное, год версии, ежемесячность(флаг), код
    FormTemplate formTemplate = new FormTemplate()
    formTemplate.setId(2500)
    formTemplate.setFixedRows(false)
    formTemplate.setName('Расчет распределения авансовых платежей и налога на прибыль по обособленным подразделениям организации')
    formTemplate.setFullName('Расчет распределения авансовых платежей и налога на прибыль по обособленным подразделениям организации ')
    formTemplate.setVersion(Date.parse('dd.MM.yyyy', '01.01.2016'))
    formTemplate.setMonthly(false)
    formTemplate.setHeader('787/1/1')
    formTemplate.setComparative(false)
    formTemplate.setAccruing(false)
    formTemplate.setUpdating(false)

    def form_type_id = formType.id
    def form_template_id = formTemplate.id

    def rs = namedParameterJdbcTemplate.queryForObject("SELECT count(id) from FORM_TYPE where id = $form_type_id", [:], Integer.class)
    if (rs == 1) {
        logger.info("Макет НФ с данным id = $form_type_id уже существует в системе!")
        if (createType) {
            return
        }
    }

    rs = namedParameterJdbcTemplate.queryForObject("SELECT count(id) from FORM_TEMPLATE where id = $form_template_id", [:], Integer.class)
    if (rs == 1) {
        logger.info("Версия макета НФ с данным id = $form_template_id уже существует в системе!")
        if (createTemplate) {
            return
        }
    }

    addTypeTemplate(formType, formTemplate, createType, createTemplate)

    List<Column> formColumns = new ArrayList<>()
	def referenceColumnMap = [:]

    //Добавление колонок
    // NAME, ALIAS, TYPE, WIDTH, PRECISION, MAX_LENGTH, CHECKING, ATTRIBUTE_ID, FORMAT, FILTER, PARENT_COLUMN_ID, ATTRIBUTE_ID2, NUMERATION_ROW
    if (addColumns) {
        def Column formColumn = new AutoNumerationColumn()
        formColumn.setOrder(1)
        formColumn.setName('№ пп')
        formColumn.setAlias('number')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Автонумеруемая графа')})
        formColumn.setWidth(5)
        formColumn.setChecking(false)
        formColumn.setNumerationType(NumerationType.getById(0))
        formColumns.add(formColumn)

        formColumn = new StringColumn()
        formColumn.setOrder(2)
        formColumn.setName('fix')
        formColumn.setAlias('fix')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Строка')})
        formColumn.setWidth(0)
        formColumn.setChecking(false)
        formColumn.setMaxLength(1000)
        formColumn.setPrevLength(0)
        formColumns.add(formColumn)

        formColumn = new RefBookColumn()
        formColumn.setOrder(3)
        formColumn.setName('Территориальный банк')
        formColumn.setAlias('regionBank')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Справочник')})
        formColumn.setWidth(12)
        formColumn.setChecking(false)
        formColumn.setRefBookAttributeId(161)
        formColumn.setRefBookAttributeId2(null)
        formColumn.setNameAttributeId(161)
        formColumn.setFilter('' ?: null)
        formColumns.add(formColumn)

        formColumn = new RefBookColumn()
        formColumn.setOrder(4)
        formColumn.setName('Подразделение территориального банка')
        formColumn.setAlias('regionBankDivision')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Справочник')})
        formColumn.setWidth(9)
        formColumn.setChecking(false)
        formColumn.setRefBookAttributeId(161)
        formColumn.setRefBookAttributeId2(null)
        formColumn.setNameAttributeId(161)
        formColumn.setFilter('' ?: null)
        formColumns.add(formColumn)

        formColumn = new StringColumn()
        formColumn.setOrder(5)
        formColumn.setName('Наименование подразделения в декларации')
        formColumn.setAlias('divisionName')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Строка')})
        formColumn.setWidth(10)
        formColumn.setChecking(false)
        formColumn.setMaxLength(1000)
        formColumn.setPrevLength(0)
        formColumns.add(formColumn)

        formColumn = new StringColumn()
        formColumn.setOrder(6)
        formColumn.setName('КПП')
        formColumn.setAlias('kpp')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Строка')})
        formColumn.setWidth(5)
        formColumn.setChecking(false)
        formColumn.setMaxLength(9)
        formColumn.setPrevLength(0)
        formColumns.add(formColumn)

        formColumn = new NumericColumn()
        formColumn.setOrder(7)
        formColumn.setName('Средняя остаточная стоимость амортизируемого имущества (руб.)')
        formColumn.setAlias('propertyPrice')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Число')})
        formColumn.setWidth(10)
        formColumn.setChecking(false)
        formColumn.setPrecision(0)
        formColumn.setMaxLength(15)
        formColumns.add(formColumn)

        formColumn = new NumericColumn()
        formColumn.setOrder(8)
        formColumn.setName('Сумма расходов на оплату труда работников, руб.')
        formColumn.setAlias('workersCount')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Число')})
        formColumn.setWidth(10)
        formColumn.setChecking(false)
        formColumn.setPrecision(0)
        formColumn.setMaxLength(15)
        formColumns.add(formColumn)

        formColumn = new NumericColumn()
        formColumn.setOrder(9)
        formColumn.setName('Начислено налога в бюджет субъекта (руб.)')
        formColumn.setAlias('subjectTaxCredit')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Число')})
        formColumn.setWidth(10)
        formColumn.setChecking(false)
        formColumn.setPrecision(0)
        formColumn.setMaxLength(15)
        formColumns.add(formColumn)

        formColumn = new RefBookColumn()
        formColumn.setOrder(10)
        formColumn.setName('Признак расчёта')
        formColumn.setAlias('calcFlag')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Справочник')})
        formColumn.setWidth(5)
        formColumn.setChecking(false)
        formColumn.setRefBookAttributeId(120)
        formColumn.setRefBookAttributeId2(null)
        formColumn.setNameAttributeId(121)
        formColumn.setFilter('' ?: null)
        formColumns.add(formColumn)

        formColumn = new RefBookColumn()
        formColumn.setOrder(11)
        formColumn.setName('Обязанность по уплате налога')
        formColumn.setAlias('obligationPayTax')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Справочник')})
        formColumn.setWidth(6)
        formColumn.setChecking(false)
        formColumn.setRefBookAttributeId(110)
        formColumn.setRefBookAttributeId2(null)
        formColumn.setNameAttributeId(111)
        formColumn.setFilter('' ?: null)
        formColumns.add(formColumn)

        formColumn = new StringColumn()
        formColumn.setOrder(12)
        formColumn.setName('Доля налоговой базы (%)')
        formColumn.setAlias('baseTaxOf')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Строка')})
        formColumn.setWidth(9)
        formColumn.setChecking(false)
        formColumn.setMaxLength(19)
        formColumn.setPrevLength(0)
        formColumns.add(formColumn)

        formColumn = new NumericColumn()
        formColumn.setOrder(13)
        formColumn.setName('Налоговая база, исходя из доли')
        formColumn.setAlias('baseTaxOfRub')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Число')})
        formColumn.setWidth(10)
        formColumn.setChecking(false)
        formColumn.setPrecision(0)
        formColumn.setMaxLength(15)
        formColumns.add(formColumn)

        formColumn = new NumericColumn()
        formColumn.setOrder(14)
        formColumn.setName('Ставка налога в бюджет субъекта (%)')
        formColumn.setAlias('subjectTaxStavka')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Число')})
        formColumn.setWidth(5)
        formColumn.setChecking(false)
        formColumn.setPrecision(2)
        formColumn.setMaxLength(5)
        formColumns.add(formColumn)

        formColumn = new NumericColumn()
        formColumn.setOrder(15)
        formColumn.setName('Сумма налога')
        formColumn.setAlias('taxSum')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Число')})
        formColumn.setWidth(10)
        formColumn.setChecking(false)
        formColumn.setPrecision(0)
        formColumn.setMaxLength(15)
        formColumns.add(formColumn)

        formColumn = new NumericColumn()
        formColumn.setOrder(16)
        formColumn.setName('Сумма налога, выплаченная за пределами России и засчитываемая в уплату налога')
        formColumn.setAlias('taxSumOutside')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Число')})
        formColumn.setWidth(10)
        formColumn.setChecking(false)
        formColumn.setPrecision(0)
        formColumn.setMaxLength(15)
        formColumns.add(formColumn)

        formColumn = new NumericColumn()
        formColumn.setOrder(17)
        formColumn.setName('Сумма налога к доплате')
        formColumn.setAlias('taxSumToPay')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Число')})
        formColumn.setWidth(10)
        formColumn.setChecking(false)
        formColumn.setPrecision(0)
        formColumn.setMaxLength(15)
        formColumns.add(formColumn)

        formColumn = new NumericColumn()
        formColumn.setOrder(18)
        formColumn.setName('Сумма налога к уменьшению')
        formColumn.setAlias('taxSumToReduction')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Число')})
        formColumn.setWidth(10)
        formColumn.setChecking(false)
        formColumn.setPrecision(0)
        formColumn.setMaxLength(15)
        formColumns.add(formColumn)

        formColumn = new NumericColumn()
        formColumn.setOrder(19)
        formColumn.setName('Ежемесячные авансовые платежи в квартале, следующем за отчётным периодом (текущий отчёт)')
        formColumn.setAlias('everyMontherPaymentAfterPeriod')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Число')})
        formColumn.setWidth(10)
        formColumn.setChecking(false)
        formColumn.setPrecision(0)
        formColumn.setMaxLength(15)
        formColumns.add(formColumn)

        formColumn = new NumericColumn()
        formColumn.setOrder(20)
        formColumn.setName('Ежемесячные авансовые платежи на I квартал следующего налогового периода')
        formColumn.setAlias('everyMonthForKvartalNextPeriod')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Число')})
        formColumn.setWidth(10)
        formColumn.setChecking(false)
        formColumn.setPrecision(0)
        formColumn.setMaxLength(15)
        formColumns.add(formColumn)

        formColumn = new NumericColumn()
        formColumn.setOrder(21)
        formColumn.setName('Ежемесячные авансовые платежи на II квартал текущего налогового периода (отчёт за I квартал)')
        formColumn.setAlias('everyMonthForSecondKvartalNextPeriod')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Число')})
        formColumn.setWidth(10)
        formColumn.setChecking(false)
        formColumn.setPrecision(0)
        formColumn.setMaxLength(15)
        formColumns.add(formColumn)

        formColumn = new NumericColumn()
        formColumn.setOrder(22)
        formColumn.setName('Ежемесячные авансовые платежи на III квартал текущего налогового периода (отчёт за 6 месяцев)')
        formColumn.setAlias('everyMonthForThirdKvartalNextPeriod')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Число')})
        formColumn.setWidth(10)
        formColumn.setChecking(false)
        formColumn.setPrecision(0)
        formColumn.setMaxLength(15)
        formColumns.add(formColumn)

        formColumn = new NumericColumn()
        formColumn.setOrder(23)
        formColumn.setName('Ежемесячные авансовые платежи на IV квартал текущего налогового периода (отчёт за 9 месяцев)')
        formColumn.setAlias('everyMonthForFourthKvartalNextPeriod')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Число')})
        formColumn.setWidth(10)
        formColumn.setChecking(false)
        formColumn.setPrecision(0)
        formColumn.setMaxLength(15)
        formColumns.add(formColumn)

        formColumn = new NumericColumn()
        formColumn.setOrder(24)
        formColumn.setName('Льготы по налогу в бюджет субъекта (руб.). Уменьшение суммы налога (руб.)')
        formColumn.setAlias('minimizeTaxSum')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Число')})
        formColumn.setWidth(10)
        formColumn.setChecking(false)
        formColumn.setPrecision(0)
        formColumn.setMaxLength(15)
        formColumns.add(formColumn)

        formColumn = new NumericColumn()
        formColumn.setOrder(25)
        formColumn.setName('Льготы по налогу в бюджет субъекта (руб.). Ставка налога (%)')
        formColumn.setAlias('amountTax')
        formColumn.setColumnType(ColumnType.find{ it.title.equals('Число')})
        formColumn.setWidth(6)
        formColumn.setChecking(false)
        formColumn.setPrecision(2)
        formColumn.setMaxLength(5)
        formColumns.add(formColumn)


        formTemplate.getColumns().addAll(formColumns)
        columnDaoImpl.createFormColumns(formColumns, formTemplate)

	  	referenceColumnMap.each { alias, parentAlias ->
			def column = formColumns.find{ it.alias == alias }
			if (column != null) {
				column.setParentAlias(parentAlias)
			} else {
				logger.error("Родительская колонка с псевдонимом $parentAlias не обнаружена!")
			}
		}

        if (!referenceColumnMap.isEmpty()) {
            columnDaoImpl.updateFormColumns(formColumns, formTemplate)
        }

        logger.info("К версии макета добавлены колонки")
    }

    List<FormStyle> formStyles = new ArrayList<>()

    if (addStyles) {
        def FormStyle formStyle = new FormStyle()
        formStyle.setAlias('Итоговая')
        formStyle.setBackColor(Color.getById(2))
        formStyle.setBold(true)
        formStyle.setFontColor(Color.getById(0))
        formStyle.setItalic(false)
        formStyles.add(formStyle)

        formStyle = new FormStyle()
        formStyle.setAlias('Редактируемая')
        formStyle.setBackColor(Color.getById(3))
        formStyle.setBold(false)
        formStyle.setFontColor(Color.getById(0))
        formStyle.setItalic(false)
        formStyles.add(formStyle)

        formStyle = new FormStyle()
        formStyle.setAlias('Автозаполняемая')
        formStyle.setBackColor(Color.getById(4))
        formStyle.setBold(true)
        formStyle.setFontColor(Color.getById(13))
        formStyle.setItalic(false)
        formStyles.add(formStyle)

        formStyle = new FormStyle()
        formStyle.setAlias('Корректировка-добавлено')
        formStyle.setBackColor(Color.getById(12))
        formStyle.setBold(false)
        formStyle.setFontColor(Color.getById(0))
        formStyle.setItalic(false)
        formStyles.add(formStyle)

        formStyle = new FormStyle()
        formStyle.setAlias('Корректировка-удалено')
        formStyle.setBackColor(Color.getById(8))
        formStyle.setBold(false)
        formStyle.setFontColor(Color.getById(0))
        formStyle.setItalic(false)
        formStyles.add(formStyle)

        formStyle = new FormStyle()
        formStyle.setAlias('Корректировка-без изменений')
        formStyle.setBackColor(Color.getById(6))
        formStyle.setBold(false)
        formStyle.setFontColor(Color.getById(0))
        formStyle.setItalic(false)
        formStyles.add(formStyle)

        formStyle = new FormStyle()
        formStyle.setAlias('Корректировка-изменено')
        formStyle.setBackColor(Color.getById(4))
        formStyle.setBold(true)
        formStyle.setFontColor(Color.getById(10))
        formStyle.setItalic(false)
        formStyles.add(formStyle)


        formTemplate.getStyles().addAll(formStyles)
        formStyleDaoImpl.saveFormStyles(formTemplate)
        logger.info("К версии макета добавлены стили")
    }

    String longString = ''

    if (addDataRows) {
        longString += 'PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxyb3dzPg0KICAgIDxyb3cgYWxpYXM9ImNhIj4NCiAgICAgICAgPGNlbGwgYWxpYXM9Im51bWJlciIgY29sU3Bhbj0iMSIgcm93U3Bhbj0iMSIgc3R5bGVBbGlhcz0i0JjRgtC+0LPQvtCy0LDRjyIvPg0KICAgICAgICA8Y2VsbCBhbGlhcz0iZml4IiBjb2xTcGFuPSIyIiByb3dTcGFuPSIxIiBzdHJpbmdWYWx1ZT0i0KbQtdC90YLRgNCw0LvRjNC90YvQuSDQsNC/0L/QsNGA0LDRgiAo0YHQutC+0YDRgNC10LrRgtC40YDQvtCy0LDQvdC90YvQuSkiDQogICAgICAgICAgICAgIHN0eWxlQWxpYXM9ItCY0YLQvtCz0L7QstCw0Y8iLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9InJlZ2lvbkJhbmsiIGNvbFNwYW49IjEiIHJvd1NwYW49IjEiIHN0eWxlQWxpYXM9ItCY0YLQvtCz0L7QstCw0Y8iLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9InJlZ2lvbkJhbmtEaXZpc2lvbiIgY29sU3Bhbj0iMSIgcm93U3Bhbj0iMSIgc3R5bGVBbGlhcz0i0JjRgtC+0LPQvtCy0LDRjyIvPg0KICAgICAgICA8Y2VsbCBhbGlhcz0iZGl2aXNpb25OYW1lIiBjb2xTcGFuPSIxIiByb3dTcGFuPSIxIiBzdHlsZUFsaWFzPSLQmNGC0L7Qs9C+0LLQsNGPIi8+DQogICAgICAgIDxjZWxsIGFsaWFzPSJrcHAiIGNvbFNwYW49IjEiIHJvd1NwYW49IjEiIHN0eWxlQWxpYXM9ItCY0YLQvtCz0L7QstCw0Y8iLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9InByb3BlcnR5UHJpY2UiIGNvbFNwYW49IjEiIHJvd1NwYW49IjEiIHN0eWxlQWxpYXM9ItCY0YLQvtCz0L7QstCw0Y8iLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9IndvcmtlcnNDb3VudCIgY29sU3Bhbj0iMSIgcm93U3Bhbj0iMSIgc3R5bGVBbGlhcz0i0JjRgtC+0LPQvtCy0LDRjyIvPg0KICAgICAgICA8Y2VsbCBhbGlhcz0ic3ViamVjdFRheENyZWRpdCIgY29sU3Bhbj0iMSIgcm93U3Bhbj0iMSIgc3R5bGVBbGlhcz0i0JjRgtC+0LPQvtCy0LDRjyIvPg0KICAgICAgICA8Y2VsbCBhbGlhcz0iY2FsY0ZsYWciIGNvbFNwYW49IjEiIHJvd1NwYW49IjEiIHN0eWxlQWxpYXM9ItCY0YLQvtCz0L7QstCw0Y8iLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9Im9ibGlnYXRpb25QYXlUYXgiIGNvbFNwYW49IjEiIHJvd1NwYW49IjEiIHN0eWxlQWxpYXM9ItCY0YLQvtCz0L7QstCw0Y8iLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9ImJhc2VUYXhPZiIgY29sU3Bhbj0iMSIgcm93U3Bhbj0iMSIgc3R5bGVBbGlhcz0i0JjRgtC+0LPQvtCy0LDRjyIvPg0KICAgICAgICA8Y2VsbCBhbGlhcz0iYmFzZVRheE9mUnViIiBjb2xTcGFuPSIxIiByb3dTcGFuPSIxIiBzdHlsZUFsaWFzPSLQmNGC0L7Qs9C+0LLQsNGPIi8+DQogICAgICAgIDxjZWxsIGFsaWFzPSJzdWJqZWN0VGF4U3RhdmthIiBjb2xTcGFuPSIxIiByb3dTcGFuPSIxIiBzdHlsZUFsaWFzPSLQmNGC0L7Qs9C+0LLQsNGPIi8+DQogICAgICAgIDxjZWxsIGFsaWFzPSJ0YXhTdW0iIGNvbFNwYW49IjEiIHJvd1NwYW49IjEiIHN0eWxlQWxpYXM9ItCY0YLQvtCz0L7QstCw0Y8iLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9InRheFN1bU91dHNpZGUiIGNvbFNwYW49IjEiIHJvd1NwYW49IjEiIHN0eWxlQWxpYXM9ItCY0YLQvtCz0L7QstCw0Y8iLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9InRheFN1bVRvUGF5IiBjb2xTcGFuPSIxIiByb3dTcGFuPSIxIiBzdHlsZUFsaWFzPSLQmNGC0L7Qs9C+0LLQsNGPIi8+DQogICAgICAgIDxjZWxsIGFsaWFzPSJ0YXhTdW1Ub1JlZHVjdGlvbiIgY29sU3Bhbj0iMSIgcm93U3Bhbj0iMSIgc3R5bGVBbGlhcz0i0JjRgtC+0LPQvtCy0LDRjyIvPg0KICAgICAgICA8Y2VsbCBhbGlhcz0iZXZlcnlNb250aGVyUGF5bWVudEFmdGVyUGVyaW9kIiBjb2xTcGFuPSIxIiByb3dTcGFuPSIxIiBzdHlsZUFsaWFzPSLQmNGC0L7Qs9C+0LLQsNGPIi8+DQogICAgICAgIDxjZWxsIGFsaWFzPSJldmVyeU1vbnRoRm9yS3ZhcnRhbE5leHRQZXJpb2QiIGNvbFNwYW49IjEiIHJvd1NwYW49IjEiIHN0eWxlQWxpYXM9ItCY0YLQvtCz0L7QstCw0Y8iLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9ImV2ZXJ5TW9udGhGb3JTZWNvbmRLdmFydGFsTmV4dFBlcmlvZCIgY29sU3Bhbj0iMSIgcm93U3Bhbj0iMSIgc3R5bGVBbGlhcz0i0JjRgtC+0LPQvtCy0LDRjyIvPg0KICAgICAgICA8Y2VsbCBhbGlhcz0iZXZlcnlNb250aEZvclRoaXJkS3ZhcnRhbE5leHRQZXJpb2QiIGNvbFNwYW49IjEiIHJvd1NwYW49IjEiIHN0eWxlQWxpYXM9ItCY0YLQvtCz0L7QstCw0Y8iLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9ImV2ZXJ5TW9udGhGb3JGb3VydGhLdmFydGFsTmV4dFBlcmlvZCIgY29sU3Bhbj0iMSIgcm93U3Bhbj0iMSIgc3R5bGVBbGlhcz0i0JjRgtC+0LPQvtCy0LDRjyIvPg0KICAgICAgICA8Y2VsbCBhbGlhcz0ibWluaW1pemVUYXhTdW0iIGNvbFNwYW49IjEiIHJvd1NwYW49IjEiIHN0eWxlQWxpYXM9ItCY0YLQvtCz0L7QstCw0Y8iLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9ImFtb3VudFRheCIgY29sU3Bhbj0iMSIgcm93U3Bhbj0iMSIgc3R5bGVBbGlhcz0i0JjRgtC+0LPQvtCy0LDRjyIvPg0KICAgIDwvcm93Pg0KICAgIDxyb3cgYWxpYXM9InRvdGFsIj4NCiAgICAgICAgPGNlbGwgYWxpYXM9Im51bWJlciIgY29sU3Bhbj0iMSIgcm93U3Bhbj0iMSIgc3R5bGVBbGlhcz0i0JjRgtC+0LPQvtCy0LDRjyIvPg0KICAgICAgICA8Y2VsbCBhbGlhcz0iZml4IiBjb2xTcGFuPSIyIiByb3dTcGFuPSIxIiBzdHJpbmdWYWx1ZT0i0KHQsdC10YDQsdCw0L3QuiDQoNC+0YHRgdC40LgiIHN0eWxlQWxpYXM9ItCY0YLQvtCz0L7QstCw0Y8iLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9InJlZ2lvbkJhbmsiIGNvbFNwYW49IjEiIHJvd1NwYW49IjEiIHN0eWxlQWxpYXM9ItCY0YLQvtCz0L7QstCw0Y8iLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9InJlZ2lvbkJhbmtEaXZpc2lvbiIgY29sU3Bhbj0iMSIgcm93U3Bhbj0iMSIgc3R5bGVBbGlhcz0i0JjRgtC+0LPQvtCy0LDRjyIvPg0KICAgICAgICA8Y2VsbCBhbGlhcz0iZGl2aXNpb25OYW1lIiBjb2xTcGFuPSIxIiByb3dTcGFuPSIxIiBzdHlsZUFsaWFzPSLQmNGC0L7Qs9C+0LLQsNGPIi8+DQogICAgICAgIDxjZWxsIGFsaWFzPSJrcHAiIGNvbFNwYW49IjEiIHJvd1NwYW49IjEiIHN0eWxlQWxpYXM9ItCY0YLQvtCz0L7QstCw0Y8iLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9InByb3BlcnR5UHJpY2UiIGNvbFNwYW49IjEiIHJvd1NwYW49IjEiIHN0eWxlQWxpYXM9ItCY0YLQvtCz0L7QstCw0Y8iLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9IndvcmtlcnNDb3VudCIgY29sU3Bhbj0iMSIgcm93U3Bhbj0iMSIgc3R5bGVBbGlhcz0i0JjRgtC+0LPQvtCy0LDRjyIvPg0KICAgICAgICA8Y2VsbCBhbGlhcz0ic3ViamVjdFRheENyZWRpdCIgY29sU3Bhbj0iMSIgcm93U3Bhbj0iMSIgc3R5bGVBbGlhcz0i0JjRgtC+0LPQvtCy0LDRjyIvPg0KICAgICAgICA8Y2VsbCBhbGlhcz0iY2FsY0ZsYWciIGNvbFNwYW49IjEiIHJvd1NwYW49IjEiIHN0eWxlQWxpYXM9ItCY0YLQvtCz0L7QstCw0Y8iLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9Im9ibGlnYXRpb25QYXlUYXgiIGNvbFNwYW49IjEiIHJvd1NwYW49IjEiIHN0eWxlQWxpYXM9ItCY0YLQvtCz0L7QstCw0Y8iLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9ImJhc2VUYXhPZiIgY29sU3Bhbj0iMSIgcm93U3Bhbj0iMSIgc3R5bGVBbGlhcz0i0JjRgtC+0LPQvtCy0LDRjyIvPg0KICAgICAgICA8Y2VsbCBhbGlhcz0iYmFzZVRheE9mUnViIiBjb2xTcGFuPSIxIiByb3dTcGFuPSIxIiBzdHlsZUFsaWFzPSLQmNGC0L7Qs9C+0LLQsNGPIi8+DQogICAgICAgIDxjZWxsIGFsaWFzPSJzdWJqZWN0VGF4U3RhdmthIiBjb2xTcGFuPSIxIiByb3dTcGFuPSIxIiBzdHlsZUFsaWFzPSLQmNGC0L7Qs9C+0LLQsNGPIi8+DQogICAgICAgIDxjZWxsIGFsaWFzPSJ0YXhTdW0iIGNvbFNwYW49IjEiIHJvd1NwYW49IjEiIHN0eWxlQWxpYXM9ItCY0YLQvtCz0L7QstCw0Y8iLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9InRheFN1bU91dHNpZGUiIGNvbFNwYW49IjEiIHJvd1NwYW49IjEiIHN0eWxlQWxpYXM9ItCY0YLQvtCz0L7QstCw0Y8iLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9InRheFN1bVRvUGF5IiBjb2xTcGFuPSIxIiByb3dTcGFuPSIxIiBzdHlsZUFsaWFzPSLQmNGC0L7Qs9C+0LLQsNGPIi8+DQogICAgICAgIDxjZWxsIGFsaWFzPSJ0YXhTdW1Ub1JlZHVjdGlvbiIgY29sU3Bhbj0iMSIgcm93U3Bhbj0iMSIgc3R5bGVBbGlhcz0i0JjRgtC+0LPQvtCy0LDRjyIvPg0KICAgICAgICA8Y2VsbCBhbGlhcz0iZXZlcnlNb250aGVyUGF5bWVudEFmdGVyUGVyaW9kIiBjb2xTcGFuPSIxIiByb3dTcGFuPSIxIiBzdHlsZUFsaWFzPSLQmNGC0L7Qs9C+0LLQsNGPIi8+DQogICAgICAgIDxjZWxsIGFsaWFzPSJldmVyeU1vbnRoRm9yS3ZhcnRhbE5leHRQZXJpb2QiIGNvbFNwYW49IjEiIHJvd1NwYW49IjEiIHN0eWxlQWxpYXM9ItCY0YLQvtCz0L7QstCw0Y8iLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9ImV2ZXJ5TW9udGhGb3JTZWNvbmRLdmFydGFsTmV4dFBlcmlvZCIgY29sU3Bhbj0iMSIgcm93U3Bhbj0iMSIgc3R5bGVBbGlhcz0i0JjRgtC+0LPQvtCy0LDRjyIvPg0KICAgICAgICA8Y2VsbCBhbGlhcz0iZXZlcnlNb250aEZvclRoaXJkS3ZhcnRhbE5leHRQZXJpb2QiIGNvbFNwYW49IjEiIHJvd1NwYW49IjEiIHN0eWxlQWxpYXM9ItCY0YLQvtCz0L7QstCw0Y8iLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9ImV2ZXJ5TW9udGhGb3JGb3VydGhLdmFydGFsTmV4dFBlcmlvZCIgY29sU3Bhbj0iMSIgcm93U3Bhbj0iMSIgc3R5bGVBbGlhcz0i0JjRgtC+0LPQvtCy0LDRjyIvPg0KICAgICAgICA8Y2VsbCBhbGlhcz0ibWluaW1pemVUYXhTdW0iIGNvbFNwYW49IjEiIHJvd1NwYW49IjEiIHN0eWxlQWxpYXM9ItCY0YLQvtCz0L7QstCw0Y8iLz4NCiAgICAgICAgPGNlbGwgYWxpYXM9ImFtb3VudFRheCIgY29sU3Bhbj0iMSIgcm93U3Bhbj0iMSIgc3R5bGVBbGlhcz0i0JjRgtC+0LPQvtCy0LDRjyIvPg0KICAgIDwvcm93Pg0KPC9yb3dzPg=='

        addLongText(form_template_id, longString, 'DATA_ROWS')
        logger.info("К версии макета добавлены фиксированные строки")
    }

    longString = ''
    if (addDataHeaders) {
        longString += ''

        addLongText(form_template_id, longString, 'DATA_HEADERS')
        logger.info("К версии макета добавлен заголовок")
    }

    longString = ''
    if (addScript) {
        longString += 'cGFja2FnZSBmb3JtX3RlbXBsYXRlLmluY29tZS5hZHZhbmNlRGlzdHJpYnV0aW9uLnYyMDE2DQoNCmltcG9ydCBjb20uYXBsYW5hLnNicmYudGF4YWNjb3VudGluZy5tb2RlbC5Gb3JtRGF0YUV2ZW50DQppbXBvcnQgY29tLmFwbGFuYS5zYnJmLnRheGFjY291bnRpbmcubW9kZWwuRm9ybURhdGFLaW5kDQppbXBvcnQgY29tLmFwbGFuYS5zYnJmLnRheGFjY291bnRpbmcubW9kZWwuV29ya2Zsb3dTdGF0ZQ0KaW1wb3J0IGNvbS5hcGxhbmEuc2JyZi50YXhhY2NvdW50aW5nLm1vZGVsLmV4Y2VwdGlvbi5TZXJ2aWNlRXhjZXB0aW9uDQppbXBvcnQgY29tLmFwbGFuYS5zYnJmLnRheGFjY291bnRpbmcubW9kZWwubG9nLkxvZ0xldmVsDQppbXBvcnQgY29tLmFwbGFuYS5zYnJmLnRheGFjY291bnRpbmcubW9kZWwucmVmYm9vay5SZWZCb29rDQppbXBvcnQgY29tLmFwbGFuYS5zYnJmLnRheGFjY291bnRpbmcubW9kZWwucmVmYm9vay5SZWZCb29rQXR0cmlidXRlVHlwZQ0KaW1wb3J0IGNvbS5hcGxhbmEuc2JyZi50YXhhY2NvdW50aW5nLm1vZGVsLnNjcmlwdC5yYW5nZS5Db2x1bW5SYW5nZQ0KaW1wb3J0IGdyb292eS50cmFuc2Zvcm0uRmllbGQNCg0KLyoqDQogKiDQoNCw0YHRh9GR0YIg0YDQsNGB0L/RgNC10LTQtdC70LXQvdC40Y8g0LDQstCw0L3RgdC+0LLRi9GFINC/0LvQsNGC0LXQttC10Lkg0Lgg0L3QsNC70L7Qs9CwINC90LAg0L/RgNC40LHRi9C70Ywg0L/QviDQvtCx0L7RgdC+0LHQu9C10L3QvdGL0Lwg0L/QvtC00YDQsNC30LTQtdC70LXQvdC40Y/QvCDQvtGA0LPQsNC90LjQt9Cw0YbQuNC4Lg0KICogZm9ybVRlbXBsYXRlSWQ9MjUwMA0KICoNCiAqIEBhdXRob3IgYWthZHlyZ3Vsb3YNCiAqLw0KLy8g0LPRgNCw0YTQsCAxICAtIG51bWJlcg0KLy8g0LPRgNCw0YTQsCAgICAtIGZpeA0KLy8g0LPRgNCw0YTQsCAyICAtIHJlZ2lvbkJhbmsNCi8vINCz0YDQsNGE0LAgMyAgLSByZWdpb25CYW5rRGl2aXNpb24NCi8vINCz0YDQsNGE0LAgNCAgLSBkaXZpc2lvbk5hbWUNCi8vINCz0YDQsNGE0LAgNSAgLSBrcHANCi8vINCz0YDQsNGE0LAgNiAgLSBwcm9wZXJ0eVByaWNlDQovLyDQs9GA0LDRhNCwIDcgIC0gd29ya2Vyc0NvdW50DQovLyDQs9GA0LDRhNCwIDggIC0gc3ViamVjdFRheENyZWRpdA0KLy8g0LPRgNCw0YTQsCA5ICAtIGNhbGNGbGFnDQovLyDQs9GA0LDRhNCwIDEwIC0gb2JsaWdhdGlvblBheVRheA0KLy8g0LPRgNCw0YTQsCAxMSAtIGJhc2VUYXhPZg0KLy8g0LPRgNCw0YTQsCAxMiAtIGJhc2VUYXhPZlJ1Yg0KLy8g0LPRgNCw0YTQsCAxMyAtIHN1YmplY3RUYXhTdGF2a2ENCi8vINCz0YDQsNGE0LAgMTQgLSB0YXhTdW0NCi8vINCz0YDQsNGE0LAgMTUgLSB0YXhTdW1PdXRzaWRlDQovLyDQs9GA0LDRhNCwIDE2IC0gdGF4U3VtVG9QYXkNCi8vINCz0YDQsNGE0LAgMTcgLSB0YXhTdW1Ub1JlZHVjdGlvbg0KLy8g0LPRgNCw0YTQsCAxOCAtIGV2ZXJ5TW9udGhlclBheW1lbnRBZnRlclBlcmlvZA0KLy8g0LPRgNCw0YTQsCAxOSAtIGV2ZXJ5TW9udGhGb3JLdmFydGFsTmV4dFBlcmlvZA0KLy8g0LPRgNCw0YTQsCAyMCAtIGV2ZXJ5TW9udGhGb3JTZWNvbmRLdmFydGFsTmV4dFBlcmlvZA0KLy8g0LPRgNCw0YTQsCAyMSAtIGV2ZXJ5TW9udGhGb3JUaGlyZEt2YXJ0YWxOZXh0UGVyaW9kDQovLyDQs9GA0LDRhNCwIDIyIC0gZXZlcnlNb250aEZvckZvdXJ0aEt2YXJ0YWxOZXh0UGVyaW9kDQovLyDQs9GA0LDRhNCwIDIzIC0gbWluaW1pemVUYXhTdW0NCi8vINCz0YDQsNGE0LAgMjQgLSBhbW91bnRUYXgNCg0Kc3dpdGNoIChmb3JtRGF0YUV2ZW50KSB7DQogICAgY2FzZSBGb3JtRGF0YUV2ZW50LkNSRUFURToNCiAgICAgICAgZm9ybURhdGFTZXJ2aWNlLmNoZWNrVW5pcXVlKGZvcm1EYXRhLCBsb2dnZXIpDQogICAgICAgIGJyZWFrDQogICAgY2FzZSBGb3JtRGF0YUV2ZW50LkNIRUNLOg0KICAgICAgICBsb2dpY2FsQ2hlY2soKQ0KICAgICAgICBicmVhaw0KICAgIGNhc2UgRm9ybURhdGFFdmVudC5DQUxDVUxBVEU6DQogICAgICAgIGNhbGMoKQ0KICAgICAgICBsb2dpY2FsQ2hlY2tBZnRlckNhbGMoKQ0KICAgICAgICBmb3JtRGF0YVNlcnZpY2Uuc2F2ZUNhY2hlZERhdGFSb3dzKGZvcm1EYXRhLCBsb2dnZXIpDQogICAgICAgIGJyZWFrDQogICAgY2FzZSBGb3JtRGF0YUV2ZW50LkFERF9ST1c6DQogICAgICAgIGZvcm1EYXRhU2VydmljZS5hZGRSb3coZm9ybURhdGEsIGN1cnJlbnREYXRhUm93LCBlZGl0YWJsZUNvbHVtbnMsIGF1dG9GaWxsQ29sdW1ucykNCiAgICAgICAgYnJlYWsNCiAgICBjYXNlIEZvcm1EYXRhRXZlbnQuREVMRVRFX1JPVzoNCiAgICAgICAgaWYgKGN1cnJlbnREYXRhUm93LmdldEFsaWFzKCkgPT0gbnVsbCkgZm9ybURhdGFTZXJ2aWNlLmdldERhdGFSb3dIZWxwZXIoZm9ybURhdGEpLmRlbGV0ZShjdXJyZW50RGF0YVJvdykNCiAgICAgICAgYnJlYWsNCiAgICBjYXNlIEZvcm1EYXRhRXZlbnQuTU9WRV9DUkVBVEVEX1RPX0FQUFJPVkVEOiAgLy8g0KPRgtCy0LXRgNC00LjRgtGMINC40LcgItCh0L7Qt9C00LDQvdCwIg0KICAgIGNhc2UgRm9ybURhdGFFdmVudC5NT1ZFX0FQUFJPVkVEX1RPX0FDQ0VQVEVEOiAvLyDQn9GA0LjQvdGP0YLRjCDQuNC3ICLQo9GC0LLQtdGA0LbQtNC10L3QsCINCiAgICBjYXNlIEZvcm1EYXRhRXZlbnQuTU9WRV9DUkVBVEVEX1RPX0FDQ0VQVEVEOiAgLy8g0J/RgNC40L3Rj9GC0Ywg0LjQtyAi0KHQvtC30LTQsNC90LAiDQogICAgY2FzZSBGb3JtRGF0YUV2ZW50Lk1PVkVfQ1JFQVRFRF9UT19QUkVQQVJFRDogIC8vINCf0L7QtNCz0L7RgtC+0LLQuNGC0Ywg0LjQtyAi0KHQvtC30LTQsNC90LAiDQogICAgY2FzZSBGb3JtRGF0YUV2ZW50Lk1PVkVfUFJFUEFSRURfVE9fQUNDRVBURUQ6IC8vINCf0YDQuNC90Y/RgtGMINC40LcgItCf0L7QtNCz0L7RgtC+0LLQu9C10L3QsCINCiAgICBjYXNlIEZvcm1EYXRhRXZlbnQuTU9WRV9QUkVQQVJFRF9UT19BUFBST1ZFRDogLy8g0KPRgtCy0LXRgNC00LjRgtGMINC40LcgItCf0L7QtNCz0L7RgtC+0LLQu9C10L3QsCINCiAgICAgICAgbG9naWNhbENoZWNrKCkNCiAgICAgICAgY2hlY2tEZWNsYXJhdGlvbigpDQogICAgICAgIGJyZWFrDQovLyDQv9C+0YHQu9C1INC/0YDQuNC90Y/RgtC40Y8g0LjQtyDQv9C+0LTQs9C+0YLQvtCy0LvQtdC90LANCiAgICBjYXNlIEZvcm1EYXRhRXZlbnQuQUZURVJfTU9WRV9QUkVQQVJFRF9UT19BQ0NFUFRFRDoNCiAgICAgICAgbG9naWNhbENoZWNrKCkNCiAgICAgICAgLy8g0L3QsCDRgdGC0L7RgNC+0L3QtSDRgdC10YDQstC10YDQsCDQsdGD0LTQtdGCINCy0YvQv9C+0LvQvdC10L0gY29tcG9zZQ0KICAgICAgICBicmVhaw0KLy8g0L7QsdC+0LHRidC40YLRjA0KICAgIGNhc2UgRm9ybURhdGFFdmVudC5DT01QT1NFOg0KICAgICAgICBjb25zb2xpZGF0aW9uKCkNCiAgICAgICAgY2FsYygpDQogICAgICAgIGZvcm1EYXRhU2VydmljZS5zYXZlQ2FjaGVkRGF0YVJvd3MoZm9ybURhdGEsIGxvZ2dlcikNCiAgICAgICAgYnJlYWsNCiAgICBjYXNlIEZvcm1EYXRhRXZlbnQuSU1QT1JUOg0KICAgICAgICBpbXBvcnREYXRhKCkNCiAgICAgICAgaWYgKCFsb2dnZXIuY29udGFpbnNMZXZlbChMb2dMZXZlbC5FUlJPUikpIHsNCiAgICAgICAgICAgIGZvcm1EYXRhU2VydmljZS5zYXZlQ2FjaGVkRGF0YVJvd3MoZm9ybURhdGEsIGxvZ2dlcikNCiAgICAgICAgfQ0KICAgICAgICBicmVhaw0KICAgIGNhc2UgRm9ybURhdGFFdmVudC5TT1JUX1JPV1M6DQogICAgICAgIHNvcnRGb3JtRGF0YVJvd3MoKQ0KICAgICAgICBicmVhaw0KfQ0KDQovLy8vINCa0Y3RiNC4INC4INC60L7QvdGB0YLQsNC90YLRiw0KQEZpZWxkDQpkZWYgcHJvdmlkZXJDYWNoZSA9IFs6XQ0KQEZpZWxkDQpkZWYgcmVjb3JkQ2FjaGUgPSBbOl0NCkBGaWVsZA0KZGVmIHJlZkJvb2tDYWNoZSA9IFs6XQ0KDQovLyDQktGB0LUg0LDRgtGA0LjQsdGD0YLRiw0KQEZpZWxkDQpkZWYgYWxsQ29sdW1ucyA9IFsnbnVtYmVyJywgJ3JlZ2lvbkJhbmsnLCAnZml4JywgJ3JlZ2lvbkJhbmtEaXZpc2lvbicsICdkaXZpc2lvbk5hbWUnLCAna3BwJywgJ3Byb3BlcnR5UHJpY2UnLA0KICAgICAgICAgICAgICAgICAgJ3dvcmtlcnNDb3VudCcsICdzdWJqZWN0VGF4Q3JlZGl0JywgJ2NhbGNGbGFnJywgJ29ibGlnYXRpb25QYXlUYXgnLA0KICAgICAgICAgICAgICAgICAgJ2Jhc2VUYXhPZicsICdiYXNlVGF4T2ZSdWInLCAnc3ViamVjdFRheFN0YXZrYScsICd0YXhTdW0nLA0KICAgICAgICAgICAgICAgICAgJ3RheFN1bU91dHNpZGUnLCAndGF4U3VtVG9QYXknLCAndGF4U3VtVG9SZWR1Y3Rpb24nLA0KICAgICAgICAgICAgICAgICAgJ2V2ZXJ5TW9udGhlclBheW1lbnRBZnRlclBlcmlvZCcsICdldmVyeU1vbnRoRm9yS3ZhcnRhbE5leHRQZXJpb2QnLA0KICAgICAgICAgICAgICAgICAgJ2V2ZXJ5TW9udGhGb3JTZWNvbmRLdmFydGFsTmV4dFBlcmlvZCcsICdldmVyeU1vbnRoRm9yVGhpcmRLdmFydGFsTmV4dFBlcmlvZCcsDQogICAgICAgICAgICAgICAgICAnZXZlcnlNb250aEZvckZvdXJ0aEt2YXJ0YWxOZXh0UGVyaW9kJywgJ21pbmltaXplVGF4U3VtJywgJ2Ftb3VudFRheCddDQoNCi8vINCg0LXQtNCw0LrRgtC40YDRg9C10LzRi9C1INCw0YLRgNC40LHRg9GC0YsNCkBGaWVsZA0KZGVmIGVkaXRhYmxlQ29sdW1ucyA9IFsncmVnaW9uQmFua0RpdmlzaW9uJywgJ2twcCcsICdwcm9wZXJ0eVByaWNlJywgJ3dvcmtlcnNDb3VudCcsICdzdWJqZWN0VGF4Q3JlZGl0JywgJ21pbmltaXplVGF4U3VtJywgJ2Ftb3VudFRheCddDQoNCi8vINCQ0LLRgtC+0LfQsNC/0L7Qu9C90Y/QtdC80YvQtSDQsNGC0YDQuNCx0YPRgtGLDQpARmllbGQNCmRlZiBhdXRvRmlsbENvbHVtbnMgPSBhbGxDb2x1bW5zIC0gZWRpdGFibGVDb2x1bW5zDQoNCi8vINCf0YDQvtCy0LXRgNGP0LXQvNGL0LUg0L3QsCDQv9GD0YHRgtGL0LUg0LfQvdCw0YfQtdC90LjRjyDQsNGC0YDQuNCx0YPRgtGLDQpARmllbGQNCmRlZiBub25FbXB0eUNvbHVtbnMgPSBbJ3JlZ2lvbkJhbmsnLCAncmVnaW9uQmFua0RpdmlzaW9uJywNCiAgICAgICAgICAgICAgICAgICAgICAgJ2RpdmlzaW9uTmFtZScsICdrcHAnLCAncHJvcGVydHlQcmljZScsICd3b3JrZXJzQ291bnQnLA0KICAgICAgICAgICAgICAgICAgICAgICAnc3ViamVjdFRheENyZWRpdCcsICdjYWxjRmxhZycsICdvYmxpZ2F0aW9uUGF5VGF4JywNCiAgICAgICAgICAgICAgICAgICAgICAgJ2Jhc2VUYXhPZicsICdiYXNlVGF4T2ZSdWInLCAnc3ViamVjdFRheFN0YXZrYScsDQogICAgICAgICAgICAgICAgICAgICAgICd0YXhTdW0nLCAndGF4U3VtT3V0c2lkZScsICd0YXhTdW1Ub1BheScsDQogICAgICAgICAgICAgICAgICAgICAgICd0YXhTdW1Ub1JlZHVjdGlvbicsICdldmVyeU1vbnRoRm9yS3ZhcnRhbE5leHRQZXJpb2QnLA0KICAgICAgICAgICAgICAgICAgICAgICAnZXZlcnlNb250aEZvclNlY29uZEt2YXJ0YWxOZXh0UGVyaW9kJywgJ2V2ZXJ5TW9udGhGb3JUaGlyZEt2YXJ0YWxOZXh0UGVyaW9kJywNCiAgICAgICAgICAgICAgICAgICAgICAgJ2V2ZXJ5TW9udGhGb3JGb3VydGhLdmFydGFsTmV4dFBlcmlvZCddDQoNCi8vINCT0YDRg9C/0L/QuNGA0YPQtdC80YvQtSDQsNGC0YDQuNCx0YPRgtGLDQpARmllbGQNCmRlZiBncm91cENvbHVtbnMgPSBbJ3JlZ2lvbkJhbmtEaXZpc2lvbicsICdyZWdpb25CYW5rJ10NCg0KLy8g0JDRgtGA0LjQsdGD0YLRiyDQtNC70Y8g0LjRgtC+0LPQvtCyDQpARmllbGQNCmRlZiB0b3RhbENvbHVtbnMgPSBbJ3Byb3BlcnR5UHJpY2UnLCAnd29ya2Vyc0NvdW50JywgJ3N1YmplY3RUYXhDcmVkaXQnLA0KICAgICAgICAgICAgICAgICAgICAnYmFzZVRheE9mUnViJywgJ3RheFN1bScsICd0YXhTdW1PdXRzaWRlJywgJ3RheFN1bVRvUGF5JywNCiAgICAgICAgICAgICAgICAgICAgJ3RheFN1bVRvUmVkdWN0aW9uJywgJ2V2ZXJ5TW9udGhlclBheW1lbnRBZnRlclBlcmlvZCcsDQogICAgICAgICAgICAgICAgICAgICdldmVyeU1vbnRoRm9yS3ZhcnRhbE5leHRQZXJpb2QnLCAnZXZlcnlNb250aEZvclNlY29uZEt2YXJ0YWxOZXh0UGVyaW9kJywNCiAgICAgICAgICAgICAgICAgICAgJ2V2ZXJ5TW9udGhGb3JUaGlyZEt2YXJ0YWxOZXh0UGVyaW9kJywNCiAgICAgICAgICAgICAgICAgICAgJ2V2ZXJ5TW9udGhGb3JGb3VydGhLdmFydGFsTmV4dFBlcmlvZCcsICdtaW5pbWl6ZVRheFN1bSddDQoNCi8vINGA0LDRgdGH0LjRgtGL0LLQsNC10LzRi9C1INC/0L7Qu9GPICjQs9GA0LDRhNCwIDEyLi4yMikNCkBGaWVsZA0KZGVmIGNhbGNDb2x1bW5zID0gWyAnYmFzZVRheE9mUnViJywgJ3N1YmplY3RUYXhTdGF2a2EnLCAndGF4U3VtJywgJ3RheFN1bU91dHNpZGUnLCAndGF4U3VtVG9QYXknLCAndGF4U3VtVG9SZWR1Y3Rpb24nLA0KICAgICAgICAnZXZlcnlNb250aGVyUGF5bWVudEFmdGVyUGVyaW9kJywgJ2V2ZXJ5TW9udGhGb3JLdmFydGFsTmV4dFBlcmlvZCcsICdldmVyeU1vbnRoRm9yU2Vjb25kS3ZhcnRhbE5leHRQZXJpb2QnLA0KICAgICAgICAnZXZlcnlNb250aEZvclRoaXJkS3ZhcnRhbE5leHRQZXJpb2QnLCAnZXZlcnlNb250aEZvckZvdXJ0aEt2YXJ0YWxOZXh0UGVyaW9kJ10NCg0KLy8g0YDQsNGB0YfQuNGC0YvQstCw0LXQvNGL0LUg0L/QvtC70Y8gKNCz0YDQsNGE0LAgMiwgNCwgOSwgMTAsIDExKQ0KQEZpZWxkDQpkZWYgbm90TnVtYmVyQ2FsY0NvbHVtbnMgPSBbJ3JlZ2lvbkJhbmsnLCAnZGl2aXNpb25OYW1lJywgJ2NhbGNGbGFnJywgJ29ibGlnYXRpb25QYXlUYXgnLCAnYmFzZVRheE9mJ10NCg0KQEZpZWxkDQpkZWYgZm9ybURhdGFDYWNoZSA9IFs6XQ0KQEZpZWxkDQpkZWYgaGVscGVyQ2FjaGUgPSBbOl0NCg0KQEZpZWxkDQpkZWYgc3VtbWFyeU1hcCA9IFtbMzAxLCAzMDVdIDogItCU0L7RhdC+0LTRiywg0YPRh9C40YLRi9Cy0LDQtdC80YvQtSDQsiDQv9GA0L7RgdGC0YvRhSDQoNCd0KMiLCBbMzAyXSA6ICLQodCy0L7QtNC90LDRjyDRhNC+0YDQvNCwINC90LDRh9C40YHQu9C10L3QvdGL0YUg0LTQvtGF0L7QtNC+0LIiLCAvL9C80LDQutGB0LjQvNGD0Lwg0LTQstCwINCy0LjQtNCwINC40YHRgtC+0YfQvdC40LrQvtCyINGBINC+0LTQvdC40Lwg0LjQvNC10L3QtdC8DQogICAgICAgICAgICAgICAgICBbMzAzXSA6ICLQodCy0L7QtNC90LDRjyDRhNC+0YDQvNCwINC90LDRh9C40YHQu9C10L3QvdGL0YUg0YDQsNGB0YXQvtC00L7QsiIsIFszMDQsIDMxMF0gOiAi0KDQsNGB0YXQvtC00YssINGD0YfQuNGC0YvQstCw0LXQvNGL0LUg0LIg0L/RgNC+0YHRgtGL0YUg0KDQndCjIl0NCg0KQEZpZWxkDQpsb25nIGNlbnRyYWxJZCA9IDExMyAvLyBJRCDQptC10L3RgtGA0LDQu9GM0L3QvtCz0L4g0LDQv9C/0LDRgNCw0YLQsA0KDQpARmllbGQNCmRlZiBzdGFydERhdGUgPSBudWxsDQoNCkBGaWVsZA0KZGVmIGVuZERhdGUgPSBudWxsDQoNCmRlZiBnZXRSZXBvcnRQZXJpb2RTdGFydERhdGUoKSB7DQogICAgaWYgKHN0YXJ0RGF0ZSA9PSBudWxsKSB7DQogICAgICAgIHN0YXJ0RGF0ZSA9IHJlcG9ydFBlcmlvZFNlcnZpY2UuZ2V0Q2FsZW5kYXJTdGFydERhdGUoZm9ybURhdGEucmVwb3J0UGVyaW9kSWQpLnRpbWUNCiAgICB9DQogICAgcmV0dXJuIHN0YXJ0RGF0ZQ0KfQ0KDQpkZWYgZ2V0UmVwb3J0UGVyaW9kRW5kRGF0ZSgpIHsNCiAgICBpZiAoZW5kRGF0ZSA9PSBudWxsKSB7DQogICAgICAgIGVuZERhdGUgPSByZXBvcnRQZXJpb2RTZXJ2aWNlLmdldEVuZERhdGUoZm9ybURhdGEucmVwb3J0UGVyaW9kSWQpLnRpbWUNCiAgICB9DQogICAgcmV0dXJuIGVuZERhdGUNCn0NCg0KLy8g0KDQsNC30YvQvNC10L3QvtCy0LDQvdC40LUg0LfQsNC/0LjRgdC4INGB0L/RgNCw0LLQvtGH0L3QuNC60LANCmRlZiBnZXRSZWZCb29rVmFsdWUoZGVmIGxvbmcgcmVmQm9va0lkLCBkZWYgTG9uZyByZWNvcmRJZCkgew0KICAgIHJldHVybiBmb3JtRGF0YVNlcnZpY2UuZ2V0UmVmQm9va1ZhbHVlKHJlZkJvb2tJZCwgcmVjb3JkSWQsIHJlZkJvb2tDYWNoZSkNCn0NCg0KLy8g0J/QvtC40YHQuiDQt9Cw0L/QuNGB0Lgg0LIg0YHQv9GA0LDQstC+0YfQvdC40LrQtSDQv9C+INC30L3QsNGH0LXQvdC40Y4gKNC00LvRjyDRgNCw0YHRh9C10YLQvtCyKSArINC/0L4g0LTQsNGC0LUNCmRlZiBnZXRSZWZCb29rUmVjb3JkKGRlZiBMb25nIHJlZkJvb2tJZCwgZGVmIFN0cmluZyBhbGlhcywgZGVmIFN0cmluZyB2YWx1ZSwgZGVmIERhdGUgZGF5LCBkZWYgaW50IHJvd0luZGV4LCBkZWYgU3RyaW5nIGNlbGxOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgYm9vbGVhbiByZXF1aXJlZCkgew0KICAgIHJldHVybiBmb3JtRGF0YVNlcnZpY2UuZ2V0UmVmQm9va1JlY29yZChyZWZCb29rSWQsIHJlY29yZENhY2hlLCBwcm92aWRlckNhY2hlLCByZWZCb29rQ2FjaGUsIGFsaWFzLCB2YWx1ZSwNCiAgICAgICAgICAgIGRheSwgcm93SW5kZXgsIGNlbGxOYW1lLCBsb2dnZXIsIHJlcXVpcmVkKQ0KfQ0KDQovLyDQn9C+0LjRgdC6INC30LDQv9C40YHQuCDQsiDRgdC/0YDQsNCy0L7Rh9C90LjQutC1INC/0L4g0LfQvdCw0YfQtdC90LjRjiAo0LTQu9GPINC40LzQv9C+0YDRgtCwKQ0KZGVmIGdldFJlY29yZElkSW1wb3J0KGRlZiBMb25nIHJlZkJvb2tJZCwgZGVmIFN0cmluZyBhbGlhcywgZGVmIFN0cmluZyB2YWx1ZSwgZGVmIGludCByb3dJbmRleCwgZGVmIGludCBjb2xJbmRleCwNCiAgICAgICAgICAgICAgICAgICAgICBkZWYgYm9vbGVhbiByZXF1aXJlZCA9IHRydWUpIHsNCiAgICBpZiAodmFsdWUgPT0gbnVsbCB8fCB2YWx1ZS50cmltKCkuaXNFbXB0eSgpKSB7DQogICAgICAgIHJldHVybiBudWxsDQogICAgfQ0KICAgIHJldHVybiBmb3JtRGF0YVNlcnZpY2UuZ2V0UmVmQm9va1JlY29yZElkSW1wb3J0KHJlZkJvb2tJZCwgcmVjb3JkQ2FjaGUsIHByb3ZpZGVyQ2FjaGUsIGFsaWFzLCB2YWx1ZSwNCiAgICAgICAgICAgIGdldFJlcG9ydFBlcmlvZEVuZERhdGUoKSwgcm93SW5kZXgsIGNvbEluZGV4LCBsb2dnZXIsIHJlcXVpcmVkKQ0KfQ0KDQovKioNCiAqINCg0LDRgdGH0LXRgtGLLiDQkNC70LPQvtGA0LjRgtC80Ysg0LfQsNC/0L7Qu9C90LXQvdC40Y8g0L/QvtC70LXQuSDRhNC+0YDQvNGLLg0KICovDQp2b2lkIGNhbGMoKSB7DQogICAgZGVmIGRhdGFSb3dzID0gZm9ybURhdGFTZXJ2aWNlLmdldERhdGFSb3dIZWxwZXIoZm9ybURhdGEpLmFsbENhY2hlZA0KDQogICAgLy8g0YPQtNCw0LvQuNGC0Ywg0YTQuNC60YHQuNGA0L7QstCw0L3QvdGL0LUg0YHRgtGA0L7QutC4DQogICAgZGVsZXRlQWxsQWxpYXNlZChkYXRhUm93cykNCg0KICAgIGxvZ2ljYWxDaGVja0JlZm9yZUNhbGMoKQ0KICAgIGlmIChsb2dnZXIuY29udGFpbnNMZXZlbChMb2dMZXZlbC5FUlJPUikpIHsNCiAgICAgICAgcmV0dXJuDQogICAgfQ0KDQogICAgZGVmIHByb3BlcnR5UHJpY2VTdW1tID0gZ2V0U3VtQWxsKGRhdGFSb3dzLCAicHJvcGVydHlQcmljZSIpDQogICAgZGVmIHdvcmtlcnNDb3VudFN1bW0gPSBnZXRTdW1BbGwoZGF0YVJvd3MsICJ3b3JrZXJzQ291bnQiKQ0KDQogICAgLy8g0KDQsNGB0L/RgNC10LTQtdC70Y/QtdC80LDRjyDQvdCw0LvQvtCz0L7QstCw0Y8g0LHQsNC30LAg0LfQsCDQvtGC0YfQtdGC0L3Ri9C5INC/0LXRgNC40L7QtC4NCiAgICBkZWYgdGF4QmFzZQ0KICAgIGlmIChmb3JtRGF0YUV2ZW50ICE9IEZvcm1EYXRhRXZlbnQuQ09NUE9TRSkgew0KICAgICAgICB0YXhCYXNlID0gcm91bmRWYWx1ZShnZXRUYXhCYXNlQXNEZWNsYXJhdGlvbigpLCAwKQ0KICAgIH0NCiAgICAvLyDQntGC0YfRkdGC0L3Ri9C5INC/0LXRgNC40L7QtC4NCiAgICBkZWYgcmVwb3J0UGVyaW9kID0gZ2V0UmVwb3J0UGVyaW9kKCkNCiAgICBkZWYgZGVwYXJ0bWVudFBhcmFtc0RhdGUgPSBnZXRSZXBvcnRQZXJpb2RFbmREYXRlKCkgLSAxDQoNCiAgICAvLyDQn9C+0LvRg9GH0LXQvdC40LUg0YHRgtGA0L7QuiDRhNC+0YDQvNGLICLQodCy0LXQtNC10L3QuNGPINC+INGB0YPQvNC80LDRhSDQvdCw0LvQvtCz0LAg0L3QsCDQv9GA0LjQsdGL0LvRjCwg0YPQv9C70LDRh9C10L3QvdC+0LPQviDQkdCw0L3QutC+0Lwg0LfQsCDRgNGD0LHQtdC20L7QvCINCiAgICBkZWYgZGF0YVJvd3NTdW0gPSBnZXREYXRhUm93cyg0MjEsIEZvcm1EYXRhS2luZC5BRERJVElPTkFMKQ0KDQogICAgLy8g0KHRg9C80LzQsCDQvdCw0LvQvtCz0LAg0L3QsCDQv9GA0LjQsdGL0LvRjCwg0LLRi9C/0LvQsNGH0LXQvdC90LDRjyDQt9CwINC/0YDQtdC00LXQu9Cw0LzQuCDQoNC+0YHRgdC40LnRgdC60L7QuSDQpNC10LTQtdGA0LDRhtC40Lgg0LIg0L7RgtGH0ZHRgtC90L7QvCDQv9C10YDQuNC+0LTQtS4NCiAgICBkZWYgc3VtTmFsID0gMA0KICAgIGRlZiBzdW1UYXhSZWNvcmRzID0gZ2V0UmVmQm9va1JlY29yZCgzMywgIkRFUEFSVE1FTlRfSUQiLCAiMSIsIGRlcGFydG1lbnRQYXJhbXNEYXRlLCAtMSwgbnVsbCwgZmFsc2UpDQogICAgaWYgKHN1bVRheFJlY29yZHMgIT0gbnVsbCAmJiAhc3VtVGF4UmVjb3Jkcy5pc0VtcHR5KCkpIHsNCiAgICAgICAgc3VtTmFsID0gZ2V0QWxpYXNGcm9tRm9ybShkYXRhUm93c1N1bSwgJ3RheFN1bScsICdTVU1fVEFYJykNCiAgICB9DQoNCiAgICBkZWYgcHJldkRhdGFSb3dzID0gZ2V0UHJldkRhdGFSb3dzKCkNCg0KICAgIC8vINGA0LDRgdGH0LXRgiDQs9GA0LDRhNGLIDIuLjQsIDguLjIxDQogICAgZm9yIChyb3cgaW4gZGF0YVJvd3MpIHsNCiAgICAgICAgLy8g0LPRgNCw0YTQsCAyIC0g0L3QsNC30LLQsNC90LjQtSDQv9C+0LTRgNCw0LfQtNC10LvQtdC90LjRjw0KICAgICAgICByb3cucmVnaW9uQmFuayA9IGNhbGMyKHJvdykNCg0KICAgICAgICBkZWYgaW5jb21lUGFyYW0NCiAgICAgICAgaWYgKHJvdy5yZWdpb25CYW5rRGl2aXNpb24gIT0gbnVsbCkgew0KICAgICAgICAgICAgZGVmIGRlcGFydG1lbnRQYXJhbSA9IGdldFJlZkJvb2tWYWx1ZSgzMCwgcm93LnJlZ2lvbkJhbmtEaXZpc2lvbikNCg0KICAgICAgICAgICAgZGVmIGRlcFBhcmFtID0gZ2V0RGVwUGFyYW0oZGVwYXJ0bWVudFBhcmFtKQ0KICAgICAgICAgICAgZGVmIGRlcElkID0gZGVwUGFyYW0uZ2V0KFJlZkJvb2suUkVDT1JEX0lEX0FMSUFTKS5udW1iZXJWYWx1ZSBhcyBsb25nDQoNCiAgICAgICAgICAgIGluY29tZVBhcmFtID0gZ2V0UmVmQm9va1JlY29yZCgzMywgIkRFUEFSVE1FTlRfSUQiLCAiJGRlcElkIiwgZGVwYXJ0bWVudFBhcmFtc0RhdGUsIC0xLCBudWxsLCBmYWxzZSkNCiAgICAgICAgfQ0KICAgICAgICBpZiAoaW5jb21lUGFyYW0gPT0gbnVsbCB8fCBpbmNvbWVQYXJhbS5pc0VtcHR5KCkpIHsNCiAgICAgICAgICAgIGNvbnRpbnVlDQogICAgICAgIH0NCiAgICAgICAgLy8g0LPRgNCw0YTQsCA0IC0g0L3QsNC40LzQtdC90L7QstCw0L3QuNC1INC/0L7QtNGA0LDQt9C00LXQu9C10L3QuNGPINCyINC00LXQutC70LDRgNCw0YbQuNC4DQogICAgICAgIHJvdy5kaXZpc2lvbk5hbWUgPSBjYWxjNChyb3cpDQoNCiAgICAgICAgLy8g0LPRgNCw0YTQsCA5IC0g0J/RgNC40LfQvdCw0Log0YDQsNGB0YfRkdGC0LANCiAgICAgICAgcm93LmNhbGNGbGFnID0gY2FsYzkocm93KQ0KDQogICAgICAgIC8vINCz0YDQsNGE0LAgMTAgLSDQntCx0Y/Qt9Cw0L3QvdC+0YHRgtGMINC/0L4g0YPQv9C70LDRgtC1INC90LDQu9C+0LPQsA0KICAgICAgICByb3cub2JsaWdhdGlvblBheVRheCA9IGNhbGMxMChyb3cpDQoNCiAgICAgICAgLy8g0LPRgNCw0YTQsCAxMQ0KICAgICAgICByb3cuYmFzZVRheE9mID0gY2FsYzExKHJvdywgcHJvcGVydHlQcmljZVN1bW0sIHdvcmtlcnNDb3VudFN1bW0pDQoNCiAgICAgICAgaWYgKGZvcm1EYXRhRXZlbnQgIT0gRm9ybURhdGFFdmVudC5DT01QT1NFKSB7DQogICAgICAgICAgICAvLyDQs9GA0LDRhNCwIDEyDQogICAgICAgICAgICByb3cuYmFzZVRheE9mUnViID0gY2FsYzEyKHJvdywgdGF4QmFzZSkNCiAgICAgICAgfQ0KICAgICAgICAvLyDQs9GA0LDRhNCwIDEzDQogICAgICAgIHJvdy5zdWJqZWN0VGF4U3RhdmthID0gY2FsYzEzKHJvdykNCg0KICAgICAgICAvLyDQs9GA0LDRhNCwIDE0DQogICAgICAgIHJvdy50YXhTdW0gPSBjYWxjMTQocm93KQ0KDQogICAgICAgIC8vINCz0YDQsNGE0LAgMTQuLjIxDQogICAgICAgIGNhbGNDb2x1bW5Gcm9tMTRUbzIxKHByZXZEYXRhUm93cywgcm93LCByb3csIHN1bU5hbCwgcmVwb3J0UGVyaW9kKQ0KICAgIH0NCg0KICAgIC8vINC90YPQttC10L0g0L7RgtC00LXQu9GM0L3Ri9C5INGA0LDRgdGH0LXRgg0KICAgIGZvciAocm93IGluIGRhdGFSb3dzKSB7DQogICAgICAgIGNhbGMxOF8xOShwcmV2RGF0YVJvd3MsIGRhdGFSb3dzLCByb3csIHJlcG9ydFBlcmlvZCkNCiAgICB9DQoNCiAgICBkZWYgdGVtcGxhdGVSb3dzID0gZm9ybURhdGFTZXJ2aWNlLmdldEZvcm1UZW1wbGF0ZShmb3JtRGF0YS5mb3JtVHlwZS5pZCwgZm9ybURhdGEucmVwb3J0UGVyaW9kSWQpLmdldFJvd3MoKQ0KDQogICAgLy8g0LTQvtCx0LDQstC40YLRjCDRgdGC0YDQvtC60YMg0KbQkCAo0YHQutC+0YDRgNC10LrRgtGA0LjRgNC+0LLQsNC90L3Ri9C5KSAo0LPRgNCw0YTQsCAxLi4yMikNCiAgICBkZWYgY2FUb3RhbFJvdyA9IGdldERhdGFSb3codGVtcGxhdGVSb3dzLCAnY2EnKQ0KICAgIGRhdGFSb3dzLmFkZChjYVRvdGFsUm93KQ0KDQogICAgLy8g0LTQvtCx0LDQstC40YLRjCDQuNGC0L7Qs9C+ICjQs9GA0LDRhNCwIDUuLjcsIDEwLCAxMSwgMTMuLjIyKQ0KICAgIGRlZiB0b3RhbFJvdyA9IGdldERhdGFSb3codGVtcGxhdGVSb3dzLCAndG90YWwnKQ0KICAgIGNhbGNUb3RhbFJvdyhkYXRhUm93cywgdG90YWxSb3cpDQogICAgZGF0YVJvd3MuYWRkKHRvdGFsUm93KQ0KDQogICAgLy8g0LIg0YHRgtGA0L7QutCw0YUg0LTQvtC70LbQvdCwINCx0YvRgtGMINC40YLQvtCz0L7QstCw0Y8NCiAgICBjYWxjQ2FUb3RhbFJvdyhkYXRhUm93cywgcHJldkRhdGFSb3dzLCBjYVRvdGFsUm93LCB0b3RhbFJvdywgdGF4QmFzZSwgc3VtTmFsKQ0KDQogICAgLy8g0J/QvtGB0LvQtSDRgNCw0YHRh9C10YLQsCDRhNC40LrRgS4g0YHRgtGA0L7QutC4ICLQptCQKNGB0LrQvtGA0YDQtdC60YIpIiDQvdC10L7QsdGF0L7QtNC40LzQviDQv9C10YDQtdGB0YfQuNGC0LDRgtGMINC00LvRjyDQs9GA0LDRhCAxMiwgMTQsIDE1LCAxNywgMTgsIDE5DQogICAgLy8g0YTQuNC60YHQuNGA0L7QstCw0L3QvdGD0Y4g0YHRgtGA0L7QutGDINC40YLQvtCz0L7Qsjog0YHRg9C80LzQsCDQstGB0LXRhSDRgdGC0YDQvtC6LCDQutGA0L7QvNC1INGB0YLRgNC+0LrQuCAi0KbQkCIg0Lgg0YHRgtGA0L7QutC4INC40YLQvtCz0L7Qsg0KICAgIHJlQ2FsY1RvdGFsUm93KGRhdGFSb3dzLCB0b3RhbFJvdykNCg0KICAgIHVwZGF0ZUluZGV4ZXMoZGF0YVJvd3MpDQp9DQoNCnZvaWQgcmVDYWxjVG90YWxSb3coZGVmIGRhdGFSb3dzLCBkZWYgdG90YWxSb3cpIHsNCiAgICBkZWYgaXNUYXhQZXJpb2QgPSByZXBvcnRQZXJpb2RTZXJ2aWNlLmdldChmb3JtRGF0YS5yZXBvcnRQZXJpb2RJZCkub3JkZXIgPT0gNA0KDQogICAgdG90YWxSb3cuYmFzZVRheE9mUnViID0gMA0KICAgIHRvdGFsUm93LnRheFN1bSA9IDANCiAgICB0b3RhbFJvdy50YXhTdW1PdXRzaWRlID0gMA0KICAgIHRvdGFsUm93LnRheFN1bVRvUmVkdWN0aW9uID0gMA0KICAgIHRvdGFsUm93LmV2ZXJ5TW9udGhlclBheW1lbnRBZnRlclBlcmlvZCA9IChpc1RheFBlcmlvZCA/IG51bGwgOiAwKQ0KICAgIHRvdGFsUm93LmV2ZXJ5TW9udGhGb3JLdmFydGFsTmV4dFBlcmlvZCA9IDANCiAgICBmb3IgKHJvdyBpbiBkYXRhUm93cykgew0KICAgICAgICBpZiAocm93LmdldEFsaWFzKCkgPT0gJ3RvdGFsJyB8fCByb3cucmVnaW9uQmFuayA9PSBjZW50cmFsSWQpIHsNCiAgICAgICAgICAgIGNvbnRpbnVlDQogICAgICAgIH0NCiAgICAgICAgdG90YWxSb3cuYmFzZVRheE9mUnViICs9IHJvdy5iYXNlVGF4T2ZSdWIgPzogMA0KICAgICAgICB0b3RhbFJvdy50YXhTdW0gKz0gcm93LnRheFN1bSA/OiAwDQogICAgICAgIHRvdGFsUm93LnRheFN1bU91dHNpZGUgKz0gcm93LnRheFN1bU91dHNpZGUgPzogMA0KICAgICAgICB0b3RhbFJvdy50YXhTdW1Ub1JlZHVjdGlvbiArPSByb3cudGF4U3VtVG9SZWR1Y3Rpb24gPzogMA0KICAgICAgICBpZiAoIWlzVGF4UGVyaW9kKSB7DQogICAgICAgICAgICB0b3RhbFJvdy5ldmVyeU1vbnRoZXJQYXltZW50QWZ0ZXJQZXJpb2QgKz0gcm93LmV2ZXJ5TW9udGhlclBheW1lbnRBZnRlclBlcmlvZCA/OiAwDQogICAgICAgIH0NCiAgICAgICAgdG90YWxSb3cuZXZlcnlNb250aEZvckt2YXJ0YWxOZXh0UGVyaW9kICs9IHJvdy5ldmVyeU1vbnRoRm9yS3ZhcnRhbE5leHRQZXJpb2QgPzogMA0KICAgIH0NCn0NCg0Kdm9pZCBjYWxjVG90YWxSb3coZGVmIGRhdGFSb3dzLCBkZWYgdG90YWxSb3cpIHsNCiAgICBkZWYgaXNUYXhQZXJpb2QgPSByZXBvcnRQZXJpb2RTZXJ2aWNlLmdldChmb3JtRGF0YS5yZXBvcnRQZXJpb2RJZCkub3JkZXIgPT0gNA0KICAgIGNhbGNUb3RhbFN1bShkYXRhUm93cywgdG90YWxSb3csIGlzVGF4UGVyaW9kID8gKHRvdGFsQ29sdW1ucyAtICdldmVyeU1vbnRoZXJQYXltZW50QWZ0ZXJQZXJpb2QnKSA6IHRvdGFsQ29sdW1ucykNCiAgICAvLyDQs9GA0LDRhNCwIDExDQogICAgdG90YWxSb3cuYmFzZVRheE9mID0gcm91bmRWYWx1ZShkYXRhUm93cy5zdW17IHJvdyAtPg0KICAgICAgICBTdHJpbmcgdmFsdWUgPSByb3cuYmFzZVRheE9mDQogICAgICAgIChyb3cuZ2V0QWxpYXMoKSA9PSBudWxsICYmIHZhbHVlPy5pc0JpZ0RlY2ltYWwoKSkgPyBuZXcgQmlnRGVjaW1hbCh2YWx1ZSkgOiBCaWdEZWNpbWFsLlpFUk8NCiAgICB9ID86IEJpZ0RlY2ltYWwuWkVSTywgMTUpLnRvUGxhaW5TdHJpbmcoKQ0KfQ0KDQp2b2lkIGNhbGNDYVRvdGFsUm93KGRlZiBkYXRhUm93cywgZGVmIHByZXZEYXRhUm93cywgZGVmIGNhVG90YWxSb3csIGRlZiB0b3RhbFJvdywgZGVmIHRheEJhc2UsIGRlZiBzdW1OYWwpIHsNCiAgICBkZWYgcmVwb3J0UGVyaW9kID0gZ2V0UmVwb3J0UGVyaW9kKCkNCg0KICAgIGRlZiBpc09sZENhbGMgPSByZXBvcnRQZXJpb2QudGF4UGVyaW9kLnllYXIgPCAyMDE1IHx8IChyZXBvcnRQZXJpb2QudGF4UGVyaW9kLnllYXIgPT0gMjAxNSAmJiByZXBvcnRQZXJpb2Qub3JkZXIgPCAzKQ0KDQogICAgLy8g0L3QsNC50YLQuCDRgdGC0YDQvtC60YMg0KbQkA0KICAgIGRlZiBjYVJvdyA9IGZpbmRDQShkYXRhUm93cykNCiAgICBpZiAoY2FSb3cgIT0gbnVsbCkgew0KICAgICAgICAvLyDRgNCw0YHRh9C10YLRiyDQtNC70Y8g0YHRgtGA0L7QutC4INCm0JAgKNGB0LrQvtGA0YDQtdC60YLQuNGA0L7QstCw0L3QvdGL0LkpDQogICAgICAgIFsnbnVtYmVyJywgJ3JlZ2lvbkJhbmtEaXZpc2lvbicsICdkaXZpc2lvbk5hbWUnLCAna3BwJywgJ3Byb3BlcnR5UHJpY2UnLCAnd29ya2Vyc0NvdW50JywgJ3N1YmplY3RUYXhDcmVkaXQnLA0KICAgICAgICAgJ2NhbGNGbGFnJywgJ29ibGlnYXRpb25QYXlUYXgnLCAnYmFzZVRheE9mJywgJ3N1YmplY3RUYXhTdGF2a2EnLCAndGF4U3VtVG9QYXknLA0KICAgICAgICAgJ2V2ZXJ5TW9udGhGb3JTZWNvbmRLdmFydGFsTmV4dFBlcmlvZCcsICdldmVyeU1vbnRoRm9yVGhpcmRLdmFydGFsTmV4dFBlcmlvZCcsDQogICAgICAgICAnZXZlcnlNb250aEZvckZvdXJ0aEt2YXJ0YWxOZXh0UGVyaW9kJ10uZWFjaCB7IGFsaWFzIC0+DQogICAgICAgICAgICBjYVRvdGFsUm93W2FsaWFzXSA9IGNhUm93W2FsaWFzXQ0KICAgICAgICB9DQoNCiAgICAgICAgZGVmIHRlbXBWYWx1ZQ0KICAgICAgICBpZiAoaXNPbGRDYWxjKSB7DQogICAgICAgICAgICB0ZW1wVmFsdWUgPSBjYVJvdy5ldmVyeU1vbnRoZXJQYXltZW50QWZ0ZXJQZXJpb2QNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIHN3aXRjaCAocmVwb3J0UGVyaW9kLm9yZGVyKSB7DQogICAgICAgICAgICAgICAgY2FzZSAxOiAvLyDQn9C10YDQuNC+0LQg0YTQvtGA0LzRiyDCqzEg0LrQstCw0YDRgtCw0LvCuzoNCiAgICAgICAgICAgICAgICAgICAgLy8g0J/RgNC40L3QuNC80LDQtdGCINC30L3QsNGH0LXQvdC40LUgwqvQs9GA0LDRhNGLIDE4wrsg0L/QvtC00YDQsNC30LTQtdC70LXQvdC40Y8gwqvQptC10L3RgtGA0LDQu9GM0L3Ri9C5INCw0L/Qv9Cw0YDQsNGCwrsNCiAgICAgICAgICAgICAgICAgICAgdGVtcFZhbHVlID0gY2FSb3cuZXZlcnlNb250aGVyUGF5bWVudEFmdGVyUGVyaW9kDQogICAgICAgICAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgICAgICAgY2FzZSA0OiAvLyDQn9C10YDQuNC+0LQg0YTQvtGA0LzRiyAi0LPQvtC0Ig0KICAgICAgICAgICAgICAgICAgICB0ZW1wVmFsdWUgPSBudWxsDQogICAgICAgICAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgICAgICAgZGVmYXVsdDogLy8g0J/QtdGA0LjQvtC0INGE0L7RgNC80YsgwqvQv9C+0LvRg9Cz0L7QtNC40LUgLyA5INC80LXRgdGP0YbQtdCywrs6DQogICAgICAgICAgICAgICAgICAgIC8vIMKr0JPRgNCw0YTQsCAxOMK7ID0g0JfQvdCw0YfQtdC90LjQtSDCq9Cz0YDQsNGE0YsgMTjCuyDQv9C+0LTRgNCw0LfQtNC10LvQtdC90LjRjyDCq9Cm0LXQvdGC0YDQsNC70YzQvdGL0Lkg0LDQv9C/0LDRgNCw0YLCuyArICjQl9C90LDRh9C10L3QuNC1INC40YLQvtCz0L7QstC+0Lkg0YHRgtGA0L7QutC4INC/0L4gwqvQs9GA0LDRhNC1IDE4wrsgLSAo0JfQvdCw0YfQtdC90LjQtSDQuNGC0L7Qs9C+0LLQvtC5INGB0YLRgNC+0LrQuCDQv9C+IMKr0LPRgNCw0YTQtSAxNMK7IC0g0JfQvdCw0YfQtdC90LjQtSDQuNGC0L7Qs9C+0LLQvtC5INGB0YLRgNC+0LrQuCDQv9C+IMKr0LPRgNCw0YTQtSAxNMK7INGE0L7RgNC80Ysg0L/RgNC10LTRi9C00YPRidC10LPQviDQv9C10YDQuNC+0LTQsCkpDQogICAgICAgICAgICAgICAgICAgIGRlZiBwcmV2VGF4U3VtID0gcHJldkRhdGFSb3dzPy5maW5kIHtpdC5nZXRBbGlhcygpID09ICd0b3RhbCd9Py50YXhTdW0gPzogMA0KICAgICAgICAgICAgICAgICAgICB0ZW1wVmFsdWUgPSAoY2FSb3cuZXZlcnlNb250aGVyUGF5bWVudEFmdGVyUGVyaW9kID86IDApICsgKCh0b3RhbFJvdy5ldmVyeU1vbnRoZXJQYXltZW50QWZ0ZXJQZXJpb2QgPzogMCkgLSAoKHRvdGFsUm93LnRheFN1bSA/OiAwKSAtIHByZXZUYXhTdW0pKQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGNhVG90YWxSb3cuZXZlcnlNb250aGVyUGF5bWVudEFmdGVyUGVyaW9kID0gdGVtcFZhbHVlDQoNCiAgICAgICAgaWYgKGZvcm1EYXRhRXZlbnQgIT0gRm9ybURhdGFFdmVudC5DT01QT1NFKSB7DQogICAgICAgICAgICAvLyDQs9GA0LDRhNCwIDEyDQogICAgICAgICAgICBjYVRvdGFsUm93LmJhc2VUYXhPZlJ1YiA9ICh0YXhCYXNlID86IDApIC0gKHRvdGFsUm93LmJhc2VUYXhPZlJ1YiA/OiAwKSArIChjYVJvdy5iYXNlVGF4T2ZSdWIgPzogMCkNCiAgICAgICAgfQ0KDQogICAgICAgIC8vINCz0YDQsNGE0LAgMTQNCiAgICAgICAgY2FUb3RhbFJvdy50YXhTdW0gPSByb3VuZFZhbHVlKChjYVRvdGFsUm93LmJhc2VUYXhPZlJ1YiA/OiAwKSAqIChjYVRvdGFsUm93LnN1YmplY3RUYXhTdGF2a2EgPzogMCkgLyAxMDAsIDApDQoNCiAgICAgICAgLy8g0LPRgNCw0YTQsCAxNQ0KICAgICAgICBjYVRvdGFsUm93LnRheFN1bU91dHNpZGUgPSAwLjkgKiBzdW1OYWwgLSB0b3RhbFJvdy50YXhTdW1PdXRzaWRlICsgY2FSb3cudGF4U3VtT3V0c2lkZQ0KDQogICAgICAgIC8vINCz0YDQsNGE0LAgMTcNCiAgICAgICAgaWYgKGNhVG90YWxSb3cudGF4U3VtIDwgKChjYVRvdGFsUm93LnN1YmplY3RUYXhDcmVkaXQgPzogMCkgKyBjYVRvdGFsUm93LnRheFN1bU91dHNpZGUpKSB7IC8vIMKr0LPRgNCw0YTQsCAxNMK7IDwgKMKr0LPRgNCw0YTQsCA4wrsgKyDCq9Cz0YDQsNGE0LAgMTXCuyApDQogICAgICAgICAgICAvLyAowqvQs9GA0LDRhNCwIDjCuyArIMKr0LPRgNCw0YTQsCAxNcK7KSAtIMKr0LPRgNCw0YTQsCAxNMK7DQogICAgICAgICAgICBjYVRvdGFsUm93LnRheFN1bVRvUmVkdWN0aW9uID0gKChjYVRvdGFsUm93LnN1YmplY3RUYXhDcmVkaXQgPzogMCkgKyBjYVRvdGFsUm93LnRheFN1bU91dHNpZGUpIC0gY2FUb3RhbFJvdy50YXhTdW0NCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIGNhVG90YWxSb3cudGF4U3VtVG9SZWR1Y3Rpb24gPSAwDQogICAgICAgIH0NCg0KICAgICAgICAvLyDQs9GA0LDRhNCwIDE5DQogICAgICAgIGlmIChyZXBvcnRQZXJpb2Qub3JkZXIgPT0gMykgew0KICAgICAgICAgICAgLy8gwqvQs9GA0LDRhNCwIDE5wrsgPSDCq9Cz0YDQsNGE0LAgMTjCuyDRgdGC0YDQvtC60LggItCm0JAgKNGB0LrQvtGA0YAuKSINCiAgICAgICAgICAgIGNhVG90YWxSb3cuZXZlcnlNb250aEZvckt2YXJ0YWxOZXh0UGVyaW9kID0gY2FUb3RhbFJvdy5ldmVyeU1vbnRoZXJQYXltZW50QWZ0ZXJQZXJpb2QNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIGNhVG90YWxSb3cuZXZlcnlNb250aEZvckt2YXJ0YWxOZXh0UGVyaW9kID0gMA0KICAgICAgICB9DQogICAgfQ0KfQ0KDQovLyDQvdCw0LfQstCw0L3QuNC1INC/0L7QtNGA0LDQt9C00LXQu9C10L3QuNGPDQpkZWYgY2FsYzIoZGVmIHJvdykgew0KICAgIGRlZiBkZXBhcnRtZW50UGFyYW0NCiAgICBpZiAocm93LnJlZ2lvbkJhbmtEaXZpc2lvbiAhPSBudWxsKSB7DQogICAgICAgIGRlcGFydG1lbnRQYXJhbSA9IGdldFJlZkJvb2tWYWx1ZSgzMEws'
        longString += ''
        longString += ''
        longString += ''
        longString += 'LCAxNzE1MCwgMTcyNTAsIDE3MjYwLCAxNzI3MCwgMTcyODAsIDE3MzAwLCAxNzMxMCwgMTczMjANCiAgICByZXN1bHQgLT0gZ2V0U3VtUm93c0J5Q29sKGRhdGFSb3dzU2ltcGxlLCAnaW5jb21lVHlwZUlkJywgJ3JudTZGaWVsZDEyQWNjZXB0ZWQnLCBbMTQxOTAsIDE0MjAwLCAxNDIxMCwgMTQyMjAsIDE0MjQwLA0KICAgICAgICAgICAgMTQyNTAsIDE3MTMwLCAxNzE0MCwgMTcxNTAsIDE3MjUwLCAxNzI2MCwgMTcyNzAsIDE3MjgwLCAxNzMwMCwgMTczMTAsIDE3MzIwXSkNCg0KICAgIHJldHVybiBnZXRMb25nKHJlc3VsdCkNCn0NCg0KZGVmIGdldENvbXBsZXhJbmNvbWVTdW1Sb3dzOShkZWYgZGF0YVJvd3MsIGRlZiBjb2Rlcykgew0KICAgIHJldHVybiBnZXRTdW1Sb3dzQnlDb2woZGF0YVJvd3MsICdpbmNvbWVUeXBlSWQnLCAnaW5jb21lVGF4U3VtUycsIGNvZGVzKQ0KfQ0KDQpkZWYgZ2V0Q29tcGxleENvbnN1bXB0aW9uU3VtUm93czkoZGVmIGRhdGFSb3dzLCBkZWYgY29kZXMpIHsNCiAgICByZXR1cm4gZ2V0U3VtUm93c0J5Q29sKGRhdGFSb3dzLCAnY29uc3VtcHRpb25UeXBlSWQnLCAnY29uc3VtcHRpb25UYXhTdW1TJywgY29kZXMpDQp9DQoNCmRlZiBnZXRTaW1wbGVJbmNvbWVTdW1Sb3dzOChkZWYgZGF0YVJvd3MsIGRlZiBjb2Rlcykgew0KICAgIHJldHVybiBnZXRTdW1Sb3dzQnlDb2woZGF0YVJvd3MsICdpbmNvbWVUeXBlSWQnLCAncm51NEZpZWxkNUFjY2VwdGVkJywgY29kZXMpDQp9DQoNCmRlZiBnZXRTdW1Sb3dzQnlDb2woZGVmIGRhdGFSb3dzLCBkZWYgY29sdW1uQ29kZSwgZGVmIGNvbHVtblN1bSwgZGVmIGNvZGVzKSB7DQogICAgZGVmIHJlc3VsdCA9IDANCiAgICBpZiAoIWRhdGFSb3dzKSB7DQogICAgICAgIHJldHVybiByZXN1bHQNCiAgICB9DQogICAgZGF0YVJvd3MuZWFjaCB7IHJvdyAtPg0KICAgICAgICBkZWYgY2VsbCA9IHJvdy5nZXRDZWxsKGNvbHVtblN1bSkNCiAgICAgICAgaWYgKHJvdy5nZXRDZWxsKGNvbHVtbkNvZGUpLnZhbHVlIGluIChTdHJpbmcgW10pY29kZXMgJiYgIWNlbGwuaGFzVmFsdWVPd25lcigpKSB7DQogICAgICAgICAgICByZXN1bHQgKz0gKGNlbGwudmFsdWUgPzogMCkNCiAgICAgICAgfQ0KICAgIH0NCiAgICByZXR1cm4gcmVzdWx0DQp9DQoNCmRlZiBnZXRWaXJSZWFsVG92U29iKGRlZiBkYXRhUm93cywgZGVmIGRhdGFSb3dzU2ltcGxlKSB7DQogICAgZGVmIHJlc3VsdCA9IDAuMA0KDQogICAgLy8g0JrQvtC0INCy0LjQtNCwINC00L7RhdC+0LTQsCA9IDEwODMwDQogICAgcmVzdWx0ICs9IGdldENvbXBsZXhJbmNvbWVTdW1Sb3dzOShkYXRhUm93cywgWzEwODMwXSkNCg0KICAgIC8vINCa0L7QtCDQstC40LTQsCDQtNC+0YXQvtC00LAgPSAxMDAwMCwgMTAwMTAsIDEwMDIwLCAxMDAzMCwgMTAwNDAsIDEwMDUwLCAxMDA2MCwgMTAwNzAsIDEwMDgwLA0KICAgIC8vIDEwMDkwLCAxMDEwMCwgMTAxMTAsIDEwMTIwLCAxMDEzMCwgMTAxNDAsIDEwMTUwLCAxMDE2MCwgMTAxNzAsIDEwMTgwLCAxMDE5MCwgMTAyMDAsIDEwMjEwLCAxMDIyMCwgMTAyMzAsDQogICAgLy8gMTAyNDAsIDEwMjUwLCAxMDI2MCwgMTAyNzAsIDEwMjgwLCAxMDI5MCwgMTAzMDAsIDEwMzEwLCAxMDMyMCwgMTAzMzAsIDEwMzQwLCAxMDM1MCwgMTAzNjAsIDEwMzcwLCAxMDM4MCwNCiAgICAvLyAxMDM5MCwgMTA0MDAsIDEwNDEwLCAxMDQyMCwgMTA0MzAsIDEwNDQwLCAxMDQ1MCwgMTA0NjAsIDEwNDcwLCAxMDQ4MCwgMTA0OTAsIDEwNTAwLCAxMDUxMCwgMTA1MjAsIDEwNTMwLA0KICAgIC8vIDEwNTQwLCAxMDU1MCwgMTA1NjAsIDEwNTcwLCAxMDU4MCwgMTA1OTAsIDEwNjAwLCAxMDYxMCwgMTA2MjAsIDEwNjMwLCAxMDY0MCwgMTA2NTAsIDEwNjYwLCAxMDY3MCwgMTA2ODAsDQogICAgLy8gMTA2OTAsIDEwNzAwLCAxMDcxMCwgMTA3MjAsIDEwNzMwLCAxMDc0MCwgMTA3NTAsIDEwNzgwLCAxMDc5MCwgMTA4MDAsIDEwODEwLCAxMDgyMCwgMTA4NDAsIDEwODUwLCAxMDg2MCwNCiAgICAvLyAxMDg3MCwgMTA4OTAsIDEwOTAwLCAxMDk5MCwgMTEwMDAsIDExMDEwLCAxMTAyMCwgMTEwMzAsIDExMTYwLCAxMTE3MCwgMTExODAsIDExMTkwLCAxMTIwMCwgMTEyMTAsIDExMjIwLA0KICAgIC8vIDExMjMwLCAxMTI0MCwgMTEyNTAsIDExMjYwLCAxMTI3MCwgMTEyODAsIDExMjkwLCAxMTMwMCwgMTEzMTANCiAgICByZXN1bHQgKz0gZ2V0U2ltcGxlSW5jb21lU3VtUm93czgoZGF0YVJvd3NTaW1wbGUsIFsxMDAwMCwgMTAwMTAsIDEwMDIwLCAxMDAzMCwgMTAwNDAsIDEwMDUwLCAxMDA2MCwgMTAwNzAsIDEwMDgwLA0KICAgICAgICAgICAgMTAwOTAsIDEwMTAwLCAxMDExMCwgMTAxMjAsIDEwMTMwLCAxMDE0MCwgMTAxNTAsIDEwMTYwLCAxMDE3MCwgMTAxODAsIDEwMTkwLCAxMDIwMCwgMTAyMTAsIDEwMjIwLCAxMDIzMCwNCiAgICAgICAgICAgIDEwMjQwLCAxMDI1MCwgMTAyNjAsIDEwMjcwLCAxMDI4MCwgMTAyOTAsIDEwMzAwLCAxMDMxMCwgMTAzMjAsIDEwMzMwLCAxMDM0MCwgMTAzNTAsIDEwMzYwLCAxMDM3MCwgMTAzODAsDQogICAgICAgICAgICAxMDM5MCwgMTA0MDAsIDEwNDEwLCAxMDQyMCwgMTA0MzAsIDEwNDQwLCAxMDQ1MCwgMTA0NjAsIDEwNDcwLCAxMDQ4MCwgMTA0OTAsIDEwNTAwLCAxMDUxMCwgMTA1MjAsIDEwNTMwLA0KICAgICAgICAgICAgMTA1NDAsIDEwNTUwLCAxMDU2MCwgMTA1NzAsIDEwNTgwLCAxMDU5MCwgMTA2MDAsIDEwNjEwLCAxMDYyMCwgMTA2MzAsIDEwNjQwLCAxMDY1MCwgMTA2NjAsIDEwNjcwLCAxMDY4MCwNCiAgICAgICAgICAgIDEwNjkwLCAxMDcwMCwgMTA3MTAsIDEwNzIwLCAxMDczMCwgMTA3NDAsIDEwNzUwLCAxMDc4MCwgMTA3OTAsIDEwODAwLCAxMDgxMCwgMTA4MjAsIDEwODQwLCAxMDg1MCwgMTA4NjAsDQogICAgICAgICAgICAxMDg3MCwgMTA4OTAsIDEwOTAwLCAxMDk5MCwgMTEwMDAsIDExMDEwLCAxMTAyMCwgMTEwMzAsIDExMTYwLCAxMTE3MCwgMTExODAsIDExMTkwLCAxMTIwMCwgMTEyMTAsIDExMjIwLA0KICAgICAgICAgICAgMTEyMzAsIDExMjQwLCAxMTI1MCwgMTEyNjAsIDExMjcwLCAxMTI4MCwgMTEyOTAsIDExMzAwLCAxMTMxMF0pDQoNCiAgICAvLyDQmtC+0LQg0LLQuNC00LAg0LTQvtGF0L7QtNC+0LIgPSAxMDE2MCwgMTAyMzAsIDEwMjQwLCAxMDI1MCwgMTAyNjAsIDEwMjcwLCAxMDI4MCwgMTAzMzAsIDEwNzYwLCAxMDc3MCwgMTA4ODAsIDExMTcwLCAxMTMwMCwgMTEzMTANCiAgICBkZWYgY29kZXMgPSBbMTAxNjAsIDEwMjMwLCAxMDI0MCwgMTAyNTAsIDEwMjYwLCAxMDI3MCwgMTAyODAsIDEwMzMwLCAxMDc2MCwgMTA3NzAsIDEwODgwLCAxMTE3MCwgMTEzMDAsIDExMzEwXQ0KDQogICAgLy8g0LPRgNCw0YTQsCA1DQogICAgcmVzdWx0ICs9IGdldFN1bVJvd3NCeUNvbChkYXRhUm93c1NpbXBsZSwgJ2luY29tZVR5cGVJZCcsICdybnU2RmllbGQxMFN1bScsIGNvZGVzKQ0KICAgIC8vINCz0YDQsNGE0LAgNg0KICAgIHJlc3VsdCAtPSBnZXRTdW1Sb3dzQnlDb2woZGF0YVJvd3NTaW1wbGUsICdpbmNvbWVUeXBlSWQnLCAncm51NkZpZWxkMTJBY2NlcHRlZCcsIGNvZGVzKQ0KDQogICAgcmV0dXJuIGdldExvbmcocmVzdWx0KQ0KfQ0KDQpkZWYgZ2V0Q29zdlJhc2hWcyhkZWYgZGF0YVJvd3MsIGRlZiBkYXRhUm93c1NpbXBsZSkgew0KICAgIGRlZiByZXN1bHQgPSAwDQoNCiAgICAvLyDQmtC+0LQg0LLQuNC00LAg0YDQsNGB0YXQvtC00LAgPSAyMDAyMCwgMjAwMzAsIDIwMDUwLCAyMDEzMCwgMjAyMDAsIDIwMjEwLCAyMDI4MCwgMjA0NzAsIDIwNDkwLA0KICAgIC8vIDIwNTAwLCAyMDUxMCwgMjA2MzAsIDIwODIwLCAyMDg1MCwgMjA5MzAsIDIwOTQwLCAyMDk1MCwgMjA5NjAsIDIwOTcwLCAyMDk4MCwgMjExNzANCiAgICByZXN1bHQgKz0gZ2V0Q29tcGxleENvbnN1bXB0aW9uU3VtUm93czkoZGF0YVJvd3MsIFsyMDAyMCwgMjAwMzAsIDIwMDUwLCAyMDEzMCwgMjAyMDAsIDIwMjEwLCAyMDI4MCwgMjA0NzAsIDIwNDkwLA0KICAgICAgICAgICAgMjA1MDAsIDIwNTEwLCAyMDYzMCwgMjA4MjAsIDIwODUwLCAyMDkzMCwgMjA5NDAsIDIwOTUwLCAyMDk2MCwgMjA5NzAsIDIwOTgwLCAyMTE3MF0pDQoNCiAgICAvLyDQmtC+0LQg0LLQuNC00LAg0YDQsNGB0YXQvtC00LAgPSAyMDAwMCwgMjAwMTAsIDIwMDQwLCAyMDA2MCwgMjAwNzAsIDIwMDgwLCAyMDA5MCwgMjAxMDAsIDIwMTEwLA0KICAgIC8vIDIwMTIwLCAyMDE0MCwgMjAxNTAsIDIwMTYwLCAyMDE3MCwgMjAxODAsIDIwMTkwLCAyMDIyMCwgMjAyMzAsIDIwMjQwLCAyMDI1MCwgMjAyNjAsIDIwMjcwLCAyMDI5MCwgMjAzMDAsDQogICAgLy8gMjAzMTAsIDIwMzIwLCAyMDMzMCwgMjAzNDAsIDIwMzUwLCAyMDM2MCwgMjAzNzAsIDIwMzgwLCAyMDQwMCwgMjA0MTAsIDIwNDMwLCAyMDQ1MCwgMjA1MzAsIDIwNTQwLCAyMDU1MCwNCiAgICAvLyAyMDU2MCwgMjA1NzAsIDIwNTgwLCAyMDU5MCwgMjA2MDAsIDIwNjEwLCAyMDYyMCwgMjA2NDAsIDIwNjUwLCAyMDY2MCwgMjA2NzAsIDIwNjgwLCAyMDY5MCwgMjA3MDAsIDIwNzEwLA0KICAgIC8vIDIwNzIwLCAyMDczMCwgMjA3NDAsIDIwNzUwLCAyMDc2MCwgMjA3NzAsIDIwNzgwLCAyMDc5MCwgMjA4MDAsIDIwODEwLCAyMDgzMCwgMjA4NjAsIDIwODcwLCAyMDg4MCwgMjA4OTAsDQogICAgLy8gMjA5MDAsIDIwOTEwLCAyMDkyMCwgMjA5OTAsIDIxMDAwLCAyMTAxMCwgMjEwMjAsIDIxMDQwLCAyMTEyMCwgMjExMzAsIDIxMTQwLCAyMTE1MCwgMjExNjAsIDIxMTgwLCAyMTE5MCwNCiAgICAvLyAyMTIwMCwgMjEyMTAsIDIxMjIwLCAyMTM0MCwgMjEzNTAsIDIxMzYwLCAyMTM3MCwgMjEzODAsIDIxNDMwLCAyMTQ0MCwgMjE0NTAsIDIxNDYwLCAyMTQ3MCwgMjE0ODAsIDIxNDkwDQogICAgcmVzdWx0ICs9IGdldFNpbXBsZUNvbnN1bXB0aW9uU3VtUm93czgoZGF0YVJvd3NTaW1wbGUsIFsyMDAwMCwgMjAwMTAsIDIwMDQwLCAyMDA2MCwgMjAwNzAsIDIwMDgwLCAyMDA5MCwgMjAxMDAsIDIwMTEwLA0KICAgICAgICAgICAgMjAxMjAsIDIwMTQwLCAyMDE1MCwgMjAxNjAsIDIwMTcwLCAyMDE4MCwgMjAxOTAsIDIwMjIwLCAyMDIzMCwgMjAyNDAsIDIwMjUwLCAyMDI2MCwgMjAyNzAsIDIwMjkwLCAyMDMwMCwNCiAgICAgICAgICAgIDIwMzEwLCAyMDMyMCwgMjAzMzAsIDIwMzQwLCAyMDM1MCwgMjAzNjAsIDIwMzcwLCAyMDM4MCwgMjA0MDAsIDIwNDEwLCAyMDQzMCwgMjA0NTAsIDIwNTMwLCAyMDU0MCwgMjA1NTAsDQogICAgICAgICAgICAyMDU2MCwgMjA1NzAsIDIwNTgwLCAyMDU5MCwgMjA2MDAsIDIwNjEwLCAyMDYyMCwgMjA2NDAsIDIwNjUwLCAyMDY2MCwgMjA2NzAsIDIwNjgwLCAyMDY5MCwgMjA3MDAsIDIwNzEwLA0KICAgICAgICAgICAgMjA3MjAsIDIwNzMwLCAyMDc0MCwgMjA3NTAsIDIwNzYwLCAyMDc3MCwgMjA3ODAsIDIwNzkwLCAyMDgwMCwgMjA4MTAsIDIwODMwLCAyMDg2MCwgMjA4NzAsIDIwODgwLCAyMDg5MCwNCiAgICAgICAgICAgIDIwOTAwLCAyMDkxMCwgMjA5MjAsIDIwOTkwLCAyMTAwMCwgMjEwMTAsIDIxMDIwLCAyMTA0MCwgMjExMjAsIDIxMTMwLCAyMTE0MCwgMjExNTAsIDIxMTYwLCAyMTE4MCwgMjExOTAsDQogICAgICAgICAgICAyMTIwMCwgMjEyMTAsIDIxMjIwLCAyMTM0MCwgMjEzNTAsIDIxMzYwLCAyMTM3MCwgMjEzODAsIDIxNDMwLCAyMTQ0MCwgMjE0NTAsIDIxNDYwLCAyMTQ3MCwgMjE0ODAsIDIxNDkwXSkNCg0KICAgIC8vINCz0YDQsNGE0LAgNQ0KICAgIC8vINCa0L7QtCDQstC40LTQsCDQtNC+0YXQvtC00LAgPSAyMDAxMCwgMjAxMTAsIDIwMTIwLCAyMDE2MCwNCiAgICAvLyAyMDE3MCwgMjAxODAsIDIwMTkwLCAyMDIyMCwgMjAyMzAsIDIwMjQwLCAyMDI1MCwgMjAyNjAsIDIwMjcwLCAyMDI5MCwgMjAzMDAsIDIwMzEwLCAyMDMyMCwgMjAzMzAsIDIwMzQwLA0KICAgIC8vIDIwMzUwLCAyMDM2MCwgMjAzNzAsIDIwMzgwLCAyMDQwMCwgMjA0MTAsIDIwNDUwLCAyMDU4MCwgMjA1OTAsIDIwNjAwLCAyMDYxMCwgMjA2MjAsIDIwNjQwLCAyMDY1MCwgMjA2NjAsDQogICAgLy8gMjA2NzAsIDIwNjgwLCAyMDY5MCwgMjA3MDAsIDIwNzMwLCAyMDc0MCwgMjA3NTAsIDIwNzYwLCAyMDc4MCwgMjA4MDAsIDIwODEwLCAyMDgzMCwgMjEwNDAsIDIxMzgwLCAyMTQ0MCwNCiAgICAvLyAyMTQ1MCwgMjE0NjAsIDIxNDcwDQogICAgcmVzdWx0ICs9IGdldFN1bVJvd3NCeUNvbChkYXRhUm93c1NpbXBsZSwgJ2NvbnN1bXB0aW9uVHlwZUlkJywgJ3JudTdGaWVsZDEwU3VtJywgWzIwMDEwLCAyMDExMCwgMjAxMjAsIDIwMTYwLA0KICAgICAgICAgICAgMjAxNzAsIDIwMTgwLCAyMDE5MCwgMjAyMjAsIDIwMjMwLCAyMDI0MCwgMjAyNTAsIDIwMjYwLCAyMDI3MCwgMjAyOTAsIDIwMzAwLCAyMDMxMCwgMjAzMjAsIDIwMzMwLCAyMDM0MCwNCiAgICAgICAgICAgIDIwMzUwLCAyMDM2MCwgMjAzNzAsIDIwMzgwLCAyMDQwMCwgMjA0MTAsIDIwNDUwLCAyMDU4MCwgMjA1OTAsIDIwNjAwLCAyMDYxMCwgMjA2MjAsIDIwNjQwLCAyMDY1MCwgMjA2NjAsDQogICAgICAgICAgICAyMDY3MCwgMjA2ODAsIDIwNjkwLCAyMDcwMCwgMjA3MzAsIDIwNzQwLCAyMDc1MCwgMjA3NjAsIDIwNzgwLCAyMDgwMCwgMjA4MTAsIDIwODMwLCAyMTA0MCwgMjEzODAsIDIxNDQwLA0KICAgICAgICAgICAgMjE0NTAsIDIxNDYwLCAyMTQ3MF0pDQoNCiAgICAvLyDQs9GA0LDRhNCwIDYNCiAgICAvLyDQmtC+0LQg0LLQuNC00LAg0LTQvtGF0L7QtNCwID0gMjAwMTAsIDIwMTEwLCAyMDEyMCwgMjAxNjAsDQogICAgLy8gMjAxNzAsIDIwMTgwLCAyMDE5MCwgMjAyMjAsIDIwMjMwLCAyMDI0MCwgMjAyNTAsIDIwMjYwLCAyMDI3MCwgMjAyOTAsIDIwMzAwLCAyMDMxMCwgMjAzMjAsIDIwMzMwLCAyMDM0MCwNCiAgICAvLyAyMDM1MCwgMjAzNjAsIDIwMzcwLCAyMDM4MCwgMjA0MDAsIDIwNDEwLCAyMDQ1MCwgMjA1ODAsIDIwNTkwLCAyMDYwMCwgMjA2MTAsIDIwNjIwLCAyMDY0MCwgMjA2NTAsIDIwNjYwLA0KICAgIC8vIDIwNjcwLCAyMDY4MCwgMjA2OTAsIDIwNzAwLCAyMDczMCwgMjA3NDAsIDIwNzUwLCAyMDc2MCwgMjA3ODAsIDIwODAwLCAyMDgxMCwgMjA4MzAsIDIxMDQwLCAyMTM4MCwgMjE0NDAsDQogICAgLy8gMjE0NTAsIDIxNDYwLCAyMTQ3MA0KICAgIHJlc3VsdCAtPSBnZXRTdW1Sb3dzQnlDb2woZGF0YVJvd3NTaW1wbGUsICdjb25zdW1wdGlvblR5cGVJZCcsICdybnU3RmllbGQxMkFjY2VwdGVkJywgWzIwMDEwLCAyMDExMCwgMjAxMjAsIDIwMTYwLA0KICAgICAgICAgICAgMjAxNzAsIDIwMTgwLCAyMDE5MCwgMjAyMjAsIDIwMjMwLCAyMDI0MCwgMjAyNTAsIDIwMjYwLCAyMDI3MCwgMjAyOTAsIDIwMzAwLCAyMDMxMCwgMjAzMjAsIDIwMzMwLCAyMDM0MCwNCiAgICAgICAgICAgIDIwMzUwLCAyMDM2MCwgMjAzNzAsIDIwMzgwLCAyMDQwMCwgMjA0MTAsIDIwNDUwLCAyMDU4MCwgMjA1OTAsIDIwNjAwLCAyMDYxMCwgMjA2MjAsIDIwNjQwLCAyMDY1MCwgMjA2NjAsDQogICAgICAgICAgICAyMDY3MCwgMjA2ODAsIDIwNjkwLCAyMDcwMCwgMjA3MzAsIDIwNzQwLCAyMDc1MCwgMjA3NjAsIDIwNzgwLCAyMDgwMCwgMjA4MTAsIDIwODMwLCAyMTA0MCwgMjEzODAsIDIxNDQwLA0KICAgICAgICAgICAgMjE0NTAsIDIxNDYwLCAyMTQ3MF0pDQoNCiAgICByZXR1cm4gZ2V0TG9uZyhyZXN1bHQpDQp9DQoNCmRlZiBnZXRTaW1wbGVDb25zdW1wdGlvblN1bVJvd3M4KGRlZiBkYXRhUm93cywgZGVmIGNvZGVzKSB7DQogICAgcmV0dXJuIGdldFN1bVJvd3NCeUNvbChkYXRhUm93cywgJ2NvbnN1bXB0aW9uVHlwZUlkJywgJ3JudTVGaWVsZDVBY2NlcHRlZCcsIGNvZGVzKQ0KfQ0KDQpkZWYgZ2V0UmFzaFZuZXJlYWxWcyhkZWYgZGF0YVJvd3MsIGRlZiBkYXRhUm93c1NpbXBsZSkgew0KICAgIGRlZiByZXN1bHQgPSAwLjANCg0KICAgIC8vINCz0YDQsNGE0LAgOQ0KICAgIC8vINCa0L7QtCDQstC40LTQsCDRgNCw0YHRhdC+0LTQsCA9IDI0NjYwLCAyNDY3MCwgMjU2ODAsIDI1NjkwLCAyNTgzMCwgMjYzMTAsIDI2MzIwLCAyNjMzMCwgMjYzNDAsDQogICAgLy8gMjYzNjAsIDI2MzcwLCAyNjgyMCwgMjY4MzAsIDI2ODQwLCAyNjg1MCwgMjY4NjAsIDI2ODcwLCAyNjg4MCwgMjY4OTAsIDI2OTAwLCAyNzA2MA0KICAgIHJlc3VsdCArPSBnZXRDb21wbGV4Q29uc3VtcHRpb25TdW1Sb3dzOShkYXRhUm93cywgWzI0NjYwLCAyNDY3MCwgMjU2ODAsIDI1NjkwLCAyNTgzMCwgMjYzMTAsIDI2MzIwLCAyNjMzMCwgMjYzNDAsDQogICAgICAgICAgICAyNjM2MCwgMjYzNzAsIDI2ODIwLCAyNjgzMCwgMjY4NDAsIDI2ODUwLCAyNjg2MCwgMjY4NzAsIDI2ODgwLCAyNjg5MCwgMjY5MDAsIDI3MDYwXSkNCg0KICAgIC8vINCz0YDQsNGE0LAgOCArIDUgLSA2DQogICAgLy8g0JrQvtC0INCy0LjQtNCwINGA0LDRgdGF0L7QtNCwID0gMjQwMDAsIDI0MDEwLCAyNDAyMCwgMjQwMzAsIDI0MDQwLCAyNDA1MCwgMjQwNjAsIDI0MDcwLCAyNDA4MCwgMjQwOTAsIDI0MTAwLCAyNDExMCwgMjQxMjAsIDI0MTMwLCAyNDE0MCwNCiAgICAvLyAyNDE1MCwgMjQxNjAsIDI0MTcwLCAyNDE4MCwgMjQxOTAsIDI0MjAwLCAyNDIxMCwgMjQyMjAsIDI0MjMwLCAyNDI0MCwgMjQyNTAsIDI0MjYwLCAyNDI3MCwgMjQyODAsIDI0MjkwLA0KICAgIC8vIDI0MzAwLCAyNDMxMCwgMjQzMjAsIDI0MzMwLCAyNDM0MCwgMjQzNTAsIDI0MzYwLCAyNDM3MCwgMjQzODAsIDI0MzkwLCAyNDQwMCwgMjQ0MTAsIDI0NDIwLCAyNDQzMCwgMjQ0NDAsDQogICAgLy8gMjQ0NTAsIDI0NDYwLCAyNDQ3MCwgMjQ0ODAsIDI0NDkwLCAyNDUwMCwgMjQ1MTAsIDI0NTIwLCAyNDUzMCwgMjQ1NDAsIDI0NTUwLCAyNDU2MCwgMjQ1NzAsIDI0NTgwLCAyNDU5MCwNCiAgICAvLyAyNDYwMCwgMjQ2MTAsIDI0NjIwLCAyNDYzMCwgMjQ2NDAsIDI0NjgwLCAyNDY5MCwgMjQ3MDAsIDI0NzEwLCAyNDcyMCwgMjQ3MzAsIDI0NzQwLCAyNDc1MCwgMjQ3NjAsIDI0NzcwLA0KICAgIC8vIDI0NzgwLCAyNDc5MCwgMjQ4MDAsIDI0ODEwLCAyNDgyMCwgMjQ4MzAsIDI0ODQwLCAyNDg1MCwgMjQ4NjAsIDI0ODcwLCAyNDg4MCwgMjQ4OTAsIDI0OTAwLCAyNDkxMCwgMjQ5MjAsDQogICAgLy8gMjQ5MzAsIDI0OTQwLCAyNDk1MCwgMjQ5NjAsIDI0OTcwLCAyNDk4MCwgMjQ5OTAsIDI1MDAwLCAyNTAxMCwgMjUwMjAsIDI1MDMwLCAyNTA0MCwgMjUwNTAsIDI1MDYwLCAyNTA3MCwNCiAgICAvLyAyNTA4MCwgMjUwOTAsIDI1MTAwLCAyNTExMCwgMjUxMjAsIDI1MTMwLCAyNTE0MCwgMjUxNTAsIDI1MTYwLCAyNTE3MCwgMjUxODAsIDI1MTkwLCAyNTIwMCwgMjUyMTAsIDI1MjIwLA0KICAgIC8vIDI1MjMwLCAyNTI0MCwgMjUyNTAsIDI1MjYwLCAyNTI3MCwgMjUyODAsIDI1MjkwLCAyNTMwMCwgMjUzMTAsIDI1MzIwLCAyNTMzMCwgMjUzNDAsIDI1MzUwLCAyNTM2MCwgMjUzNzAsDQogICAgLy8gMjUzODAsIDI1MzkwLCAyNTQwMCwgMjU0MTAsIDI1NDIwLCAyNTQzMCwgMjU0NDAsIDI1NDUwLCAyNTQ2MCwgMjU0NzAsIDI1NDgwLCAyNTQ5MCwgMjU1MDAsIDI1NTEwLCAyNTUyMCwNCiAgICAvLyAyNTUzMCwgMjU1NDAsIDI1NTUwLCAyNTU2MCwgMjU1NzAsIDI1NTgwLCAyNTU5MCwgMjU2MDAsIDI1NjEwLCAyNTYyMCwgMjU2MzAsIDI1NjQwLCAyNTY1MCwgMjU2NjAsIDI1NjcwLA0KICAgIC8vIDI1NzAwLCAyNTcxMCwgMjU3MjAsIDI1NzMwLCAyNTc0MCwgMjU3NTAsIDI1NzYwLCAyNTc3MCwgMjU3ODAsIDI1NzkwLCAyNTgwMCwgMjU4MTAsIDI1ODIwLCAyNTg0MCwgMjU4NTAsDQogICAgLy8gMjU4NjAsIDI1ODcwLCAyNTg4MCwgMjU4OTAsIDI1OTAwLCAyNTkxMCwgMjU5MjAsIDI1OTMwLCAyNTk0MCwgMjU5NTAsIDI1OTYwLCAyNTk3MCwgMjU5ODAsIDI1OTkwLCAyNjAwMCwNCiAgICAvLyAyNjAxMCwgMjYwMjAsIDI2MDMwLCAyNjA0MCwgMjYwNTAsIDI2MDYwLCAyNjA3MCwgMjYwODAsIDI2MDkwLCAyNjEwMCwgMjYxMTAsIDI2MTIwLCAyNjEzMCwgMjYxNDAsIDI2MTUwLA0KICAgIC8vIDI2MTYwLCAyNjE3MCwgMjYxODAsIDI2MTkwLCAyNjIwMCwgMjYyMTAsIDI2MjIwLCAyNjIzMCwgMjYyNDAsIDI2MjUwLCAyNjI2MCwgMjYyNzAsIDI2MjgwLCAyNjI5MCwgMjYzMDAsDQogICAgLy8gMjYzNTAsIDI2MzgwLCAyNjM5MCwgMjY0MDAsIDI2NDEwLCAyNjQyMCwgMjY0MzAsIDI2NDQwLCAyNjQ1MCwgMjY0NjAsIDI2NDcwLCAyNjQ4MCwgMjY0OTAsIDI2NTAwLCAyNjUxMCwNCiAgICAvLyAyNjUyMCwgMjY1MzAsIDI2NTQwLCAyNjU1MCwgMjY1NjAsIDI2NTcwLCAyNjU4MCwgMjY1OTAsIDI2NjAwLCAyNjYxMCwgMjY2MjAsIDI2NjMwLCAyNjY0MCwgMjY2NTAsIDI2NjYwLA0KICAgIC8vIDI2NjcwLCAyNjY4MCwgMjY2OTAsIDI2NzAwLCAyNjcxMCwgMjY3MjAsIDI2NzMwLCAyNjc0MCwgMjY3NTAsIDI2NzYwLCAyNjc3MCwgMjY3ODAsIDI2NzkwLCAyNjgwMCwgMjY4MTAsDQogICAgLy8gMjcwMTAsIDI3MDIwLCAyNzAzMCwgMjcwNDAsIDI3MDUwLCAyNzA3MCwgMjcwODANCiAgICBkZWYga251ID0gWzI0MDAwLCAyNDAxMCwgMjQwMjAsIDI0MDMwLCAyNDA0MCwgMjQwNTAsIDI0MDYwLCAyNDA3MCwgMjQwODAsIDI0MDkwLCAyNDEwMCwgMjQxMTAsIDI0MTIwLCAyNDEzMCwgMjQxNDAsDQogICAgICAgICAgICAyNDE1MCwgMjQxNjAsIDI0MTcwLCAyNDE4MCwgMjQxOTAsIDI0MjAwLCAyNDIxMCwgMjQyMjAsIDI0MjMwLCAyNDI0MCwgMjQyNTAsIDI0MjYwLCAyNDI3MCwgMjQyODAsIDI0MjkwLA0KICAgICAgICAgICAgMjQzMDAsIDI0MzEwLCAyNDMyMCwgMjQzMzAsIDI0MzQwLCAyNDM1MCwgMjQzNjAsIDI0MzcwLCAyNDM4MCwgMjQzOTAsIDI0NDAwLCAyNDQxMCwgMjQ0MjAsIDI0NDMwLCAyNDQ0MCwNCiAgICAgICAgICAgIDI0NDUwLCAyNDQ2MCwgMjQ0NzAsIDI0NDgwLCAyNDQ5MCwgMjQ1MDAsIDI0NTEwLCAyNDUyMCwgMjQ1MzAsIDI0NTQwLCAyNDU1MCwgMjQ1NjAsIDI0NTcwLCAyNDU4MCwgMjQ1OTAsDQogICAgICAgICAgICAyNDYwMCwgMjQ2MTAsIDI0NjIwLCAyNDYzMCwgMjQ2NDAsIDI0NjgwLCAyNDY5MCwgMjQ3MDAsIDI0NzEwLCAyNDcyMCwgMjQ3MzAsIDI0NzQwLCAyNDc1MCwgMjQ3NjAsIDI0NzcwLA0KICAgICAgICAgICAgMjQ3ODAsIDI0NzkwLCAyNDgwMCwgMjQ4MTAsIDI0ODIwLCAyNDgzMCwgMjQ4NDAsIDI0ODUwLCAyNDg2MCwgMjQ4NzAsIDI0ODgwLCAyNDg5MCwgMjQ5MDAsIDI0OTEwLCAyNDkyMCwNCiAgICAgICAgICAgIDI0OTMwLCAyNDk0MCwgMjQ5NTAsIDI0OTYwLCAyNDk3MCwgMjQ5ODAsIDI0OTkwLCAyNTAwMCwgMjUwMTAsIDI1MDIwLCAyNTAzMCwgMjUwNDAsIDI1MDUwLCAyNTA2MCwgMjUwNzAsDQogICAgICAgICAgICAyNTA4MCwgMjUwOTAsIDI1MTAwLCAyNTExMCwgMjUxMjAsIDI1MTMwLCAyNTE0MCwgMjUxNTAsIDI1MTYwLCAyNTE3MCwgMjUxODAsIDI1MTkwLCAyNTIwMCwgMjUyMTAsIDI1MjIwLA0KICAgICAgICAgICAgMjUyMzAsIDI1MjQwLCAyNTI1MCwgMjUyNjAsIDI1MjcwLCAyNTI4MCwgMjUyOTAsIDI1MzAwLCAyNTMxMCwgMjUzMjAsIDI1MzMwLCAyNTM0MCwgMjUzNTAsIDI1MzYwLCAyNTM3MCwNCiAgICAgICAgICAgIDI1MzgwLCAyNTM5MCwgMjU0MDAsIDI1NDEwLCAyNTQyMCwgMjU0MzAsIDI1NDQwLCAyNTQ1MCwgMjU0NjAsIDI1NDcwLCAyNTQ4MCwgMjU0OTAsIDI1NTAwLCAyNTUxMCwgMjU1MjAsDQogICAgICAgICAgICAyNTUzMCwgMjU1NDAsIDI1NTUwLCAyNTU2MCwgMjU1NzAsIDI1NTgwLCAyNTU5MCwgMjU2MDAsIDI1NjEwLCAyNTYyMCwgMjU2MzAsIDI1NjQwLCAyNTY1MCwgMjU2NjAsIDI1NjcwLA0KICAgICAgICAgICAgMjU3MDAsIDI1NzEwLCAyNTcyMCwgMjU3MzAsIDI1NzQwLCAyNTc1MCwgMjU3NjAsIDI1NzcwLCAyNTc4MCwgMjU3OTAsIDI1ODAwLCAyNTgxMCwgMjU4MjAsIDI1ODQwLCAyNTg1MCwNCiAgICAgICAgICAgIDI1ODYwLCAyNTg3MCwgMjU4ODAsIDI1ODkwLCAyNTkwMCwgMjU5MTAsIDI1OTIwLCAyNTkzMCwgMjU5NDAsIDI1OTUwLCAyNTk2MCwgMjU5NzAsIDI1OTgwLCAyNTk5MCwgMjYwMDAsDQogICAgICAgICAgICAyNjAxMCwgMjYwMjAsIDI2MDMwLCAyNjA0MCwgMjYwNTAsIDI2MDYwLCAyNjA3MCwgMjYwODAsIDI2MDkwLCAyNjEwMCwgMjYxMTAsIDI2MTIwLCAyNjEzMCwgMjYxNDAsIDI2MTUwLA0KICAgICAgICAgICAgMjYxNjAsIDI2MTcwLCAyNjE4MCwgMjYxOTAsIDI2MjAwLCAyNjIxMCwgMjYyMjAsIDI2MjMwLCAyNjI0MCwgMjYyNTAsIDI2MjYwLCAyNjI3MCwgMjYyODAsIDI2MjkwLCAyNjMwMCwNCiAgICAgICAgICAgIDI2MzUwLCAyNjM4MCwgMjYzOTAsIDI2NDAwLCAyNjQxMCwgMjY0MjAsIDI2NDMwLCAyNjQ0MCwgMjY0NTAsIDI2NDYwLCAyNjQ3MCwgMjY0ODAsIDI2NDkwLCAyNjUwMCwgMjY1MTAsDQogICAgICAgICAgICAyNjUyMCwgMjY1MzAsIDI2NTQwLCAyNjU1MCwgMjY1NjAsIDI2NTcwLCAyNjU4MCwgMjY1OTAsIDI2NjAwLCAyNjYxMCwgMjY2MjAsIDI2NjMwLCAyNjY0MCwgMjY2NTAsIDI2NjYwLA0KICAgICAgICAgICAgMjY2NzAsIDI2NjgwLCAyNjY5MCwgMjY3MDAsIDI2NzEwLCAyNjcyMCwgMjY3MzAsIDI2NzQwLCAyNjc1MCwgMjY3NjAsIDI2NzcwLCAyNjc4MCwgMjY3OTAsIDI2ODAwLCAyNjgxMCwNCiAgICAgICAgICAgIDI3MDEwLCAyNzAyMCwgMjcwMzAsIDI3MDQwLCAyNzA1MCwgMjcwNzAsIDI3MDgwXQ0KICAgIHJlc3VsdCArPSBnZXRDYWxjdWxhdGVkU2ltcGxlQ29uc3VtcHRpb24oZGF0YVJvd3NTaW1wbGUsIGtudSkNCg0KICAgIC8vINCz0YDQsNGE0LAgOQ0KICAgIC8vINCa0L7QtCDQstC40LTQsCDRgNCw0YHRhdC+0LTQsCA9IDI0NjUwLCAyNjkxMCwgMjY5MjAsIDI2OTMwLCAyNjk0MCwgMjY5NTAsIDI2OTYwLCAyNjk3MCwgMjY5ODAsIDI2OTkwLCAyNzAwMA0KICAgIHJlc3VsdCAtPSBnZXRDb21wbGV4Q29uc3VtcHRpb25TdW1Sb3dzOShkYXRhUm93cywgWzI0NjUwLCAyNjkxMCwgMjY5MjAsIDI2OTMwLCAyNjk0MCwgMjY5NTAsIDI2OTYwLCAyNjk3MCwgMjY5ODAsIDI2OTkwLCAyNzAwMF0pDQoNCiAgICByZXR1cm4gZ2V0TG9uZyhyZXN1bHQpDQp9DQoNCi8qKiDQn9C+0LTRgdGH0LXRgiDQv9GA0L7RgdGC0YvRhSDRgNCw0YHRhdC+0LTQvtCyOiDRgdGD0LzQvNCwKNCz0YDQsNGE0LAgOCArINCz0YDQsNGE0LAgNSAtINCz0YDQsNGE0LAgNikuICovDQpkZWYgZ2V0Q2FsY3VsYXRlZFNpbXBsZUNvbnN1bXB0aW9uKGRlZiBkYXRhUm93c1NpbXBsZSwgZGVmIGNvZGVzKSB7DQogICAgZGVmIHJlc3VsdCA9IDANCiAgICBpZiAoZGF0YVJvd3NTaW1wbGUgPT0gbnVsbCkgew0KICAgICAgICByZXR1cm4gcmVzdWx0DQogICAgfQ0KICAgIGRhdGFSb3dzU2ltcGxlLmVhY2ggeyByb3cgLT4NCiAgICAgICAgaWYgKHJvdy5nZXRDZWxsKCdjb25zdW1wdGlvblR5cGVJZCcpLnZhbHVlIGluIChTdHJpbmcgW10pY29kZXMpIHsNCiAgICAgICAgICAgIHJlc3VsdCArPQ0KICAgICAgICAgICAgICAgICAgICAocm93LnJudTVGaWVsZDVBY2NlcHRlZCA/OiAwKSArDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKHJvdy5ybnU3RmllbGQxMFN1bSA/OiAwKSAtDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKHJvdy5ybnU3RmllbGQxMkFjY2VwdGVkID86IDApDQogICAgICAgIH0NCiAgICB9DQogICAgcmV0dXJuIHJlc3VsdA0KfQ0KDQoNCmRlZiBnZXROYWxCYXphSXNjaChkZWYgcm93MTAwLCBkZWYgcm93MTEwKSB7DQogICAgZGVmIHJlc3VsdA0KICAgIGlmIChyb3cxMDAgIT0gbnVsbCAmJiByb3cxMTAgIT0gbnVsbCAmJiAocm93MTAwIDwgMCB8fCByb3cxMDAgPT0gcm93MTEwKSkgew0KICAgICAgICByZXN1bHQgPSAwLjANCiAgICB9IGVsc2Ugew0KICAgICAgICByZXN1bHQgPSByb3cxMDAgLSByb3cxMTANCiAgICB9DQogICAgcmV0dXJuIGdldExvbmcocmVzdWx0KQ0KfQ0KDQovLyDQn9C+0LvRg9GH0LjRgtGMINC+0LrRgNGD0LPQu9C10L3QvdC+0LUsINGG0LXQu9C+0YfQuNGB0LvQtdC90L3QvtC1INC30L3QsNGH0LXQvdC40LUuDQpkZWYgZ2V0TG9uZyhkZWYgdmFsdWUpIHsNCiAgICBpZiAodmFsdWUgPT0gbnVsbCkgew0KICAgICAgICByZXR1cm4gMA0KICAgIH0NCiAgICByZXR1cm4gcm91bmRWYWx1ZSh2YWx1ZSwgMCkNCn0NCg0KLyoqDQogKiDQn9C+0YHRh9C40YLQsNGC0Ywg0LfQvdCw0YfQtdC90LjQtSDQs9GA0LDRhNGLIDE0Li4yMS4NCiAqDQogKiBAcGFyYW0gcm93INGB0YLRgNC+0LrQsA0KICogQHBhcmFtIHN1bU5hbCDQt9C90LDRh9C10L3QuNC1INC40Lcg0L3QsNGB0YLRgNC+0LXQuiDQv9C+0LTRgNCw0LfQtNC70LXQvdC40Y8gItCh0YPQvNC80LAg0L3QsNC70L7Qs9CwINC90LAg0L/RgNC40LHRi9C70YwsINCy0YvQv9C70LDRh9C10L3QvdCw0Y8g0LfQsCDQv9GA0LXQtNC10LvQsNC80Lgg0KDQvtGB0YHQuNC50YHQutC+0Lkg0KTQtdC00LXRgNCw0YbQuNC4INCyINC+0YLRh9GR0YLQvdC+0Lwg0L/QtdGA0LjQvtC00LUiDQogKiBAcGFyYW0gcmVwb3J0UGVyaW9kINC+0YLRh9C10YLQvdGL0Lkg0L/QtdGA0LjQvtC0DQogKi8NCnZvaWQgY2FsY0NvbHVtbkZyb20xNFRvMjEoZGVmIHByZXZEYXRhUm93cywgZGVmIHJvdywgZGVmIHNvdXJjZVJvdywgZGVmIHN1bU5hbCwgZGVmIHJlcG9ydFBlcmlvZCkgew0KICAgIC8vINCz0YDQsNGE0LAgMTUNCiAgICBpZiAoc3VtTmFsID09IG51bGwgfHwgc291cmNlUm93LmJhc2VUYXhPZiA9PSBudWxsIHx8ICFjaGVja0NvbHVtbjExKHNvdXJjZVJvdy5iYXNlVGF4T2YpKSB7DQogICAgICAgIHJvdy50YXhTdW1PdXRzaWRlID0gMA0KICAgIH0gZWxzZSB7DQogICAgICAgIHJvdy50YXhTdW1PdXRzaWRlID0gcm91bmRWYWx1ZShyb3VuZFZhbHVlKHN1bU5hbCAqIDAuOSwgMCkgKiBuZXcgQmlnRGVjaW1hbChzb3VyY2VSb3cuYmFzZVRheE9mKSAvIDEwMCwgMCkNCiAgICB9DQoNCiAgICAvLyDQs9GA0LDRhNCwIDE2DQogICAgaWYgKHNvdXJjZVJvdy50YXhTdW0gPT0gbnVsbCB8fCBzb3VyY2VSb3cuc3ViamVjdFRheENyZWRpdCA9PSBudWxsIHx8IHJvdy50YXhTdW1PdXRzaWRlID09IG51bGwpIHsNCiAgICAgICAgcm93LnRheFN1bVRvUGF5ID0gMA0KICAgIH0gZWxzZSB7DQogICAgICAgIHJvdy50YXhTdW1Ub1BheSA9IChzb3VyY2VSb3cudGF4U3VtID4gc291cmNlUm93LnN1YmplY3RUYXhDcmVkaXQgKyByb3cudGF4U3VtT3V0c2lkZSA/DQogICAgICAgICAgICBzb3VyY2VSb3cudGF4U3VtIC0gKHNvdXJjZVJvdy5zdWJqZWN0VGF4Q3JlZGl0ICsgcm93LnRheFN1bU91dHNpZGUpIDogMCkNCiAgICB9DQoNCiAgICAvLyDQs9GA0LDRhNCwIDE3DQogICAgaWYgKHNvdXJjZVJvdy50YXhTdW0gPT0gbnVsbCB8fCBzb3VyY2VSb3cuc3ViamVjdFRheENyZWRpdCA9PSBudWxsIHx8IHJvdy50YXhTdW1PdXRzaWRlID09IG51bGwpIHsNCiAgICAgICAgcm93LnRheFN1bVRvUmVkdWN0aW9uID0gMA0KICAgIH0gZWxzZSB7DQogICAgICAgIHJvdy50YXhTdW1Ub1JlZHVjdGlvbiA9ICgoc291cmNlUm93LnRheFN1bSA8IChzb3VyY2VSb3cuc3ViamVjdFRheENyZWRpdCArIHJvdy50YXhTdW1PdXRzaWRlKSkgPw0KICAgICAgICAgICAgICAgICgoc291cmNlUm93LnN1YmplY3RUYXhDcmVkaXQgKyByb3cudGF4U3VtT3V0c2lkZSkgLSBzb3VyY2VSb3cudGF4U3VtKSA6IDApDQogICAgfQ0KDQogICAgLy8g0JfQvdCw0YfQtdC90LjRjyDQs9GA0LDRhCDRjdGC0L7Qs9C+INC20LUg0L/QvtC00YDQsNC30LTQtdC70LXQvdC40Y8g0LIg0YTQvtGA0LzQtSDQv9GA0LXQtC4g0L/QtdGA0LjQvtC00LANCiAgICBkZWYgcHJldjE5ID0gbnVsbA0KICAgIGRlZiBwcmV2MjAgPSBudWxsDQoNCiAgICBpZiAoKHJlcG9ydFBlcmlvZC5vcmRlciA9PSAyIHx8IHJlcG9ydFBlcmlvZC5vcmRlciA9PSAzKSAmJiBzb3VyY2VSb3cucmVnaW9uQmFua0RpdmlzaW9uICE9IG51bGwgJiYgcHJldkRhdGFSb3dzICE9IG51bGwpIHsNCiAgICAgICAgZm9yIChkZWYgcHJldlJvdyA6IHByZXZEYXRhUm93cykgew0KICAgICAgICAgICAgaWYgKHNvdXJjZVJvdy5yZWdpb25CYW5rRGl2aXNpb24uZXF1YWxzKHByZXZSb3cucmVnaW9uQmFua0RpdmlzaW9uKSkgew0KICAgICAgICAgICAgICAgIC8vINCz0YDQsNGE0LAgMjAg0L/RgNC10LQuINC/0LXRgNC40L7QtNCwDQogICAgICAgICAgICAgICAgcHJldjE5ID0gcHJldlJvdy5ldmVyeU1vbnRoRm9yU2Vjb25kS3ZhcnRhbE5leHRQZXJpb2QNCiAgICAgICAgICAgICAgICAvLyDQs9GA0LDRhNCwIDIxINC/0YDQtdC0LiDQv9C10YDQuNC+0LTQsA0KICAgICAgICAgICAgICAgIHByZXYyMCA9IHByZXZSb3cuZXZlcnlNb250aEZvclRoaXJkS3ZhcnRhbE5leHRQZXJpb2QNCiAgICAgICAgICAgICAgICBicmVhaw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KICAgIC8vINCV0YHQu9C4INC90LUg0L3QsNGI0LvQvtGB0YwsINGB0YfQuNGC0LDQtdC8IDANCiAgICBwcmV2MTkgPSBwcmV2MTkgPT0gbnVsbCA/IDAgOiBwcmV2MTkNCiAgICBwcmV2MjAgPSBwcmV2MjAgPT0gbnVsbCA/IDAgOiBwcmV2MjANCg0KICAgIC8vINCz0YDQsNGE0LAgMjANCiAgICByb3cuZXZlcnlNb250aEZvclNlY29uZEt2YXJ0YWxOZXh0UGVyaW9kID0gKHJlcG9ydFBlcmlvZC5vcmRlciA9PSAxID8gc291cmNlUm93LnRheFN1bSA6IHByZXYxOSkNCg0KICAgIC8vINCz0YDQsNGE0LAgMjENCiAgICBpZiAocmVwb3J0UGVyaW9kLm9yZGVyICE9IDIgfHwgc291cmNlUm93LnRheFN1bSA9PSBudWxsIHx8IHJvdy5ldmVyeU1vbnRoRm9yU2Vjb25kS3ZhcnRhbE5leHRQZXJpb2QgPT0gbnVsbCB8fCBzb3VyY2VSb3cuZXZlcnlNb250aEZvckt2YXJ0YWxOZXh0UGVyaW9kID09IG51bGwpIHsNCiAgICAgICAgcm93LmV2ZXJ5TW9udGhGb3JUaGlyZEt2YXJ0YWxOZXh0UGVyaW9kID0gcHJldjIwDQogICAgfSBlbHNlIHsNCiAgICAgICAgcm93LmV2ZXJ5TW9udGhGb3JUaGlyZEt2YXJ0YWxOZXh0UGVyaW9kID0NCiAgICAgICAgICAgICAgICAoKHJlcG9ydFBlcmlvZC5vcmRlciA9PSAyKSA/IChzb3VyY2VSb3cudGF4U3VtIC0gcm93LmV2ZXJ5TW9udGhGb3JTZWNvbmRLdmFydGFsTmV4dFBlcmlvZCAtIHNvdXJjZVJvdy5ldmVyeU1vbnRoRm9yS3ZhcnRhbE5leHRQZXJpb2QpIDogcHJldjIwKQ0KICAgIH0NCg0KICAgIC8vINCz0YDQsNGE0LAgMjINCiAgICBpZiAocmVwb3J0UGVyaW9kLm9yZGVyICE9IDMgfHwgc291cmNlUm93LnRheFN1bSA9PSBudWxsIHx8IHJvdy5ldmVyeU1vbnRoRm9yVGhpcmRLdmFydGFsTmV4dFBlcmlvZCA9PSBudWxsKSB7DQogICAgICAgIHJvdy5ldmVyeU1vbnRoRm9yRm91cnRoS3ZhcnRhbE5leHRQZXJpb2QgPSAwDQogICAgfSBlbHNlIHsNCiAgICAgICAgcm93LmV2ZXJ5TW9udGhGb3JGb3VydGhLdmFydGFsTmV4dFBlcmlvZCA9DQogICAgICAgICAgICAgICAgKChyZXBvcnRQZXJpb2Qub3JkZXIgPT0gMykgPyAoc291cmNlUm93LnRheFN1bSAtIHJvdy5ldmVyeU1vbnRoRm9yVGhpcmRLdmFydGFsTmV4dFBlcmlvZCkgOiAwKQ0KICAgIH0NCn0NCg0KLyoqDQogKiDQndCw0LnRgtC4INGB0YLRgNC+0LrRgyDQptCQDQogKi8NCmRlZiBmaW5kQ0EoZGVmIGRhdGFSb3dzKSB7DQogICAgZGVmIHJlc3VsdFJvdyA9IG51bGwNCiAgICBpZiAoZGF0YVJvd3MgIT0gbnVsbCkgew0KICAgICAgICBmb3IgKGRlZiByb3cgOiBkYXRhUm93cykgew0KICAgICAgICAgICAgaWYgKHJvdy5yZWdpb25CYW5rID09IGNlbnRyYWxJZCkgew0KICAgICAgICAgICAgICAgIHJlc3VsdFJvdyA9IHJvdw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KICAgIHJldHVybiByZXN1bHRSb3cNCn0NCg0KLyoqDQogKiDQntC60YDRg9Cz0LvRj9C10YIg0YfQuNGB0LvQviDQtNC+INGC0YDQtdCx0YPQtdC80L7QuSDRgtC+0YfQvdC+0YHRgtC4Lg0KICoNCiAqIEBwYXJhbSB2YWx1ZSDQvtC60YDRg9Cz0LvRj9C10LzQvtC1INGH0LjRgdC70L4NCiAqIEBwYXJhbSBwcmVjaXNpb24g0YLQvtGH0L3QvtGB0YLRjCDQvtC60YDRg9Cz0LvQtdC90LjRjywg0LfQvdCw0LrQuCDQv9C+0YHQu9C1INC30LDQv9GP0YLQvtC5DQogKiBAcmV0dXJuINC+0LrRgNGD0LPQu9C10L3QvdC+0LUg0YfQuNGB0LvQvg0KICovDQpkZWYgcm91bmRWYWx1ZShCaWdEZWNpbWFsIHZhbHVlLCBkZWYgcHJlY2lzaW9uKSB7DQogICAgdmFsdWUuc2V0U2NhbGUocHJlY2lzaW9uLCBCaWdEZWNpbWFsLlJPVU5EX0hBTEZfVVApDQp9DQoNCi8qKiDQn9C+0LvRg9GH0LjRgtGMINGB0YLRgNC+0LrQuCDQt9CwINC/0YDQtdC00YvQtNGD0YnQuNC5INC+0YLRh9C10YLQvdGL0Lkg0L/QtdGA0LjQvtC0LiAqLw0KZGVmIGdldFByZXZEYXRhUm93cygpIHsNCiAgICBkZWYgcHJldkZvcm1EYXRhID0gZm9ybURhdGFTZXJ2aWNlLmdldEZvcm1EYXRhUHJldihmb3JtRGF0YSkNCiAgICByZXR1cm4gKHByZXZGb3JtRGF0YSAhPSBudWxsID8gZm9ybURhdGFTZXJ2aWNlLmdldERhdGFSb3dIZWxwZXIocHJldkZvcm1EYXRhKT8uYWxsU2F2ZWQgOiBudWxsKQ0KfQ0KDQovLyDQodC+0YDRgtC40YDQvtCy0LrQsCDQs9GA0YPQv9C/INC4INGB0YLRgNC+0LoNCnZvaWQgc29ydEZvcm1EYXRhUm93cyhkZWYgc2F2ZUluREIgPSB0cnVlKSB7DQogICAgZGVmIGRhdGFSb3dIZWxwZXIgPSBmb3JtRGF0YVNlcnZpY2UuZ2V0RGF0YVJvd0hlbHBlcihmb3JtRGF0YSkNCiAgICBkZWYgZGF0YVJvd3MgPSBkYXRhUm93SGVscGVyLmFsbENhY2hlZA0KICAgIC8vINC10YHRgtGMINC40YLQ'
        longString += 'vtCz0L7QstGL0LUg0YHRgtGA0L7QutC4DQogICAgaWYgKGRhdGFSb3dzLnNpemUoKSA+IDIpIHsNCiAgICAgICAgc29ydFJvd3MocmVmQm9va1NlcnZpY2UsIGxvZ2dlciwgZGF0YVJvd3MsIFtkYXRhUm93cy5maW5kIHsgaXQuZ2V0QWxpYXMoKSA9PSAnY2EnIH1dLCBkYXRhUm93cy5maW5kIHsgaXQuZ2V0QWxpYXMoKSA9PSAndG90YWwnIH0sIHRydWUpDQogICAgICAgIGlmIChzYXZlSW5EQikgew0KICAgICAgICAgICAgZGF0YVJvd0hlbHBlci5zYXZlU29ydCgpDQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICB1cGRhdGVJbmRleGVzKGRhdGFSb3dzKTsNCiAgICAgICAgfQ0KICAgIH0NCn0NCg0KLy8g0J/QvtC70YPRh9C40YLRjCDRgdGC0YDQvtC60Lgg0YTQvtGA0LzRiw0KZGVmIGdldERhdGFSb3dzKGRlZiBmb3JtSWQsIGRlZiBraW5kKSB7DQogICAgLy9kZWYgZm9ybUlkID0gNDIxDQogICAgLy9kZWYgZm9ybURhdGFLaW5kID0gRm9ybURhdGFLaW5kLlNVTU1BUlkNCiAgICBkZWYgZGVwYXJ0bWVudElkID0gZm9ybURhdGEuZGVwYXJ0bWVudElkDQogICAgZGVmIHJlcG9ydFBlcmlvZElkID0gZm9ybURhdGEucmVwb3J0UGVyaW9kSWQNCiAgICBkZWYgcGVyaW9kT3JkZXIgPSBmb3JtRGF0YS5wZXJpb2RPcmRlcg0KICAgIGRlZiBzb3VyY2VGb3JtRGF0YSA9IGZvcm1EYXRhU2VydmljZS5nZXRMYXN0KGZvcm1JZCwga2luZCwgZGVwYXJ0bWVudElkLCByZXBvcnRQZXJpb2RJZCwgcGVyaW9kT3JkZXIsIGZvcm1EYXRhLmNvbXBhcmF0aXZlUGVyaW9kSWQsIGZvcm1EYXRhLmFjY3J1aW5nKQ0KICAgIGlmIChzb3VyY2VGb3JtRGF0YSAhPSBudWxsICYmIHNvdXJjZUZvcm1EYXRhLmlkICE9IG51bGwpDQogICAgICAgIHJldHVybiBmb3JtRGF0YVNlcnZpY2UuZ2V0RGF0YVJvd0hlbHBlcihzb3VyY2VGb3JtRGF0YSk/LmFsbFNhdmVkDQogICAgcmV0dXJuIG51bGwNCn0NCg0KLyoqDQogKiDQn9C+0LvRg9GH0LjRgtGMINC30L3QsNGH0LXQvdC40LUg0Y/Rh9C10LnQutC4INGE0LjQutGB0LjRgNC+0LLQsNC90L3QvtC5INGB0YLRgNC+0LrQuCDQuNC3INC90LDQu9C+0LPQvtCy0L7QuSDRhNC+0YDQvNGLLg0KICoNCiAqIEBwYXJhbSBkYXRhUm93cyDRgdGC0YDQvtC60Lgg0L3RhA0KICogQHBhcmFtIGNvbHVtbk5hbWUg0L3QsNC30LLQsNC90LjQtSDRgdGC0L7Qu9Cx0YbQsA0KICogQHBhcmFtIGFsaWFzINCw0LvQuNCw0YEg0YHRgtGA0L7QutC4DQogKiBAcmV0dXJuINC30L3QsNGH0LXQvdC40LUg0YHRgtC+0LvQsdGG0LANCiAqDQogKi8NCmRlZiBnZXRBbGlhc0Zyb21Gb3JtKGRlZiBkYXRhUm93cywgZGVmIGNvbHVtbk5hbWUsIGRlZiBhbGlhcykgew0KICAgIGlmIChkYXRhUm93cyAhPSBudWxsICYmICFkYXRhUm93cy5pc0VtcHR5KCkpIHsNCiAgICAgICAgZGVmIGFsaWFzUm93ID0gZ2V0RGF0YVJvdyhkYXRhUm93cywgYWxpYXMpDQogICAgICAgIHJldHVybiBhbGlhc1Jvdy5nZXRDZWxsKGNvbHVtbk5hbWUpLnZhbHVlDQogICAgfQ0KICAgIHJldHVybiAwDQp9DQoNCi8qKiDQn9C+0LvRg9GH0LXQvdC40LUg0L/RgNC+0LLQsNC50LTQtdGA0LAg0YEg0LjRgdC/0L7Qu9GM0LfQvtCy0LDQvdC40LXQvCDQutC10YjQuNGA0L7QstCw0L3QuNGPLiAqLw0KZGVmIGdldFByb3ZpZGVyKGRlZiBsb25nIHByb3ZpZGVySWQpIHsNCiAgICByZXR1cm4gZm9ybURhdGFTZXJ2aWNlLmdldFJlZkJvb2tQcm92aWRlcihyZWZCb29rRmFjdG9yeSwgcHJvdmlkZXJJZCwgcHJvdmlkZXJDYWNoZSkNCn0NCg0KLy8g0J/QvtC70YPRh9C10L3QuNC1INC/0LDRgNCw0LzQtdGC0YDQvtCyINC/0L7QtNGA0LDQt9C00LXQu9C10L3QuNGPLCDRhNC+0YDQvNCwINC90LDRgdGC0YDQvtC10Log0LrQvtGC0L7RgNC+0LPQviDQsdGD0LTQtdGCINC40YHQv9C+0LvRjNC30L7QstCw0YLRjNGB0Y8NCi8vINC00LvRjyDQv9C+0LvRg9GH0LXQvdC40Y8g0LTQsNC90L3Ri9GFICjRgdC+0LPQu9Cw0YHQvdC+INCw0LvQs9C+0YDQuNGC0LzRgyA2LjIuNS44LjcuMSkNCmRlZiBnZXREZXBQYXJhbShkZWYgZGVwYXJ0bWVudFBhcmFtKSB7DQogICAgZGVmIGRlcGFydG1lbnRJZCA9IGRlcGFydG1lbnRQYXJhbS5nZXQoUmVmQm9vay5SRUNPUkRfSURfQUxJQVMpLm51bWJlclZhbHVlIGFzIGludA0KICAgIGRlZiBkZXBhcnRtZW50VHlwZSA9IGRlcGFydG1lbnRTZXJ2aWNlLmdldChkZXBhcnRtZW50SWQpLmdldFR5cGUoKQ0KICAgIGRlZiBkZXBQYXJhbQ0KICAgIGlmIChkZXBhcnRtZW50VHlwZS5lcXVhbHMoZGVwYXJ0bWVudFR5cGUuVEVSUl9CQU5LKSkgew0KICAgICAgICBkZXBQYXJhbSA9IGRlcGFydG1lbnRQYXJhbQ0KICAgIH0gZWxzZSB7DQogICAgICAgIGRlZiB0YkNvZGUgPSAoSW50ZWdlcikgZGVwYXJ0bWVudFBhcmFtLmdldCgnUEFSRU5UX0lEJykuZ2V0UmVmZXJlbmNlVmFsdWUoKQ0KICAgICAgICBpZiAodGJDb2RlID09IG51bGwpIHsNCiAgICAgICAgICAgIHJldHVybiBudWxsDQogICAgICAgIH0NCiAgICAgICAgZGVmIHRheFBsYW5pbmdUeXBlQ29kZSA9IGRlcGFydG1lbnRTZXJ2aWNlLmdldCh0YkNvZGUpLmdldFR5cGUoKS5NQU5BR0VNRU5ULmdldENvZGUoKQ0KICAgICAgICBkZXBQYXJhbSA9IGdldFByb3ZpZGVyKDMwKS5nZXRSZWNvcmRzKGdldFJlcG9ydFBlcmlvZEVuZERhdGUoKSwgbnVsbCwgIlBBUkVOVF9JRCA9ICR7ZGVwYXJ0bWVudFBhcmFtLmdldCgnUEFSRU5UX0lEJykuZ2V0UmVmZXJlbmNlVmFsdWUoKX0gYW5kIFRZUEUgPSAkdGF4UGxhbmluZ1R5cGVDb2RlIiwgbnVsbCkuZ2V0KDApDQogICAgfQ0KICAgIHJldHVybiBkZXBQYXJhbQ0KfQ0KDQovLyDQn9C+0LvRg9GH0LXQvdC40LUg0L/QsNGA0LDQvNC10YLRgNC+0LIgKNGB0L/RgNCw0LLQvtGH0L3QuNC6IDMzMCkNCmRlZiBnZXRJbmNvbWVQYXJhbVRhYmxlKGRlZiBkZXBQYXJhbSkgew0KICAgIGRlZiBkZXBJZCA9IChkZXBQYXJhbT8uZ2V0KFJlZkJvb2suUkVDT1JEX0lEX0FMSUFTKT8ubnVtYmVyVmFsdWUgPzogLTEpIGFzIGxvbmcNCiAgICBkZWYgaW5jb21lUGFyYW0NCiAgICBpZiAoZGVwSWQgIT0gLTEpIHsNCiAgICAgICAgaW5jb21lUGFyYW0gPSBnZXRQcm92aWRlcigzMykuZ2V0UmVjb3JkcyhnZXRSZXBvcnRQZXJpb2RFbmREYXRlKCkgLSAxLCBudWxsLCAiREVQQVJUTUVOVF9JRCA9ICRkZXBJZCIsIG51bGwpDQogICAgfQ0KICAgIGlmIChpbmNvbWVQYXJhbSAhPSBudWxsICYmICFpbmNvbWVQYXJhbS5pc0VtcHR5KCkpIHsNCiAgICAgICAgZGVmIGxpbmsgPSBpbmNvbWVQYXJhbS5nZXQoMCkucmVjb3JkX2lkLnZhbHVlDQogICAgICAgIGRlZiBpbmNvbWVQYXJhbVRhYmxlID0gZ2V0UHJvdmlkZXIoMzMwKS5nZXRSZWNvcmRzKGdldFJlcG9ydFBlcmlvZEVuZERhdGUoKSAtIDEsIG51bGwsICJMSU5LID0gJGxpbmsiLCBudWxsKQ0KICAgICAgICByZXR1cm4gaW5jb21lUGFyYW1UYWJsZQ0KICAgIH0NCiAgICByZXR1cm4gbnVsbA0KfQ0KDQpARmllbGQNCmRlZiByZXBvcnRQZXJpb2QgPSBudWxsDQoNCmRlZiBnZXRSZXBvcnRQZXJpb2QoKSB7DQogICAgaWYgKHJlcG9ydFBlcmlvZCA9PSBudWxsKSB7DQogICAgICAgIHJlcG9ydFBlcmlvZCA9IHJlcG9ydFBlcmlvZFNlcnZpY2UuZ2V0KGZvcm1EYXRhLnJlcG9ydFBlcmlvZElkKQ0KICAgIH0NCiAgICByZXR1cm4gcmVwb3J0UGVyaW9kDQp9'

        addLongText(form_template_id, longString, 'SCRIPT')
        logger.info("К версии макета добавлен скрипт")
    }

} catch (Exception ex) {
    logger.error("Error: ${ex.getLocalizedMessage()}. Все изменения откатаны")
}

def void addTypeTemplate(FormType formType, FormTemplate formTemplate, boolean createType, boolean createTemplate) {
    def form_type_id = formType.id ?: ""
    def form_type_name = formType.name ?: ""
    def form_type_tax_type = formType.taxType.code ?: ""
    def form_type_is_ifrs = formType.isIfrs ? 1 : 0
    def form_type_ifrs_name = formType.ifrsName ?: ""
    def form_type_ifrs_code = formType.code ?: ""

    def form_template_id = formTemplate.id ?: ""
    def form_template_is_fixed_rows = formTemplate.isFixedRows() ? 1 : 0
    def form_template_name = formTemplate.name ?: ""
    def form_template_fullname = formTemplate.fullName ?: ""
    def form_template_version = formTemplate.version.format("dd.MM.yy")
    def form_template_monthly = formTemplate.isMonthly() ? 1 : 0
    def form_template_comparative = formTemplate.isComparative() ? 1 : 0
    def form_template_header = formTemplate.header ?: ""
    def form_template_accruing = formTemplate.isAccruing() ? 1 : 0
    def form_template_updating = formTemplate.isUpdating() ? 1 : 0

    String formTypeSql = "INSERT INTO FORM_TYPE (ID, NAME, TAX_TYPE, STATUS, IS_IFRS, IFRS_NAME, CODE) VALUES " +
            "('$form_type_id', '$form_type_name', '$form_type_tax_type', '0', '$form_type_is_ifrs', '$form_type_ifrs_name', '$form_type_ifrs_code')"
    if (createType) {
        namedParameterJdbcTemplate.update(formTypeSql, [:])
        logger.info("Создан тип НФ с id = $form_type_id без версии макета, колонок, стилей, заголовка, фиксированных строк и скрипта")
    }

    String formTemplateSql = "INSERT INTO FORM_TEMPLATE (ID, TYPE_ID, FIXED_ROWS, NAME, FULLNAME, VERSION, STATUS, MONTHLY, HEADER, COMPARATIVE, ACCRUING, UPDATING) VALUES " +
            "($form_template_id, '$form_type_id', '$form_template_is_fixed_rows', '$form_template_name', '$form_template_fullname', TO_DATE('$form_template_version', 'DD.MM.RR'), '1', '$form_template_monthly', '$form_template_header', '$form_template_comparative', '$form_template_accruing', '$form_template_updating')"
    if (createTemplate) {
        namedParameterJdbcTemplate.update(formTemplateSql, [:])
        logger.info("Создан тип НФ с id = $form_template_id для версии макета с id = $form_type_id, но без колонок, стилей, заголовка, фиксированных строк и скрипта")
    }
}

def void addLongText (def form_template_id, String longString, String alias) {
    final int MAX_LENGTH = 2000
    namedParameterJdbcTemplate.update("UPDATE FORM_TEMPLATE SET $alias = null where id = $form_template_id", [:])
    int start = 0
    longString = new String(longString.decodeBase64(), "UTF-8")
    while (start < longString.length()) {
        int end = (start + MAX_LENGTH) < longString.length() ? (start + MAX_LENGTH) : longString.length()
        String text = longString.substring(start, end)
       namedParameterJdbcTemplate.update('UPDATE FORM_TEMPLATE SET ' + alias + ' = ' + alias + ' || :text where id = ' +form_template_id, ['text' : text])
        start += MAX_LENGTH
    }
}