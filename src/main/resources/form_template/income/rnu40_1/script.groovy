/**
 * РНУ-40.1
 * @author auldanov
 * TODO
 *
 * @version 59
 *
 * number - Номер территориального банка
 * name - Наименование территориального банка / подразделения Центрального аппарата
 * issuer - Эмитент
 * registrationNumber - Номер государственной регистрации
 * buyDate - Дата приобретения
 * cost - Номинальная стоимость (ед. валюты)
 * bondsCount - Количество облигаций (шт.)
 * upCost - Средневзвешенная цена одной бумаги на дату размещения (ед.вал.)
 * circulationTerm - Срок обращения условиям выпуска (дни)
 * percent - Процентный доход (руб.коп.)
 * currencyCode - Код валюты номинала
 */
/**
 * Выполнение действий по событиям
 *
 */
switch (formDataEvent){
// Инициирование Пользователем проверки данных формы в статусе «Создана», «Подготовлена», «Утверждена», «Принята»
    case FormDataEvent.CHECK:
        //1. Логические проверки значений налоговой формы
        logicalCheck()
        //2. Проверки соответствия НСИ
        NCICheck()
        break
// Инициирование Пользователем создания формы
    case FormDataEvent.CREATE:
        //1.	Проверка наличия и статуса формы, консолидирующей данные текущей налоговой формы, при создании формы.
        //2.	Логические проверки значений налоговой.
        logicalCheck()
        //3.	Проверки соответствия НСИ.
        break
// Инициирование Пользователем перехода «Подготовить»
    case FormDataEvent.MOVE_CREATED_TO_PREPARED:
        //1.	Проверка наличия и статуса формы, консолидирующей данные текущей налоговой формы, при переходе в статус «Подготовлена».
        //2.	Логические проверки значений налоговой формы.
        logicalCheck()
        //3.	Проверки соответствия НСИ.
        break
// Инициирование Пользователем  выполнение перехода «Утвердить»
    case FormDataEvent.MOVE_CREATED_TO_APPROVED:
        //1.	Проверка наличия и статуса формы, консолидирующей данные текущей налоговой формы, при переходе в статус «Утверждена».
        //2.	Логические проверки значений налоговой формы.
        //3.	Проверки соответствия   НСИ.
        break
// Инициирование Пользователем  выполнение перехода «Принять»
    case FormDataEvent.MOVE_APPROVED_TO_ACCEPTED:
        //1.	Проверка наличия и статуса формы, консолидирующей данные текущей налоговой формы, при переходе в статус «Принята».
        //2.	Логические проверки значений налоговой формы.
        //3.	Проверки соответствия НСИ.
        break
// Инициирование Пользователем выполнения перехода «Отменить принятие»
    case FormDataEvent.MOVE_ACCEPTED_TO_APPROVED:
        //1.	Проверка наличия и статуса формы, консолидирующей данные текущей налоговой формы, при переходе «Отменить принятие».
        //2.	Логические проверки значений налоговой формы.
        //3.	Проверки соответствия НСИ.
        break

// Событие добавить строку
    case FormDataEvent.ADD_ROW:
        addNewRow()
        break

// событие удалить строку
    case FormDataEvent.DELETE_ROW:
        break

    case FormDataEvent.CALCULATE:
        fillForm()
        break
}

/**
 * Функция добавления новой строки
 */
def addNewRow(){
    // добавим строку
    def newRow = formData.appendDataRow((DataRow) currentDataRow, "R"+Random.newInstance().nextInt())
    // разрешим редактировать поля
    ['number', 'name', 'issuer', 'registrationNumber', 'buyDate', 'cost', 'bondsCount', 'upCost', 'circulationTerm', 'percent', 'currencyCode'].each{ alias->
        newRow.getCell(alias).setEditable(true)
    }
}

/**
 * Расчеты
 */
def fillForm(){
    /**
     * «графа N» = сумма значений всех строк графы N раздела
     * «1. Субфедеральные и муниципальные облигации, за исключением муниципальных облигаций, выпущенных до 1 января 2007 года на срок не менее 3 лет (15%)»
     */


}


def logicalCheck(){

}