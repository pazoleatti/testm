<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                                       http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

    <!--https://jira.aplana.com/browse/SBRFNDFL-5625 Реализовать изменения в массовой выгрузке файлов в статусах, отличных от Принята-->
    <changeSet id="3.3-dnovikov-1" author="dnovikov">
        <insert tableName="async_task_type">
            <column name="id" value="41"/>
            <column name="name" value="Выгрузка отчетности"/>
            <column name="handler_bean" value="ExportReportsAsyncTask"/>
        </insert>
    </changeSet>

    <changeSet id="3.3-dnovikov-2" author="dnovikov" runAlways="true">
        <update tableName="DECL_TEMPLATE_EVENT_SCRIPT">
            <column name="script" valueClobFile="templates-3.3/ndfl/consolidated_rnu_ndfl/v2016/consolidated_rnu_ndfl_calculate.groovy"/>
            <where>DECLARATION_TEMPLATE_ID = 101 and EVENT_ID = 3</where>
        </update>
    </changeSet>

    <changeSet id="3.3-snazin-1" author="snazin" runAlways="true">
        <update tableName="DECLARATION_TEMPLATE">
            <column name="CREATE_SCRIPT" valueClobFile="templates-3.3/ndfl/primary_rnu_ndfl/v2016/primary_rnu_ndfl.groovy"/>
            <where>declaration_type_id = 100</where>
        </update>
        <update tableName="BLOB_DATA">
            <column name="data"
                    valueBlobFile="templates-3.3/refbook/declaration_type.groovy"/>
            <where>id in (select script_id from ref_book r where r.id = 207)</where>
        </update>
    </changeSet>

    <!--https://jira.aplana.com/browse/SBRFNDFL-5901 Написать скрипт по обновлению даты изменения строк всех форм-->
    <changeSet id="3.3-amandzyak-1" author="amandzyak">
        <sql>
			merge into ndfl_person np
			using
			(
			  select np2.id as np_id, lb.log_date
			  from ndfl_person np2
			  join declaration_data dd on dd.id = np2.declaration_data_id
			  join log_business lb on lb.declaration_data_id = dd.id
			  where
			  np2.modified_date is null
			  and dd.declaration_template_id = 100
			  and lb.event_id = 1
			) upd_rows
			on (np.id = upd_rows.np_id)
			when matched then update set np.modified_date = upd_rows.log_date
        </sql>
        <sql>
			merge into ndfl_person np
			using
			(
			  select np2.id as np_id, max(lb.log_date) log_date
			  from ndfl_person np2
			  join declaration_data dd on dd.id = np2.declaration_data_id
			  join log_business lb on lb.declaration_data_id = dd.id
			  where
			  np2.modified_date is null
			  and dd.declaration_template_id = 101
			  and lb.event_id = 6
			  group by np2.id
			) upd_rows
			on (np.id = upd_rows.np_id)
			when matched then update set np.modified_date = upd_rows.log_date
        </sql>
        <sql>
			merge into ndfl_person_income npi
			using
			(
			  select lb.log_date, npi2.id as npi_id
			  from ndfl_person_income npi2
			  join ndfl_person np on np.id = npi2.ndfl_person_id
			  join declaration_data dd on dd.id = np.declaration_data_id
			  join log_business lb on lb.declaration_data_id = dd.id
			  where
			  npi2.modified_date is null
			  and dd.declaration_template_id = 100
			  and lb.event_id = 1
			) upd_rows
			on (npi.id = upd_rows.npi_id)
			when matched then update set npi.modified_date = upd_rows.log_date
        </sql>
        <sql>
			merge into ndfl_person_income npi
			using
			(
			  select npi2.id as npi_id, npi3.modified_date
			  from ndfl_person_income npi2
			  join ndfl_person_income npi3 on npi3.id = npi2.source_id
			  where
			  npi2.modified_date is null
			  and npi3.modified_date is not null
			) upd_rows
			on (npi.id = upd_rows.npi_id)
			when matched then update set npi.modified_date = upd_rows.modified_date
        </sql>
        <sql>
			merge into ndfl_person_deduction npd
			using
			(
			  select lb.log_date, npd2.id as npd_id
			  from
			  ndfl_person_deduction npd2
			  join ndfl_person np on np.id = npd2.ndfl_person_id
			  join declaration_data dd on dd.id = np.declaration_data_id
			  join log_business lb on lb.declaration_data_id = dd.id
			  where dd.declaration_template_id = 100
			  and lb.event_id = 1
			  and npd2.modified_date is null
			) upd_rows
			on (npd.id = upd_rows.npd_id)
			when matched then update set npd.modified_date = upd_rows.log_date
        </sql>
        <sql>
			merge into ndfl_person_deduction npd
			using
			(
			  select npd2.id as npd_id, npd3.modified_date
			  from ndfl_person_deduction npd2
			  join ndfl_person_deduction npd3 on npd3.id = npd2.source_id
			  where
			  npd2.modified_date is null
			  and npd3.modified_date is not null
			) upd_rows
			on (npd.id = upd_rows.npd_id)
			when matched then update set npd.modified_date = upd_rows.modified_date
        </sql>
        <sql>
			merge into ndfl_person_prepayment npp
			using
			(
			  select lb.log_date, npp2.id as npp_id
			  from
			  ndfl_person_prepayment npp2
			  join ndfl_person np on np.id = npp2.ndfl_person_id
			  join declaration_data dd on dd.id = np.declaration_data_id
			  join log_business lb on lb.declaration_data_id = dd.id
			  where dd.declaration_template_id = 100
			  and lb.event_id = 1
			  and npp2.modified_date is null
			) upd_rows
			on (npp.id = upd_rows.npp_id)
			when matched then update set npp.modified_date = upd_rows.log_date
        </sql>
        <sql>
			merge into ndfl_person_prepayment npp
			using
			(
			  select npp2.id as npp_id, npp3.modified_date
			  from ndfl_person_prepayment npp2
			  join ndfl_person_prepayment npp3 on npp3.id = npp2.source_id
			  where
			  npp2.modified_date is null
			  and npp3.modified_date is not null
			) upd_rows
			on (npp.id = upd_rows.npp_id)
			when matched then update set npp.modified_date = upd_rows.modified_date
        </sql>
    </changeSet>

    <!--https://jira.aplana.com/browse/SBRFNDFL-5461 новый спецотчет-->
    <changeSet id="3.3-dnovikov-3" author="dnovikov">
        <sql>
            insert into DECLARATION_SUBREPORT(id, declaration_template_id, name, ord, alias)
            values(SEQ_DECLARATION_SUBREPORT.nextval, 100, 'Отчет в разрезе ставок', 4, 'rnu_karmannikova_rate_report');
            insert into DECLARATION_SUBREPORT(id, declaration_template_id, name, ord, alias)
            values(SEQ_DECLARATION_SUBREPORT.nextval, 101, 'Отчет в разрезе ставок', 4, 'rnu_karmannikova_rate_report');
        </sql>
    </changeSet>

    <changeSet id="3.3-dnovikov-4" author="dnovikov" runAlways="true">
        <update tableName="DECLARATION_TEMPLATE">
            <column name="CREATE_SCRIPT" valueClobFile="templates-3.3/ndfl/consolidated_rnu_ndfl/v2016/consolidated_rnu_ndfl.groovy"/>
            <where>declaration_type_id = 101</where>
        </update>
    </changeSet>

	<!--https://jira.aplana.com/browse/SBRFNDFL-5461 новый спецотчет-->
	<changeSet id="3.3-dnovikov-5" author="dnovikov">
		<sql>
			insert into DECLARATION_SUBREPORT(id, declaration_template_id, name, ord, alias)
			values(SEQ_DECLARATION_SUBREPORT.nextval, 100, 'Отчет в разрезе платёжных поручений', 4, 'rnu_karmannikova_payment_report');
			insert into DECLARATION_SUBREPORT(id, declaration_template_id, name, ord, alias)
			values(SEQ_DECLARATION_SUBREPORT.nextval, 101, 'Отчет в разрезе платёжных поручений', 4, 'rnu_karmannikova_payment_report');
		</sql>
	</changeSet>

	<changeSet id="3.3-snazin-2" author="snazin" runAlways="true">
		<update tableName="DECL_TEMPLATE_EVENT_SCRIPT">
			<column name="script" valueClobFile="templates-3.3/ndfl/primary_rnu_ndfl/v2016/primary_rnu_ndfl_move_accepted_to_created.groovy"/>
			<where>DECLARATION_TEMPLATE_ID = 100 and EVENT_ID = 106</where>
		</update>
	</changeSet>

	<changeSet id="3.3-snazin-3" author="snazin">
		<insert tableName="DECL_TEMPLATE_EVENT_SCRIPT">
            <column name="id" value="19"/>
			<column name="script" valueClobFile="templates-3.3/ndfl/consolidated_rnu_ndfl/v2016/consolidated_rnu_ndfl_move_accepted_to_created.groovy"/>
			<column name="declaration_template_id" value="101"/>
			<column name="event_id" value="106"/>
		</insert>
	</changeSet>

	<changeSet id="3.3-snazin-4" author="snazin" runAlways="true">
		<update tableName="DECL_TEMPLATE_EVENT_SCRIPT">
			<column name="script" valueClobFile="templates-3.3/ndfl/consolidated_rnu_ndfl/v2016/consolidated_rnu_ndfl_move_accepted_to_created.groovy"/>
			<where>DECLARATION_TEMPLATE_ID = 101 and EVENT_ID = 106</where>
		</update>
	</changeSet>
</databaseChangeLog>