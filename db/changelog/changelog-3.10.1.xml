<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                                       http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

    <!--https://jira.aplana.com/browse/SBRFNDFL-8553 Заполнение поля Вид отчетности у существующих периодов, 
	https://jira.aplana.com/browse/SBRFNDFL-8702 Изменить ограничение в БД REPORT_PERIOD_UNIQ_TAX_DICT-->
    <changeSet id="3.10.1-skononova-1" author="skononova">
        <sql>
	ALTER TABLE report_period DROP  CONSTRAINT report_period_uniq_tax_dict DROP INDEX;
 	
	UPDATE report_period SET form_type_id=5 where form_type_id is null;		
        --создание отчетных периодов для 2-НДФЛ (1) и (2)
	INSERT INTO report_period (id, name, tax_period_id, dict_tax_period_id, start_date, end_date, calendar_start_date, form_type_id)
	    SELECT
        	seq_report_period.NEXTVAL,
	        name,
	        tax_period_id,
                dict_tax_period_id,
	        start_date,
	        end_date,
                calendar_start_date,
	        form_type
	    FROM
                (
	            SELECT DISTINCT
	                rp.name,
                        rp.tax_period_id,
	                rp.dict_tax_period_id,
	                rp.start_date,
                        rp.end_date,
	                rp.calendar_start_date,
	                decode(declaration_template_id, 102, 3, 104, 4, 105, 3,
                               NULL) AS form_type
	            FROM
	                report_period              rp
                        JOIN department_report_period   drp ON drp.report_period_id = rp.id
	                JOIN declaration_data           dd ON dd.department_report_period_id = drp.id
	                LEFT JOIN report_period              rp2 ON rp2.tax_period_id = rp.tax_period_id
                                                       AND rp2.dict_tax_period_id = rp.dict_tax_period_id
	                                               AND rp2.form_type_id = decode(declaration_template_id, 102, 3, 104, 4, 105, 3, 
	                                                                             NULL)
                    WHERE
	                (dd.declaration_template_id IN (
	                    102,
                            104
	                ) or (dd.declaration_template_id=105 AND NOT EXISTS 
				(SELECT 1 FROM declaration_data_consolidation ddc WHERE 
				ddc.target_declaration_data_id = dd.id
				AND ddc.source_declaration_data_id is not null)) ) 
	                AND rp2.id IS NULL
                );
	    --создание отчетных периодов подразделений для 2-НДФЛ (1) и (2), а также 2-НФДЛ (ФЛ), у которых отсутствуют источники
        INSERT INTO department_report_period (
            id,
            department_id,
            report_period_id,
            is_active,
            correction_date
        )
            SELECT
                seq_department_report_period.NEXTVAL,
                department_id,
                report_period_id,
                is_active,
                correction_date
            FROM
                (
                    SELECT DISTINCT
                        drp.department_id,
                        new_rp.id AS report_period_id,
                        drp.is_active,
                        drp.correction_date
                    FROM
                        department_report_period   drp
                        JOIN declaration_data           dd ON dd.department_report_period_id = drp.id
                        JOIN report_period              old_rp ON old_rp.id = drp.report_period_id
                        JOIN report_period              new_rp ON new_rp.tax_period_id = old_rp.tax_period_id
                                                     AND new_rp.dict_tax_period_id = old_rp.dict_tax_period_id
                                                     AND new_rp.form_type_id = decode(declaration_template_id, 102, 3, 104, 4,105, 3,
                                                                                              NULL)
                        LEFT JOIN department_report_period   drp2 ON drp2.department_id = drp.department_id
                                                                   AND drp2.report_period_id = new_rp.id
                                                                   AND drp2.is_active = drp.is_active
                                                                   AND ( drp2.correction_date IS NULL
	                                                                 AND drp.correction_date IS NULL
        	                                                         OR drp2.correction_date = drp.correction_date 
									)
                    WHERE
	                (dd.declaration_template_id IN (
	                    102,
                            104
	                ) or (dd.declaration_template_id=105 AND NOT EXISTS 
				(SELECT 1 FROM declaration_data_consolidation ddc WHERE 
				ddc.target_declaration_data_id = dd.id
				AND ddc.source_declaration_data_id is not null)) ) 
                );
                -- обновление периодов подразделений у 2-НДФЛ (1) и (2)
        UPDATE declaration_data d_d
        SET
            department_report_period_id = (
                SELECT
                    new_drp.id
                FROM
                    declaration_data           dd
                    JOIN department_report_period   drp ON drp.id = dd.department_report_period_id
                    JOIN report_period              rp ON rp.id = drp.report_period_id
                    JOIN report_period              new_rp ON rp.tax_period_id = new_rp.tax_period_id
                                                 AND rp.dict_tax_period_id = new_rp.dict_tax_period_id
                                                 AND new_rp.form_type_id = decode(declaration_template_id, 102, 3, 104, 4, 105, 3, 
                                                                                  NULL)
                    JOIN department_report_period   new_drp ON drp.department_id = new_drp.department_id
                                                             AND new_drp.report_period_id = new_rp.id
                                                             AND drp.is_active = new_drp.is_active
                                                             AND ( drp.correction_date IS NULL
                                                                   AND new_drp.correction_date IS NULL
                                                                   OR drp.correction_date = new_drp.correction_date )
                        WHERE
                    d_d.id = dd.id
            )
        WHERE
	                (d_d.declaration_template_id IN (
	                    102,
                            104
	                ) or (d_d.declaration_template_id=105 AND NOT EXISTS 
				(SELECT 1 FROM declaration_data_consolidation ddc WHERE 
				ddc.target_declaration_data_id = d_d.id
				AND ddc.source_declaration_data_id is not null)) ) 

                    AND NOT EXISTS (
                SELECT
                    1
                FROM
                    department_report_period   drp
                    JOIN report_period              rp ON drp.report_period_id = rp.id
                WHERE
                    drp.id = d_d.department_report_period_id
                    AND rp.form_type_id = decode(declaration_template_id, 102, 3, 104, 4, 105, 3, 
                                                         NULL)
            );
        --обновление периодов подразделений у 2-НДФЛ (ФЛ) - выставляем период как у источника
	UPDATE declaration_data dd
	SET
	    department_report_period_id = (
	        SELECT
	            dd2.department_report_period_id
	        FROM
            declaration_data_consolidation   ddc
	            JOIN declaration_data                 dd2 ON dd2.id = ddc.source_declaration_data_id
	        WHERE
	            dd.id = ddc.target_declaration_data_id
	    )
	WHERE
	    dd.declaration_template_id = 105 and exists (SELECT 1 FROM declaration_data_consolidation ddc WHERE 
				ddc.target_declaration_data_id = dd.id
				AND ddc.source_declaration_data_id is not null);

	--восстанавливаем уникальный констрейнт на REPORT_PERIOD
 	ALTER TABLE report_period ADD CONSTRAINT rep_per_uniq_tax_dict_frm_type UNIQUE (tax_period_id, dict_tax_period_id, form_type_id);
        </sql>
    </changeSet>

    <changeSet id="3.10.1-avoynov-1" author="avoynov" runAlways="true">
        <update tableName="DECLARATION_TEMPLATE">
            <column name="CREATE_SCRIPT" valueClobFile="templates-3.10.1/ndfl/report_2ndfl_1/v2016/report_2ndfl.groovy"/>
            <where>declaration_type_id = 102</where>
        </update>
        <update tableName="DECLARATION_TEMPLATE">
            <column name="CREATE_SCRIPT" valueClobFile="templates-3.10.1/ndfl/report_2ndfl_1/v2016/report_2ndfl.groovy"/>
            <where>declaration_type_id = 104</where>
        </update>
    </changeSet>


    <changeSet id="3.10.1-skononova-2" author="skononova">
	<sql splitStatements="false">
		CREATE TABLE REF_BOOK_OKTMO_TMP3
                      (
                      version   DATE NOT NULL,
                      code      VARCHAR2(11 CHAR) NOT NULL,
                      name      VARCHAR2(500 CHAR) NOT NULL,
                      razd      NUMBER(1)
                      )
	</sql>
	<loadData encoding="UTF-8" file="csv/oktmo.csv" tableName="REF_BOOK_OKTMO_TMP3" separator="|">
	            <column name="VERSION" type="date"/>
	            <column name="CODE" type="string"/>
	            <column name="NAME" type="string"/>
	            <column name="RAZD" type="string"/>
        </loadData>

	<sql>
            INSERT INTO ref_book_oktmo (id, record_id, version, status, code, name, razd)
	    SELECT seq_ref_book_record.nextval, seq_ref_book_record_row_id.nextval, tmp.version, 0, tmp.code, tmp.name, tmp.razd 
	    FROM ref_book_oktmo_TMP3 tmp
	    WHERE tmp.code NOT IN (SELECT code FROM ref_book_oktmo);
	</sql>
        <sql>
	   INSERT INTO ref_book_oktmo (id, record_id, version, status, code, name, razd)
		    SELECT seq_ref_book_record.nextval, (select max(record_id) from ref_book_oktmo c where c.code=src.code),
			   src.version, 0, src.code, src.name, src.razd 
		    FROM ref_book_oktmo_TMP3 src left join ref_book_oktmo dst 
				on dst.code = src.code and dst.name=src.name and dst.version  &lt;= src.version     		   
			where dst.id is null;
	</sql>
	<sql>
	merge into ref_book_oktmo dst using 
	    (select '96612101' as code, 'Курчалойское' as name, '1' as razd, to_date ('01.05.2019','dd.mm.yyyy') as version, 0 as status from dual union
	     select '96612101001','г Курчалой','2', to_date ('01.05.2019','dd.mm.yyyy'), 0 from dual union
	     select '76636402','Балягинское','1', to_date ('01.05.2019','dd.mm.yyyy'), 0 from dual union
	     select '76636402101','с Баляга','2', to_date ('01.05.2019','dd.mm.yyyy'), 0 from dual union
	     select '76636402106','с Кули','2', to_date ('01.05.2019','dd.mm.yyyy'), 0 from dual union
	     select '76636452','Тарбагатайское','1', to_date ('01.05.2019','dd.mm.yyyy'), 0 from dual union
	     select '76636452101','c Тарбагатай','2', to_date ('01.05.2019','dd.mm.yyyy'), 0 from dual union
	     select '76636452106','c Нижний Тарбагатай','2', to_date ('01.05.2019','dd.mm.yyyy'), 0 from dual 	    )  src
	    on (dst.code=src.code and dst.version=src.version and dst.status=src.status)
	    when not matched then insert (id, code, name, version, status, record_id, razd)
	    values (seq_ref_book_record.nextval, src.code, src.name, src.version, src.status, seq_ref_book_record_row_id.nextval, src.razd);

	merge into ref_book_oktmo dst using 
	    (select  '96612419' as code, 'Курчалойское' as name, '1' as razd, to_date ('01.05.2019','dd.mm.yyyy') as version, 2 as status from dual union
	     select '96612419101','c Курчалой','2', to_date ('01.05.2019','dd.mm.yyyy'), 2 from dual union
	     select '76636152','Балягинское','1', to_date ('01.05.2019','dd.mm.yyyy'), 2 from dual union
	     select '76636152051','пгт Баляга','2', to_date ('01.05.2019','dd.mm.yyyy'), 2 from dual union
	     select '76636152106','с Кули','2', to_date ('01.05.2019','dd.mm.yyyy'), 2 from dual union
	     select '76636158','Тарбагатайское','1', to_date ('01.05.2019','dd.mm.yyyy'), 2 from dual union
	     select '76636158051','пгт Тарбагатай','2', to_date ('01.05.2019','dd.mm.yyyy'), 2 from dual 
	    )  src
	    on (dst.code=src.code and dst.version=src.version)
	    when not matched then insert (id, code, name, version, status, record_id, razd)
	    values (seq_ref_book_record.nextval, src.code, src.name, src.version, src.status, 
	   (select max(record_id) from ref_book_oktmo c where c.code=src.code and c.status=0),  src.razd);

	merge into ref_book_oktmo dst using 
	    (
	     select '04614452' as code, 'сельсовет Памяти 13 Борцов' as name, '1' as razd, to_date ('01.06.2019','dd.mm.yyyy') as version, 0 as status from dual union
	     select '04614452101','п Памяти 13 Борцов','2', to_date ('01.06.2019','dd.mm.yyyy'), 0 from dual union
	     select '04614452106','д Малый Кемчуг','2', to_date ('01.06.2019','dd.mm.yyyy'), 0 from dual union
	     select '04639450','поселок Тинской','1', to_date ('01.06.2019','dd.mm.yyyy'), 0 from dual union
	     select '04639450101','п Тинской','2', to_date ('01.06.2019','dd.mm.yyyy'), 0 from dual 
	    ) src
	    on (dst.code=src.code and dst.version=src.version and dst.status=src.status)
	    when not matched then insert (id, code, name, version, status, record_id, razd)
	    values (seq_ref_book_record.nextval, src.code, src.name, src.version, src.status, seq_ref_book_record_row_id.nextval, src.razd);


	merge into ref_book_oktmo dst using 
	    (select  '04614156' as code, 'поселок Памяти 13 Борцов' as name, '1' as razd, to_date ('01.06.2019','dd.mm.yyyy') as version, 2 as status from dual union
	     select '04614156051','рп Памяти 13 Борцов','2', to_date ('01.06.2019','dd.mm.yyyy'), 2 from dual union
	     select '04614156106','д Малый Кемчуг','2', to_date ('01.06.2019','dd.mm.yyyy'), 2 from dual union
	     select '04639160','поселок Тинской','1', to_date ('01.06.2019','dd.mm.yyyy'), 2 from dual union
	     select '04639160051','рп Тинской','2', to_date ('01.06.2019','dd.mm.yyyy'), 2 from dual  union
	     select '76636158106','с Нижний Тарбагатай','2', to_date ('01.05.2019','dd.mm.yyyy'), 2 from dual
	    )  src
	    on (dst.code=src.code and dst.version=src.version)
	    when not matched then insert (id, code, name, version, status, record_id, razd)
	    values (seq_ref_book_record.nextval, src.code, src.name, src.version, src.status, 
	   (select max(record_id) from ref_book_oktmo c where c.code=src.code and c.status=0),  src.razd)
	   where (select max(record_id) from ref_book_oktmo c where c.code=src.code and c.status=0) is not null;

	</sql>
	<sql>
		drop table REF_BOOK_OKTMO_TMP3
	</sql>
    </changeSet>

	<changeSet id="3.10.1-adudenko-1" author="adudenko">
		<update tableName="BLOB_DATA">
			<column name="data"
					valueBlobFile="templates-3.10.1/refbook/declaration_type.groovy"/>
			<where>id in (select script_id from ref_book r where r.id = 207)</where>
		</update>
	</changeSet>

    <!-- https://jira.aplana.com/browse/SBRFNDFL-8786 Реализовать запись в ЖА для спецотчетов -->
    <changeSet id="3.10.1-avoynov-2" author="avoynov" runAlways="true">
        <update tableName="DECLARATION_TEMPLATE">
            <column name="CREATE_SCRIPT" valueClobFile="templates-3.10.1/ndfl/consolidated_rnu_ndfl/v2016/consolidated_rnu_ndfl.groovy"/>
            <where>declaration_type_id = 101</where>
        </update>
        <update tableName="DECLARATION_TEMPLATE">
            <column name="CREATE_SCRIPT" valueClobFile="templates-3.10.1/ndfl/primary_rnu_ndfl/v2016/primary_rnu_ndfl.groovy"/>
            <where>declaration_type_id = 100</where>
        </update>
    </changeSet>

    <changeSet id="3.10.1-adudenko-2" author="adudenko">
		<sql>
			update ref_book_form_type set code = '2-НДФЛ (1)' where id = 3;
			update ref_book_form_type set name = '2-НДФЛ с признаком 1' where id = 3;

			update ref_book_form_type set code = '2-НДФЛ (2)' where id = 4;
			update ref_book_form_type set name = '2-НДФЛ с признаком 2' where id = 4;

			update ref_book_form_type set code = '6-НДФЛ' where id = 5;
			update ref_book_form_type set name = '6-НДФЛ' where id = 5;

			update ref_book_form_type set code = '2-НДФЛ (ФЛ)' where id = 6;
		</sql>
    </changeSet>
	<!-- https://jira.aplana.com/browse/SBRFNDFL-8860 Ошибка при создании 6-НДФЛ -->
	<changeSet id="3.10.1-smolokovskikh-1" author="smolokovskikh" runAlways="true">
		<update tableName="DECLARATION_TEMPLATE">
			<column name="CREATE_SCRIPT" valueClobFile="templates-3.10.1/ndfl/report_6ndfl/v2016/report_6ndfl.groovy"/>
			<where>declaration_type_id = 103</where>
		</update>
	</changeSet>

	<!-- https://jira.aplana.com/browse/SBRFNDFL-9000 Реализовать корректировку итогового уведомления операции обновления данных ФЛ -->
	<changeSet id="3.10.1-mchernyakov-1" author="mchernyakov">
		<update tableName="DECL_TEMPLATE_EVENT_SCRIPT">
			<column name="script" valueClobFile="templates-3.10.1\ndfl\primary_rnu_ndfl\v2016\primary_rnu_ndfl_update_persons_data.groovy"/>
			<where>DECLARATION_TEMPLATE_ID = 100 and EVENT_ID = 11</where>
		</update>
	</changeSet>

	<changeSet id="3.10.1-mchernyakov-2" author="mchernyakov">
		<update tableName="DECL_TEMPLATE_EVENT_SCRIPT">
			<column name="script" valueClobFile="templates-3.10.1\ndfl\consolidated_rnu_ndfl\v2016\consolidated_rnu_ndfl_update_persons_data.groovy"/>
			<where>DECLARATION_TEMPLATE_ID = 101 and EVENT_ID = 11</where>
		</update>
	</changeSet>

	<changeSet id="3.10.1-adudenko-3" author="adudenko" runAlways="true">
		<update tableName="blob_data">
			<column name="data"
					valueBlobFile="templates-3.10.1/refbook/department_configs.groovy"/>
			<where>id = (select script_id from ref_book r where r.id = 951)</where>
		</update>
	</changeSet>
    <changeSet id="3.10.1-skononova-3" author="skononova">
	<sql >
	update /*+ index (ref_book_person IDX_REF_BOOK_PERSON_SRCH_FIO) */ ref_book_person set 
		LAST_NAME = upper(LAST_NAME),
		FIRST_NAME = upper(FIRST_NAME),
		MIDDLE_NAME = upper(MIDDLE_NAME),
		INN = upper(INN),
		INN_FOREIGN = upper(INN_FOREIGN),
		SNILS = upper(SNILS),
		DISTRICT = upper (DISTRICT), CITY = upper (CITY), 
		LOCALITY = upper (LOCALITY), STREET = upper (STREET), 
		HOUSE = upper (HOUSE), BUILD = upper (BUILD),
		APPARTMENT = upper (APPARTMENT), ADDRESS_FOREIGN = upper (ADDRESS_FOREIGN),
		search_LAST_NAME = replace(nvl(upper(last_name),'empty'),' ',''),
		search_FIRST_NAME = replace(nvl(upper(FIRST_name),'empty'),' ',''),
		search_MIDDLE_NAME = replace(nvl(upper(MIDDLE_name),'empty'),' ',''),
                search_INN = replace(nvl(upper(inn),'empty'),' ',''),
		search_INN_FOREIGN = replace(nvl(upper(inn_foreign),'empty'),' ',''),
		search_SNILS = replace(replace(nvl(upper(snils),'empty'),' ',''),'-','')
		where upper(search_last_name)!=search_last_name or 
		      upper(search_first_name)!=search_first_name or
		      upper(search_middle_name)!=search_middle_name;

	update ndfl_person set 
		id_doc_number = upper(id_doc_number),
		LAST_NAME = upper(LAST_NAME),
		FIRST_NAME = upper(FIRST_NAME),
		MIDDLE_NAME = upper(MIDDLE_NAME),
		INN_NP = upper(INN_NP),
		INN_FOREIGN = upper(INN_FOREIGN),
		SNILS = upper(SNILS),
		INP = upper(INP), 
		AREA = upper (AREA), CITY = upper (CITY), 
		LOCALITY = upper (LOCALITY), 
		STREET = upper (STREET), 
		HOUSE = upper (HOUSE), 
		BUILDING = upper (BUILDING), 
		FLAT = upper (FLAT), 
		ADDRESS = upper(ADDRESS),

		search_LAST_NAME = replace(nvl(upper(last_name),'empty'),' ',''),
		search_FIRST_NAME = replace(nvl(upper(FIRST_name),'empty'),' ',''),
		search_MIDDLE_NAME = replace(nvl(upper(MIDDLE_name),'empty'),' ',''),
                search_INN = replace(nvl(upper(inn_np),'empty'),' ',''),
		search_INN_FOREIGN = replace(nvl(upper(inn_foreign),'empty'),' ',''),
		search_SNILS = replace(replace(nvl(upper(snils),'empty'),' ',''),'-','')
		where upper(search_last_name)!=search_last_name or 
		      upper(search_first_name)!=search_first_name or
		      upper(search_middle_name)!=search_middle_name; 
	</sql>
    </changeSet>
	
</databaseChangeLog>
        