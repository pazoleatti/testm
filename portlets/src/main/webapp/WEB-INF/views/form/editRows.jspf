<%@ page contentType="text/html; UTF-8" pageEncoding="UTF-8"%>
<div dojoType="dijit.layout.ContentPane" title="Начальные данные">
	<script type="dojo/connect" event="onShow">
		if (${namespace}_rowsGrid != null) {
			return;
		}
		var rows = ${namespace}_form.predefinedRows;
		if (rows == null) {
			rows = [];
		} else {
			dojo.forEach(rows, function(row, index) { row.id = ${namespace}_generateId();});
		}

		var rowsStore = new dojo.data.ItemFileWriteStore({data: { identifier: 'id', items: rows}});
			${namespace}_columnsGrid.store.fetch({
			columnDescriptors : [
				{field: 'alias', width: 10, name: 'Код строки', editable: true},
				{field: 'order', width: '1em', name: 'Порядок', styles: 'display: none;'}
			],
			onItem: function(item, request) {
				var d = {
					name: ${namespace}_columnsGrid.store.getValue(item, 'name'),
					field: ${namespace}_columnsGrid.store.getValue(item, 'alias'),
					width: ${namespace}_columnsGrid.store.getValue(item, 'width'),
					editable: true
				};
				// TODO: функции форматтеры скопированы из страницы редактирования данных формы
				// чтобы избежать копипасты хорошо бы вынести в js-файл
				var formatDate = function(inDatum){
					if (inDatum == null || inDatum == '') {
						return '';
					}
					return dojo.date.locale.format(new Date(inDatum), this.constraint);
				};
				var formatNumber = function(inDatum){
					if (null == inDatum || '' == inDatum || isNaN(inDatum)) {
						return '';
					}
					return inDatum;
				};
				var type = ${namespace}_columnsGrid.store.getValue(item, 'type');
				if (type == 'numeric') {
					d.type = dojox.grid.cells._Widget;
					d.widgetClass = dijit.form.NumberTextBox;
					d.constraint = {
						places: ${namespace}_columnsGrid.store.getValue(item, 'precision'),
						formatter: formatNumber
					};
				} else if (type == 'date') {
					d.type = dojox.grid.cells.DateTextBox;
					d.constraint = {
						datePattern: 'dd.MM.yyyy',
						selector: 'date',
						formatter: formatDate
					};
				}
				request.columnDescriptors[request.columnDescriptors.length] = d;
			},
			onComplete: function(items, request) {
				${namespace}_rowsGrid = new dojox.grid.DataGrid({
					store: rowsStore,
					structure: [request.columnDescriptors],
					sortInfo: '2', <%-- сортируем по скрытому полю order --%>
					autoHeight: true,
					canSort: function(index) {
						return false;
					},
					selectionMode: 'single'
				});
				${namespace}_rowsGrid.placeAt('${namespace}_rowsGridDiv');
				${namespace}_rowsGrid.startup();
			}
		});
	</script>
	<button dojoType="dijit.form.Button">
		Добавить строку
		<script jsId="${namespace}_addRowButton" type="dojo/connect" event="onClick">
			${namespace}_rowsGrid.store.fetch({
				maxOrder: 1,
				onItem: function(item, request) {
					var ord = ${namespace}_rowsGrid.store.getValue(item, 'order');
					if (request.maxOrder < ord) {
						request.maxOrder = ord;
					}
				},
				onComplete: function(items, request) {
					${namespace}_rowsGrid.store.newItem({
						id: ${namespace}_generateId(),
						alias: 'alias' + request.maxOrder,
						order: request.maxOrder + 1
					});
				}
			});
		</script>
	</button>
	<div id="${namespace}_rowsGridDiv"></div>
</div>