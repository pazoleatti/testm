<%@ page contentType="text/html; UTF-8" pageEncoding="UTF-8"%>
<div dojoType="dijit.layout.ContentPane" title="Начальные данные">
	<script type="dojo/connect" event="onShow">
		${namespace}_columnsGrid.acceptChanges();
		${namespace}_columnsGrid.store.fetch({
			columnDescriptors : [
				{field: 'alias', width: 10, name: 'Код строки', editable: true},
				{field: 'order', width: '1em', name: 'Порядок', styles: 'display: none;'}
			],
			sort: [{attribute: 'order'}],
			onItem: function(item, request) {
				var d = {
					name: ${namespace}_columnsGrid.store.getValue(item, 'name'),
					field: ${namespace}_columnsGrid.store.getValue(item, 'alias'),
					width: ${namespace}_columnsGrid.store.getValue(item, 'width'),
					editable: true
				};
				var type = ${namespace}_columnsGrid.store.getValue(item, 'type');
				if (type == 'numeric') {
					d.type = dojox.grid.cells._Widget;
					d.widgetClass = dijit.form.NumberTextBox;
					d.constraint = {
						places: ${namespace}_columnsGrid.store.getValue(item, 'precision')						
					};
					d.formatter = aplana_formatNumber;
				} else if (type == 'date') {
					d.type = dojox.grid.cells.DateTextBox;
					d.constraint = {
						datePattern: 'dd.MM.yyyy',
						selector: 'date'
					};
					d.formatter = aplana_formatDate;
				}
				request.columnDescriptors.push(d);
			},
			onComplete: function(items, request) {
				if (${namespace}_rowsGrid == null) {
					${namespace}_rowsGrid = new dojox.grid.DataGrid({
						store: ${namespace}_rowsStore,
						structure: [request.columnDescriptors],
						sortInfo: '2', <%-- сортируем по скрытому полю order --%>
						autoHeight: true,
						canSort: function(index) {
							return false;
						},
						selectionMode: 'single',
						onSelected: function(rowIndex) {
							${namespace}_rowUpButton.attr('disabled', rowIndex == 0);
							${namespace}_rowDownButton.attr('disabled', rowIndex == this.rowCount - 1);
							${namespace}_removeRowButton.attr('disabled', false);
						}
					});
					${namespace}_rowsGrid.placeAt('${namespace}_rowsGridDiv');
					${namespace}_rowsGrid.startup();
				} else {
					${namespace}_rowsGrid.attr('structure', [request.columnDescriptors]);
				}
			}
		});
	</script>
	<button dojoType="dijit.form.Button">
		Добавить строку
		<script jsId="${namespace}_addRowButton" type="dojo/connect" event="onClick">
			${namespace}_rowsGrid.store.fetch({
				maxOrder: 1,
				onItem: function(item, request) {
					var ord = ${namespace}_rowsGrid.store.getValue(item, 'order');
					if (request.maxOrder < ord) {
						request.maxOrder = ord;
					}
				},
				onComplete: function(items, request) {
					${namespace}_rowsGrid.store.newItem({
						id: ${namespace}_generateId(),
						alias: 'alias' + request.maxOrder,
						order: request.maxOrder + 1
					});
				}
			});
		</script>
	</button>
	<button jsId="${namespace}_removeRowButton" dojoType="dijit.form.Button" disabled="true">
		Удалить
		<script type="dojo/connect" event="onClick">
			var item = ${namespace}_getGridSelectedItem(${namespace}_rowsGrid);
			if (item != null) {
				${namespace}_rowsGrid.store.deleteItem(item);
			}
		</script>
	</button>
	<button jsId="${namespace}_rowUpButton" dojoType="dijit.form.Button" disabled="true">
		Вверх
		<script type="dojo/connect" event="onClick">
			${namespace}_swapSelectedItem(${namespace}_rowsGrid, 'order', -1);
		</script>
	</button>	
	<button jsId="${namespace}_rowDownButton" dojoType="dijit.form.Button" disabled="true">
		Вниз
		<script type="dojo/connect" event="onClick">
			${namespace}_swapSelectedItem(${namespace}_rowsGrid, 'order', 1);
		</script>		
	</button>
	<div id="${namespace}_rowsGridDiv"></div>
</div>