<%@ page contentType="text/html; UTF-8" pageEncoding="UTF-8"%>
<script type="text/javascript">
	var ${namespace}_onShowRowsPane = function() {
		${namespace}_columnsGrid.acceptChanges();
		var additionalColumns = [
			{field: 'alias', width: 10, name: 'Код строки', editable: true, groupName: null}, 
			{field: 'order', width: 1, name: 'Порядок', groupName: null}
		];
		aplana_createGridColumnDescriptors(${namespace}_columnsGrid.store, '<%=request.getContextPath()%>', additionalColumns).addCallback(function(params) {
			// Прячём ячейку с полем order
			dojo.forEach(params.structure[0].cells, function(row) {
				row[1].styles = 'display: none;';
				<%-- В режиме редактирования формы мы должны иметь возможность отредактировать любую ячейку в таблице--%>
				dojo.forEach(row, function(item) {
					item.editable = true; 
				});				
			});

			if (${namespace}_rowsGrid == null) {
				${namespace}_rowsGrid = new dojox.grid.DataGrid({
					store: ${namespace}_rowsStore,
					structure: params.structure,
					sortInfo: '2', <%-- сортируем по скрытому полю order --%>
					autoHeight: true,
					autoWidth: true,
					canSort: function(index) {
						return false;
					},
					selectionMode: 'single',
					onSelected: function(rowIndex) {
						${namespace}_rowUpButton.attr('disabled', rowIndex == 0);
						${namespace}_rowDownButton.attr('disabled', rowIndex == this.rowCount - 1);
						${namespace}_removeRowButton.attr('disabled', false);
					}
				});
				${namespace}_rowsGrid.placeAt('${namespace}_rowsGridDiv');
				${namespace}_rowsGrid.startup();
			} else {
				${namespace}_rowsGrid.attr('structure', params.structure);
				${namespace}_rowsGrid._refresh(true);
			}
			${namespace}_rowsGrid.rowItemPrototype = params.rowItemPrototype;
			return params;
		});
	}
</script>
<div dojoType="dijit.layout.ContentPane" title="Начальные данные" onShow="${namespace}_onShowRowsPane">
	<button dojoType="dijit.form.Button">
		Добавить строку
		<script jsId="${namespace}_addRowButton" type="dojo/connect" event="onClick">
			var store = ${namespace}_rowsGrid.store;
			aplana_findStoreMaxValue(store, 'order').addCallback(function(maxOrder) {
				++maxOrder;
				var newItem = {
					id: ${namespace}_generateId(),
					alias: 'alias' + maxOrder,
					order: maxOrder
				};
				dojo.mixin(newItem, ${namespace}_rowsGrid.rowItemPrototype);
				store.newItem(newItem);
			});
		</script>
	</button>
	<button jsId="${namespace}_removeRowButton" dojoType="dijit.form.Button" disabled="true">
		Удалить
		<script type="dojo/connect" event="onClick">
			var item = aplana_getGridSelectedItem(${namespace}_rowsGrid);
			if (item != null) {
				${namespace}_rowsGrid.store.deleteItem(item);
			}
		</script>
	</button>
	<button jsId="${namespace}_rowUpButton" dojoType="dijit.form.Button" disabled="true">
		Вверх
		<script type="dojo/connect" event="onClick">
			aplana_moveGridSelectedItem(${namespace}_rowsGrid, 'order', -1);
		</script>
	</button>	
	<button jsId="${namespace}_rowDownButton" dojoType="dijit.form.Button" disabled="true">
		Вниз
		<script type="dojo/connect" event="onClick">
			aplana_moveGridSelectedItem(${namespace}_rowsGrid, 'order', 1);
		</script>		
	</button>
	<div id="${namespace}_rowsGridDiv"></div>
</div>