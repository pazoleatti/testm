<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- NamedJdbcTemplate, используемый в jdbc-Dao (в частности - в наследниках AbstractDao) -->
	<bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg index="0" ref="dataSource"/>
	</bean>
	
	<tx:annotation-driven/>	

	<!--  MyBatis configuration and DAOs--> 	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/com/aplana/sbrf/taxaccounting/mybatis-configuration.xml"/>
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
  		<property name="basePackage" value="com.aplana.sbrf.taxaccounting.dao.dictionary.mapper;com.aplana.sbrf.taxaccounting.dao.security.mapper;com.aplana.sbrf.taxaccounting.dao.mapper" />
	</bean>

	<!-- Dictionaries -->
	<bean name="stringDictionaryManager" class="com.aplana.sbrf.taxaccounting.dao.dataprovider.impl.DictionaryManagerImpl">
		<property name="dataProviders">
			<map>
				<entry key="transportTypeCode">
					<bean class="com.aplana.sbrf.taxaccounting.dao.dataprovider.impl.StringDictionaryDataProvider"
						p:dictionaryName="ТН - Коды видов ТС"
						p:sqlQuery="select code as value, name from transport_type_code order by code"
					/>
				</entry>
				<entry key="transportOkato">
					<bean class="com.aplana.sbrf.taxaccounting.dao.dataprovider.impl.StringDictionaryDataProvider"
						p:dictionaryName="ТН - Коды ОКАТО"
						p:sqlQuery="select okato as value, name from transport_okato order by okato"
					/>
				</entry>
				<entry key="transportTaxBenefitCode">
					<bean class="com.aplana.sbrf.taxaccounting.dao.dataprovider.impl.StringDictionaryDataProvider"
						p:dictionaryName="ТН - Коды налоговых льгот"
						p:sqlQuery="select code as value, name from transport_tax_benefit_code order by code"
					/>
				</entry>
			</map>
		</property>
	</bean>

	<bean name="numericDictionaryManager" class="com.aplana.sbrf.taxaccounting.dao.dataprovider.impl.DictionaryManagerImpl">
		<property name="dataProviders">
			<map>
				<entry key="transportTaxBaseUnitCode">
					<bean class="com.aplana.sbrf.taxaccounting.dao.dataprovider.impl.NumericDictionaryDataProvider"
						  p:dictionaryName="ТН - Коды единиц измерения"
						  p:sqlQuery="select code as value, name from transport_unit_code order by code"
					/>
				</entry>
				<entry key="transportEcoClass">
					<bean class="com.aplana.sbrf.taxaccounting.dao.dataprovider.impl.NumericDictionaryDataProvider"
						  p:dictionaryName="ТН - Коды классов экологических стандартов"
						  p:sqlQuery="select code as value, name from transport_eco_class order by code"
					/>
				</entry>
			</map>
		</property>
	</bean>

	<!-- JDBC-based DAOs -->
	<context:component-scan base-package="com.aplana.sbrf.taxaccounting.dao.impl"/>
	<context:component-scan base-package="com.aplana.sbrf.taxaccounting.dao.dictionary.impl"/>
	<context:component-scan base-package="com.aplana.sbrf.taxaccounting.dao.security.impl"/>
	<!-- Services -->
	<context:component-scan base-package="com.aplana.sbrf.taxaccounting.service.impl"/>
</beans>